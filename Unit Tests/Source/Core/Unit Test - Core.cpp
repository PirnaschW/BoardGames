#include "Unit Test - Core.h"

#define VC_EXTRALEAN        // Exclude rarely-used stuff from Windows headers
#include "targetver.h"
#include <windows.h>
#include <winuser.h>
#include <debugapi.h>

namespace Microsoft
{
  namespace VisualStudio
  {
    namespace CppUnitTestFramework
    {

      //template<> std::wstring ToString<PieceColor>(const PieceColor& p) { std::wstringstream _s; _s << '?'; return _s.str(); }
      //template<> std::wstring ToString<PieceColor>(const PieceColor* p) { std::wstringstream _s; _s << '?'; return _s.str(); }
      //template<> std::wstring ToString<PieceColor>(      PieceColor* p) { std::wstringstream _s; _s << '?'; return _s.str(); }

      template<> std::wstring ToString<Offset>(const Offset& o) { Location l{ BoardPartID::Stage,0,0 }; l +=  o; std::wstringstream _s; _s << '(' << l.x_ << '|' << l.y_ << ')'; return _s.str(); }
      template<> std::wstring ToString<Offset>(const Offset* o) { Location l{ BoardPartID::Stage,0,0 }; l += *o; std::wstringstream _s; _s << '(' << l.x_ << '|' << l.y_ << ')'; return _s.str(); }
      template<> std::wstring ToString<Offset>(      Offset* o) { Location l{ BoardPartID::Stage,0,0 }; l += *o; std::wstringstream _s; _s << '(' << l.x_ << '|' << l.y_ << ')'; return _s.str(); }

      template<> std::wstring ToString<Location>(const Location& l) { std::wstringstream _s; _s << '(' << l. x_ << '|' << l. y_ << ')'; return _s.str(); }
      template<> std::wstring ToString<Location>(const Location* l) { std::wstringstream _s; _s << '(' << l->x_ << '|' << l->y_ << ')'; return _s.str(); }
      template<> std::wstring ToString<Location>(      Location* l) { std::wstringstream _s; _s << '(' << l->x_ << '|' << l->y_ << ')'; return _s.str(); }

      //template<> std::wstring ToString<Field>(const Field& f) { std::wstringstream _s; _s << ToString(f. GetLocation()) << ',' << static_cast<const void*>(&f. GetPiece()); return _s.str(); }
      //template<> std::wstring ToString<Field>(const Field* f) { std::wstringstream _s; _s << ToString(f->GetLocation()) << ',' << static_cast<const void*>(&f->GetPiece()); return _s.str(); }
      //template<> std::wstring ToString<Field>(      Field* f) { std::wstringstream _s; _s << ToString(f->GetLocation()) << ',' << static_cast<const void*>(&f->GetPiece()); return _s.str(); }

      //template<> std::wstring ToString<Fields>(const Fields& f) { std::wstringstream _s; _s << f. size(); return _s.str(); }
      //template<> std::wstring ToString<Fields>(const Fields* f) { std::wstringstream _s; _s << f->size(); return _s.str(); }
      //template<> std::wstring ToString<Fields>(      Fields* f) { std::wstringstream _s; _s << f->size(); return _s.str(); }

      template<> std::wstring ToString<>(const Piece& p) { std::wstringstream _s; _s << static_cast<const void*>(&p); return _s.str(); }
      template<> std::wstring ToString<>(const Piece* p) { std::wstringstream _s; _s << static_cast<const void*>( p); return _s.str(); }
      template<> std::wstring ToString<>(      Piece* p) { std::wstringstream _s; _s << static_cast<const void*>( p); return _s.str(); }

      template<> std::wstring ToString<>(const PositionValue& p) { std::wstringstream _s; _s << static_cast<int>( p); return _s.str(); }
      template<> std::wstring ToString<>(const PositionValue* p) { std::wstringstream _s; _s << static_cast<int>(*p); return _s.str(); }
      template<> std::wstring ToString<>(      PositionValue* p) { std::wstringstream _s; _s << static_cast<int>(*p); return _s.str(); }

    }
  }
}

#include <functional>

namespace UnitTestCore
{
  TEST_MODULE_INITIALIZE(TestCore)
  {
    PMap.Register(Piece::NoPiece);
    PMap.Register(Piece::NoTile);
    PMap.Register(CorePiece::WC);
    PMap.Register(CorePiece::BC);
  }

  TEST_CLASS(_PieceColor)
  {
  public:
    std::stringstream s;
    // create a lambda that can be called with void() lambdas and executes them, to test serialization:
    std::function<std::string(std::function<void()>)> TrySerialize = [&](auto f) -> std::string
    {
      s.str().clear();  // clears flags only!
      s.str("");        // clears content
      f();
      return s.str();
    };

    TEST_METHOD(_OperatorEqual)
    {
      static_assert(PieceColor::Void == PieceColor::Void, "PieceColor singletons are not constexpr");

      Assert::IsFalse(&PieceColor::Void == nullptr);

      Assert::IsTrue(PieceColor::Void == PieceColor::Void);
      Assert::IsFalse(PieceColor::Void == PieceColor::NoColor);
      Assert::IsFalse(PieceColor::Void == PieceColor::White);
      Assert::IsFalse(PieceColor::Void == PieceColor::Black);
      Assert::IsFalse(PieceColor::NoColor == PieceColor::Void);
      Assert::IsFalse(PieceColor::White == PieceColor::Void);
      Assert::IsFalse(PieceColor::Black == PieceColor::Void);

      Assert::IsFalse(PieceColor::Void != PieceColor::Void);
      Assert::IsTrue(PieceColor::Void != PieceColor::White);
      Assert::IsTrue(PieceColor::Void != PieceColor::Black);

      Assert::IsTrue(PieceColor::Void == 'X');

    }

    TEST_METHOD(_OperatorBitwiseInvert)
    {
      Assert::IsTrue(~PieceColor::White == PieceColor::Black);
      Assert::IsTrue(PieceColor::White == ~PieceColor::Black);
      Assert::IsTrue(PieceColor::Black.operator~() == PieceColor::White);
      Assert::IsTrue(~PieceColor::NoColor == PieceColor::Void);
      Assert::IsTrue(~PieceColor::Void == PieceColor::Void);
    }

    TEST_METHOD(_IsPlayable)
    {
      Assert::IsTrue (PieceColor::White  .IsPlayable());
      Assert::IsTrue (PieceColor::Black  .IsPlayable());
      Assert::IsFalse(PieceColor::NoColor.IsPlayable());
      Assert::IsFalse(PieceColor::Void   .IsPlayable());
    }

    TEST_METHOD(_GetHash)
    {
      Assert::IsTrue(PieceColor::Void.GetHash() == std::hash<char>()('X'));
      Assert::IsTrue(PieceColor::Black.GetHash() == std::hash<char>()('B'));
    }
    TEST_METHOD(_Serialize)
    {
      Assert::IsTrue(TrySerialize([this]() { PieceColor::Black.Serialize(s); }) == "B");
      Assert::IsTrue(TrySerialize([this]() { PieceColor::White.Serialize(s); }) == "W");
      Assert::IsTrue(TrySerialize([this]() { PieceColor::Void.Serialize(s); }) == "X");
      Assert::IsTrue(TrySerialize([this]() { PieceColor::NoColor.Serialize(s); }) == " ");
    }
  };

  TEST_CLASS(_TileColor)
  {
  public:
    std::stringstream s;
    // create a lambda that can be called with void() lambdas and executes them, to test serialization:
    std::function<std::string(std::function<void()>)> TrySerialize = [&](auto f) -> std::string
    {
      s.str().clear();  // clears flags only!
      s.str("");        // clears content
      f();
      return s.str();
    };

    TEST_METHOD(_OperatorEqual)
    {
      Assert::IsFalse(&TileColor::Light == nullptr);

      Assert::IsFalse(&TileColor::Light == &TileColor::Dark);
      Assert::IsFalse(&TileColor::Light == &TileColor::Small);
      Assert::IsFalse(&TileColor::Dark == &TileColor::Small);

      Assert::IsTrue(TileColor::Light == TileColor::Light);
      Assert::IsFalse(TileColor::Light != TileColor::Light);
      Assert::IsTrue(TileColor::Light != TileColor::Dark);
      Assert::IsFalse(TileColor::Light == TileColor::Dark);
      Assert::IsFalse(TileColor::Light == TileColor::Small);
      Assert::IsTrue(TileColor::Dark != TileColor::Light);
      Assert::IsFalse(TileColor::Dark == TileColor::Light);
    }
    TEST_METHOD(_Serialize)
    {
      Assert::IsTrue(TrySerialize([this]() { TileColor::Light.Serialize(s); }) == "L");
      Assert::IsTrue(TrySerialize([this]() { TileColor::Dark.Serialize(s); }) == "D");
      Assert::IsTrue(TrySerialize([this]() { TileColor::Small.Serialize(s); }) == "l");
    }
  };

  TEST_CLASS(_Offset)
  {
  public:
    TEST_METHOD(_OperatorEqual)
    {
      Offset o1{ 3, 5 };
      Offset o2 = o1 * 3;
      Offset o3{ 9, 15 };
      Assert::AreEqual(o2, o3);
      Assert::IsTrue(o2 == o2);
      Assert::IsTrue(o2 == o3);
      Assert::IsTrue(o3 == o2);
      Assert::IsFalse(o2 == o1);
      Assert::IsTrue(o1 != o3);
      Assert::IsTrue(o3 != o1);
      Assert::IsFalse(o2 != o3);
    }
    TEST_METHOD(_Rotate)
    {
      Offset o1{ 3, 5 };
      Offset o2 = o1 * 3;
      Offset o3{ 9, 15 };
      Offset o4 = o3.Rotate(true);
      Assert::IsTrue(o4.Rotate(false) == o3);
      Offset o5 = o4.Rotate();
      Assert::IsTrue(o5.Rotate(false) == o4);
      Offset o6 = o5.Rotate().Rotate();
      Assert::IsTrue(o6 == o3);
    }
    TEST_METHOD(_IsParallel)
    {
      Offset o1{ 3, 5 };
      Offset o2 = o1 * 3;
      Offset o3{ 9, 15 };
      Offset o4 = o3.Rotate(true);
      Offset o5 = o4.Rotate();
      Offset o6 = o5.Rotate().Rotate();

      Assert::IsTrue(o3.IsParallel(o5));
      Assert::IsTrue(o1.IsParallel(o2));
      Assert::IsTrue(o2.IsParallel(o1));
      Offset o7{ 2,5 };
      Offset o8{ 5,3 };
      Offset o9{ -66,-110 };
      Assert::IsFalse(o1.IsParallel(o7));
      Assert::IsFalse(o1.IsParallel(o8));
      Assert::IsTrue(o1.IsParallel(o9));
    }
  };

  TEST_CLASS(_Location)
  {
  public:
    TEST_METHOD(OperatorEqual)
    {
      Location l1(BoardPartID::Stage, 2U, 3U);
      Assert::IsTrue(l1 == l1);
      Assert::IsFalse(l1 != l1);

      Offset o1{ 3, 5 };
      Offset o2 = o1 * 3;
      Location l2 = l1 + o1;
      Location l3(BoardPartID::Stage, 5U, 8U);
      Location l4 = l1;
      Assert::IsTrue(l4 == l1);
      Assert::IsFalse(l4 != l1);
      Assert::IsTrue(l1 == l4);
      Assert::IsFalse(l1 != l4);
    }

    TEST_METHOD(_OperatorPlus)
    {
      Offset o1{ 3, 5 };
      Offset o2 = o1 * 3;
      Location l1(BoardPartID::Stage, 2U, 3U);
      Location l2 = l1 + o1;
      Location l3(BoardPartID::Stage, 5U, 8U);
      Location l4 = l1;

      l4 += o2;
      Location l5(BoardPartID::Stage, 11U, 18U);
      Location l6 = l1 + o1 * 3;

      Assert::AreEqual(l4, l5);
      Assert::AreEqual(l6, l5);
      Assert::AreNotEqual(l3, l5);
      Assert::IsTrue(l4 == l5);
      Assert::IsTrue(l6 == l5);
      Assert::IsFalse(l3 == l5);
    }
  };

  TEST_CLASS(_PValue)
  {
  public:
    TEST_METHOD(_OperatorEqual)
    {
      PositionValue p0(PositionValue::PValueType::Undefined);
      PositionValue p1(45);
      PositionValue p2(56);
      PositionValue p3(-67);
      PositionValue p4(-67);

      Assert::IsFalse(p0 == p1);
      Assert::IsTrue(p0 != p1);
      Assert::IsTrue(p0 != p2);
      Assert::IsTrue(p0 != p3);
      Assert::IsTrue(p1 != p2);
      Assert::IsTrue(p1 != p3);
      Assert::IsTrue(p2 != p3);
      Assert::IsTrue(p4 == p3);
      Assert::IsFalse(p4 != p3);

      Assert::IsFalse(p0 == PositionValue(0));
      Assert::IsTrue(p0 == PositionValue(PositionValue::PValueType::Undefined));
      Assert::AreEqual(p1, PositionValue(45));
      Assert::AreEqual(p2, PositionValue(56));
      Assert::AreEqual(p3, PositionValue(-67));

      std::function<int()>_l1 = [&p0] { return static_cast<int>(p0); };
      Assert::ExpectException<std::exception>(_l1);

      Assert::AreEqual(static_cast<int>(p1), 45);
      Assert::AreEqual(static_cast<int>(p2), 56);
      Assert::AreEqual(static_cast<int>(p3), -67);
    }

    TEST_METHOD(_OperatorComparison)
    {
      PositionValue p0(PositionValue::PValueType::Undefined);
      PositionValue p1(45);
      PositionValue p2(56);
      PositionValue p3(-67);
      PositionValue p4(-67);

      Assert::IsTrue(p1 > p0);
      Assert::IsTrue(p2 > p0);
      Assert::IsTrue(p3 > p0);
      Assert::IsTrue(p2 > p1);
      Assert::IsFalse(p3 > p1);
      Assert::IsFalse(p3 > p2);

      Assert::IsFalse(p1 < p0);
      Assert::IsFalse(p2 < p0);
      Assert::IsFalse(p3 < p0);
      Assert::IsFalse(p2 < p1);
      Assert::IsTrue(p3 < p1);
      Assert::IsTrue(p3 < p2);

      Assert::IsTrue(p1 >= p0);
      Assert::IsTrue(p2 >= p0);
      Assert::IsTrue(p3 >= p0);
      Assert::IsTrue(p2 >= p1);
      Assert::IsFalse(p3 >= p1);
      Assert::IsFalse(p3 >= p2);

      Assert::IsFalse(p1 <= p0);
      Assert::IsFalse(p2 <= p0);
      Assert::IsFalse(p3 <= p0);
      Assert::IsFalse(p2 <= p1);
      Assert::IsTrue(p3 <= p1);
      Assert::IsTrue(p3 <= p2);
    }

    TEST_METHOD(_OperatorComparisonNonNumeric)
    {
      PositionValue p0(PositionValue::PValueType::Undefined);
      PositionValue p1(45);
      PositionValue p2(56);
      PositionValue p3(-67);

      PositionValue pu(PositionValue::PValueType::Undefined);
      PositionValue pw(PositionValue::PValueType::Won);
      PositionValue pl(PositionValue::PValueType::Lost);
      PositionValue pt(PositionValue::PValueType::Tie);

      Assert::IsTrue(pu == p0);

      Assert::IsFalse(pl > pl);
      Assert::IsTrue(pu > pl);
      Assert::IsTrue(p1 > pl);
      Assert::IsTrue(p2 > pl);
      Assert::IsTrue(p3 > pl);
      Assert::IsTrue(pt > pl);
      Assert::IsTrue(pw > pl);

      Assert::IsFalse(pl > pu);
      Assert::IsFalse(pu > pu);
      Assert::IsTrue(p1 > pu);
      Assert::IsTrue(p2 > pu);
      Assert::IsTrue(p3 > pu);
      Assert::IsTrue(pt > pu);
      Assert::IsTrue(pw > pu);

      Assert::IsFalse(pl > pt);
      Assert::IsFalse(pu > pt);
      Assert::IsTrue(p1 > pt);
      Assert::IsTrue(p2 > pt);
      Assert::IsFalse(p3 > pt);
      Assert::IsFalse(pt > pt);
      Assert::IsTrue(pw > pt);

      Assert::IsFalse(pl > pw);
      Assert::IsFalse(pu > pw);
      Assert::IsFalse(p1 > pw);
      Assert::IsFalse(p2 > pw);
      Assert::IsFalse(p3 > pw);
      Assert::IsFalse(pt > pw);
      Assert::IsFalse(pw > pw);
    }

    TEST_METHOD(_IsRelative)
    {
      PositionValue p0(PositionValue::PValueType::Undefined);
      PositionValue p1(45);
      PositionValue p2(56);
      PositionValue p3(-67);

      PositionValue pu(PositionValue::PValueType::Undefined);
      PositionValue pw(PositionValue::PValueType::Won);
      PositionValue pl(PositionValue::PValueType::Lost);
      PositionValue pt(PositionValue::PValueType::Tie);

      Assert::IsTrue(p0.Relative(true) == p0.Relative(false));
      Assert::IsTrue(p1.Relative(true) != p1.Relative(false));
      Assert::IsTrue(p2.Relative(true) != p2.Relative(false));
      Assert::IsTrue(p3.Relative(true) != p3.Relative(false));
      Assert::IsTrue(pu.Relative(true) == pu.Relative(false));
      Assert::IsTrue(pw.Relative(true) != pw.Relative(false));
      Assert::IsTrue(pl.Relative(true) != pl.Relative(false));
      Assert::IsTrue(pt.Relative(true) == pt.Relative(false));

      Assert::IsTrue(p0.Relative(true) == -p0.Relative(false));
      Assert::IsTrue(p1.Relative(true) == -p1.Relative(false));
      Assert::IsTrue(p2.Relative(true) == -p2.Relative(false));
      Assert::IsTrue(p3.Relative(true) == -p3.Relative(false));
      Assert::IsTrue(pu.Relative(true) == -pu.Relative(false));
      Assert::IsTrue(pw.Relative(true) == -pw.Relative(false));
      Assert::IsTrue(pl.Relative(true) == -pl.Relative(false));
      Assert::IsTrue(pt.Relative(true) == -pt.Relative(false));
    }

    TEST_METHOD(_IsDecided)
    {
      PositionValue p0(PositionValue::PValueType::Undefined);
      PositionValue p1(45);
      PositionValue p2(56);
      PositionValue p3(-67);

      PositionValue pu(PositionValue::PValueType::Undefined);
      PositionValue pw(PositionValue::PValueType::Won);
      PositionValue pl(PositionValue::PValueType::Lost);
      PositionValue pt(PositionValue::PValueType::Tie);

      Assert::IsFalse(p0.IsDecided());
      Assert::IsFalse(p1.IsDecided());
      Assert::IsFalse(p2.IsDecided());
      Assert::IsFalse(p3.IsDecided());
      Assert::IsFalse(pu.IsDecided());
      Assert::IsTrue(pw.IsDecided());
      Assert::IsTrue(pl.IsDecided());
      Assert::IsFalse(pt.IsDecided());
    }
  };

  TEST_CLASS(_Kind)
  {
    std::stringstream s;
    // create a lambda that can be called with void() lambdas and executes them, to test serialization:
    std::function<std::string(std::function<void()>)> TrySerialize = [&](auto f) -> std::string
    {
      s.str().clear();  // clears flags only!
      s.str("");        // clears content
      f();
      return s.str();
    };

    TEST_METHOD(_NoKind)
    {
      Assert::IsFalse(&noKind::NoKind == nullptr);
      static_assert(noKind::NoKind == noKind::NoKind, "Kinds can't be constexpr");
    }

    TEST_METHOD(_Serialize)
    {
      Assert::IsTrue(TrySerialize([this]() { noKind::NoKind.Serialize(s); }) == "X");  // testing serialization
    }
  };

  TEST_CLASS(_Piece)
  {
    std::stringstream s;
    // create a lambda that can be called with void() lambdas and executes them, to test serialization:
    std::function<std::string(std::function<void()>)> TrySerialize = [&](auto f) -> std::string
    {
      s.str().clear();  // clears flags only!
      s.str("");        // clears content
      f();
      return s.str();
    };

    TEST_METHOD(_Singletons)
    {
      Assert::IsFalse(&Piece::NoTile == nullptr);    // verify NoTile exists
      Assert::IsFalse(&Piece::NoPiece == nullptr);   // verify NoPiece exists
    }

    TEST_METHOD(_Serialize)
    {
      Assert::IsTrue(TrySerialize([this]() { Piece::NoTile.Serialize(s); }) == "XX");
      Assert::IsTrue(TrySerialize([this]() { Piece::NoPiece.Serialize(s); }) == "X ");
    }

    TEST_METHOD(_Draw)
    {
      // can't really test draw...
    }

    TEST_METHOD(_OperatorEqual)
    {
      Assert::IsTrue(&Piece::NoTile == &Piece::NoTile);
      Assert::IsFalse(&Piece::NoTile == &Piece::NoPiece);
      Assert::IsTrue(&Piece::NoTile != &Piece::NoPiece);
      Assert::IsTrue(&Piece::NoPiece != &Piece::NoTile);

    }

    TEST_METHOD(_IsKind)
    {
      Assert::IsTrue(Piece::NoTile.IsKind(noKind::NoKind));
      Assert::IsTrue(Piece::NoPiece.IsKind(noKind::NoKind));
    }

    TEST_METHOD(_IsColor)
    {
      Assert::IsTrue(Piece::NoTile.IsColor(PieceColor::Void));
      Assert::IsTrue(Piece::NoPiece.IsColor(PieceColor::NoColor));
      Assert::IsTrue(Piece::NoPiece.IsColor(Piece::NoPiece));
      Assert::IsFalse(Piece::NoPiece.IsColor(Piece::NoTile));
    }

    TEST_METHOD(_IsBlank)
    {
      Assert::IsTrue(Piece::NoPiece.IsBlank());
      Assert::IsFalse(Piece::NoTile.IsBlank());
    }

    TEST_METHOD(_GetHash)
    {
      Assert::IsFalse(Piece::NoTile.GetHash() == 0);
      Assert::IsFalse(Piece::NoTile.GetHash() == Piece::NoPiece.GetHash());
    }

    TEST_METHOD(_CollectMoves)
    {
      Location l(BoardPartID::Stage, 2U, 3U);
      Board* p{};
      Moves m{};
      Piece::NoTile.CollectMoves(*p, l, m);
      Assert::IsTrue(m.size() == 0);
    }

    TEST_METHOD(_GetValue)
    {
      Location l(BoardPartID::Stage, 2U, 3U);
      Board* p{};
      Assert::IsTrue(Piece::NoTile.GetValue(*p, l) == PositionValue(0));
      Assert::IsTrue(Piece::NoPiece.GetValue(*p, l) == PositionValue(0));
    }

    TEST_METHOD(_IsPromotable)
    {
      Assert::IsFalse(Piece::NoTile.IsPromotable());
      Assert::IsFalse(Piece::NoPiece.IsPromotable());
    }

    TEST_METHOD(_Promote)
    {
      Assert::IsTrue(Piece::NoTile.Promote(true) == Piece::NoTile);
      Assert::IsTrue(Piece::NoPiece.Promote(true) == Piece::NoPiece);
      Assert::IsTrue(Piece::NoTile.Promote(false) == Piece::NoTile);
      Assert::IsTrue(Piece::NoPiece.Promote(false) == Piece::NoPiece);
    }
  };

  TEST_CLASS(_PieceMap)
  {
    TEST_METHOD(_Register)
    {
      PieceMap PMap{};
      Assert::IsTrue(PMap.size() == 1);   // map comes with 'invalid' already in it
      PieceIndex pNP = PMap.Register(Piece::NoPiece);
      PieceIndex pNT = PMap.Register(Piece::NoTile);
      PieceIndex pWC = PMap.Register(CorePiece::WC);
      PieceIndex pBC = PMap.Register(CorePiece::BC);
      Assert::IsTrue(PMap.size() == 5);
      Assert::IsTrue(pBC == PMap.Register(CorePiece::BC));
      Assert::IsTrue(PMap.size() == 5);
    }

    TEST_METHOD(_OperatorAt)
    {
      PieceMap PMap{};
      PieceIndex pNP = PMap.Register(Piece::NoPiece);
      PieceIndex pNT = PMap.Register(Piece::NoTile);
      Assert::IsTrue(PMap[pNP] == Piece::NoPiece);
      Assert::IsTrue(PMap[pNT] == Piece::NoTile);
    }

    TEST_METHOD(_GetIndex)
    {
      PieceMap PMap{};
      PieceIndex pNP = PMap.Register(Piece::NoPiece);
      PieceIndex pNT = PMap.Register(Piece::NoTile);
      Assert::IsTrue(PMap[Piece::NoPiece] == pNP);
      Assert::IsTrue(PMap[Piece::NoTile] == pNT);
    }

    TEST_METHOD(_Find)
    {
      PieceMap PMap{};
      PieceIndex pNP = PMap.Register(Piece::NoPiece);
      PieceIndex pNT = PMap.Register(Piece::NoTile);

      std::stringstream s;
      s << "X XX";
      Assert::IsTrue(PMap.Find(s) == pNP);
      Assert::IsTrue(PMap.Find(s) == pNT);
    }

    TEST_METHOD(_IsColor)
    {
      PieceMap PMap{};
      PieceIndex pNP = PMap.Register(Piece::NoPiece);
      PieceIndex pNT = PMap.Register(Piece::NoTile);
      PieceIndex pWC = PMap.Register(CorePiece::WC);
      PieceIndex pBC = PMap.Register(CorePiece::BC);

      Assert::IsTrue(PMap.IsColor(pWC,PieceColor::White));
      Assert::IsTrue(PMap.IsColor(pBC,PieceColor::Black));
      Assert::IsFalse(PMap.IsColor(pNP,PieceColor::White));
    }

  };

  TEST_CLASS(_Action)
  {
    TEST_METHOD(_Constructor)
    {
      Location l1{ BoardPartID::Stage, 2U, 3U };
      Location l2{ BoardPartID::Stage, 3U, 2U };
      Location l3{ BoardPartID::Stage, 4U, 1U };

      std::shared_ptr<Action> a1{ std::make_shared<ActionLift>(l1,1) };   // CorePiece::WC
      std::shared_ptr<Action> a2{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
      std::shared_ptr<Action> a3{ std::make_shared<ActionDrop>(l3,1) };
      std::shared_ptr<Action> a4{ std::make_shared<ActionLift>(l1,1) };
      std::shared_ptr<Action> a5{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
      std::shared_ptr<Action> a6{ std::make_shared<ActionDrop>(l3,1) };
      std::shared_ptr<Action> a7{ std::make_shared<ActionEliminate>(l2,PMap[Piece::NoPiece]) };
    }

    TEST_METHOD(_OperatorEqual)
    {
      PieceIndex pWC = PMap[CorePiece::WC];
      PieceIndex pBC = PMap[CorePiece::BC];

      Location l1{ BoardPartID::Stage, 2U, 3U };
      Location l2{ BoardPartID::Stage, 3U, 2U };
      Location l3{ BoardPartID::Stage, 4U, 1U };

      std::shared_ptr<Action> a1{ std::make_shared<ActionLift>(l1,pWC) };
      std::shared_ptr<Action> a2{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
      std::shared_ptr<Action> a3{ std::make_shared<ActionDrop>(l3,pWC) };
      std::shared_ptr<Action> a4{ std::make_shared<ActionLift>(l1,pWC) };
      std::shared_ptr<Action> a5{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
      std::shared_ptr<Action> a6{ std::make_shared<ActionDrop>(l3,pWC) };
      std::shared_ptr<Action> a7{ std::make_shared<ActionEliminate>(l2,PMap[Piece::NoPiece]) };

      Assert::IsTrue(*a1 == *a1);
      Assert::IsTrue(*a2 == *a2);
      Assert::IsTrue(*a3 == *a3);

      Assert::IsTrue(*a1 == *a4);
      Assert::IsFalse(*a1 == *a5);
      Assert::IsFalse(*a1 == *a6);
      Assert::IsFalse(*a2 == *a4);
      Assert::IsTrue(*a2 == *a5);
      Assert::IsFalse(*a2 == *a6);
      Assert::IsFalse(*a3 == *a4);
      Assert::IsFalse(*a3 == *a5);
      Assert::IsTrue(*a3 == *a6);
      Assert::IsTrue(*a4 == *a1);
      Assert::IsFalse(*a5 == *a1);
      Assert::IsFalse(*a6 == *a1);
      Assert::IsFalse(*a1 == *a7);
    }

    TEST_METHOD(_OperatorNotEqual)
    {
      PieceIndex pWC = PMap[CorePiece::WC];
      PieceIndex pBC = PMap[CorePiece::BC];

      Location l1{ BoardPartID::Stage, 2U, 3U };
      Location l2{ BoardPartID::Stage, 3U, 2U };
      Location l3{ BoardPartID::Stage, 4U, 1U };

      std::shared_ptr<Action> a1{ std::make_shared<ActionLift>(l1,pWC) };
      std::shared_ptr<Action> a2{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
      std::shared_ptr<Action> a3{ std::make_shared<ActionDrop>(l3,pWC) };
      std::shared_ptr<Action> a4{ std::make_shared<ActionLift>(l1,pWC) };
      std::shared_ptr<Action> a5{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
      std::shared_ptr<Action> a6{ std::make_shared<ActionDrop>(l3,pWC) };
      std::shared_ptr<Action> a7{ std::make_shared<ActionEliminate>(l2,PMap[Piece::NoPiece]) };

      Assert::IsFalse(*a1 != *a4);
      Assert::IsTrue(*a1 != *a5);
      Assert::IsTrue(*a1 != *a6);
      Assert::IsTrue(*a2 != *a4);
      Assert::IsFalse(*a2 != *a5);
      Assert::IsTrue(*a2 != *a6);
      Assert::IsTrue(*a3 != *a4);
      Assert::IsTrue(*a3 != *a5);
      Assert::IsFalse(*a3 != *a6);
      Assert::IsFalse(*a4 != *a1);
      Assert::IsTrue(*a5 != *a1);
      Assert::IsTrue(*a6 != *a1);
    }

    TEST_METHOD(_GetLocation)
    {
      PieceIndex pWC = PMap[CorePiece::WC];
      PieceIndex pBC = PMap[CorePiece::BC];

      Location l1{ BoardPartID::Stage, 2U, 3U };
      Location l2{ BoardPartID::Stage, 3U, 2U };
      Location l3{ BoardPartID::Stage, 4U, 1U };

      std::shared_ptr<Action> a1{ std::make_shared<ActionLift>(l1,pWC) };
      std::shared_ptr<Action> a2{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
      std::shared_ptr<Action> a3{ std::make_shared<ActionDrop>(l3,pWC) };

      Assert::IsTrue(a1->GetLocation() == l1);
      Assert::IsTrue(a2->GetLocation() == l2);
      Assert::IsTrue(a3->GetLocation() == l3);
    }

    TEST_METHOD(_GetPieceIndex)
    {
      PieceIndex pWC = PMap[CorePiece::WC];
      PieceIndex pBC = PMap[CorePiece::BC];

      Location l1{ BoardPartID::Stage, 2U, 3U };
      Location l2{ BoardPartID::Stage, 3U, 2U };
      Location l3{ BoardPartID::Stage, 4U, 1U };

      std::shared_ptr<Action> a1{ std::make_shared<ActionLift>(l1,pWC) };
      std::shared_ptr<Action> a2{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
      std::shared_ptr<Action> a3{ std::make_shared<ActionDrop>(l3,pBC) };

      Assert::IsTrue(a1->GetPieceIndex() == pWC);
      Assert::IsTrue(a2->GetPieceIndex() == PMap[Piece::NoPiece]);
      Assert::IsTrue(a3->GetPieceIndex() == pBC);
    }

    TEST_METHOD(_IsJump)
    {
      PieceIndex pWC = PMap[CorePiece::WC];
      PieceIndex pBC = PMap[CorePiece::BC];

      Location l1{ BoardPartID::Stage, 2U, 3U };
      Location l2{ BoardPartID::Stage, 3U, 2U };
      Location l3{ BoardPartID::Stage, 4U, 1U };

      std::shared_ptr<Action> a1{ std::make_shared<ActionLift>(l1,pWC) };
      std::shared_ptr<Action> a2{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
      std::shared_ptr<Action> a3{ std::make_shared<ActionDrop>(l3,pBC) };

      Assert::IsFalse(a1->IsJump());
      Assert::IsTrue(a2->IsJump());
      Assert::IsFalse(a3->IsJump());
    }
  };

  TEST_CLASS(_Actions)
  {
  public:
    Location l1{ BoardPartID::Stage, 2U, 3U };
    Location l2{ BoardPartID::Stage, 3U, 2U };
    Location l3{ BoardPartID::Stage, 4U, 1U };

    PieceIndex pWC = PMap[CorePiece::WC];
    std::shared_ptr<Action> a1{ std::make_shared<ActionLift>(l1,pWC) };
    std::shared_ptr<Action> a2{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
    std::shared_ptr<Action> a3{ std::make_shared<ActionDrop>(l3,pWC) };
    std::shared_ptr<Action> a4{ std::make_shared<ActionLift>(l1,pWC) };
    std::shared_ptr<Action> a5{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
    std::shared_ptr<Action> a6{ std::make_shared<ActionDrop>(l3,pWC) };
    std::shared_ptr<Action> a7{ std::make_shared<ActionEliminate>(l2,PMap[Piece::NoPiece]) };

    TEST_METHOD(_Constructor)
    {
      static_assert(Actions().HasJump() == false, "Actions is not constexpr");

      Actions aa1{};
      aa1.push_back(a1);
      aa1.push_back(a3);

      Actions aa2{};
      aa2.push_back(a1);
      aa2.push_back(a2);
      aa2.push_back(a3);
    }

    TEST_METHOD(_OperatorEqual)
    {
      Actions aa1{};
      aa1.push_back(a1);
      aa1.push_back(a3);

      Actions aa2{};
      aa2.push_back(a1);
      aa2.push_back(a2);
      aa2.push_back(a3);

      Assert::IsTrue(aa1 == aa1);
      Assert::IsFalse(aa1 == aa2);
      Assert::IsFalse(aa2 == aa1);
      Assert::IsTrue(aa2 != aa1);
    }

    TEST_METHOD(_IsRepeat)
    {
      Actions aa1{};
      aa1.push_back(a1);
      aa1.push_back(a3);

      Actions aa2{};
      aa2.push_back(a1);
      aa2.push_back(a2);
      aa2.push_back(a3);

      Assert::IsTrue(aa2.IsRepeat(l2, Offset{ l3,l2 }));
      Assert::IsFalse(aa2.IsRepeat(l1, Offset{ l3,l2 }));
      Assert::IsFalse(aa2.IsRepeat(l3, Offset{ l3,l2 }));
    }

    TEST_METHOD(_HasJump)
    {
      Actions aa1{};
      aa1.push_back(a1);
      aa1.push_back(a3);

      Actions aa2{};
      aa2.push_back(a1);
      aa2.push_back(a2);
      aa2.push_back(a3);

      Assert::IsFalse(aa1.HasJump());
      Assert::IsTrue(aa2.HasJump());
    }
  };

  TEST_CLASS(_Move)
  {
    PieceIndex pWC = PMap[CorePiece::WC];
    PieceIndex pBC = PMap[CorePiece::BC];

    Location l1{ BoardPartID::Stage, 2U, 3U };
    Location l2{ BoardPartID::Stage, 3U, 2U };
    Location l3{ BoardPartID::Stage, 4U, 1U };

    std::shared_ptr<Action> a11{ std::make_shared<ActionLift>(l1,pBC) };
    std::shared_ptr<Action> a12{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
    std::shared_ptr<Action> a13{ std::make_shared<ActionDrop>(l3,pBC) };

    std::shared_ptr<Action> a21{ std::make_shared<ActionLift>(l1,pBC) };
    std::shared_ptr<Action> a22{ std::make_shared<ActionDrop>(l3,pBC) };

    std::shared_ptr<Action> a31{ std::make_shared<ActionLift>(l1,pBC) };
    std::shared_ptr<Action> a32{ std::make_shared<ActionJump>(l2,PMap[Piece::NoPiece]) };
    std::shared_ptr<Action> a33{ std::make_shared<ActionDrop>(l3,pBC) };

    Actions a1{};
    Actions a2{};
    Actions a3{};
    Actions a4{};

    TEST_METHOD_INITIALIZE(_setup)
    {
      a1.push_back(a11);
      a1.push_back(a12);
      a1.push_back(a13);

      a2.push_back(a21);
      a2.push_back(a22);

      a3.push_back(a31);
      a3.push_back(a32);
      a3.push_back(a33);

      a4.push_back(a21);
      a4.push_back(a22);
    }

    TEST_METHOD(_SetValue)
    {
      Move m1{ a1 };

      m1.SetValue(PositionValue::PValueType::Tie);
      Assert::IsTrue(m1.GetValue() == PositionValue::PValueType::Tie);
      PositionValue pv = Math::D6() + 100 * Math::D6();
      m1.SetValue(pv);
      Assert::IsTrue(m1.GetValue() == pv);
    }

    TEST_METHOD(_OperatorComparison)
    {
      Move m1{ a1 };
      Move m2{ a2 };
      Move m3{ a3 };
      Move m4{ a4 };

      m1.SetValue(1);
      m2.SetValue(2);
      m3.SetValue(3);
      m4.SetValue(2);

      Assert::IsTrue(m1 < m2);
      Assert::IsTrue(m1 <= m2);
      Assert::IsFalse(m1 > m2);
      Assert::IsFalse(m1 >= m2);

      Assert::IsFalse(m2 < m4);
      Assert::IsTrue(m2 <= m4);
      Assert::IsFalse(m2 > m4);
      Assert::IsTrue(m2 >= m4);
    }

    TEST_METHOD(_OperatorEqual)
    {
      Move m1{ a1 };
      Move m2{ a2 };
      Move m3{ a3 };
      Move m4{ a4 };

      Assert::IsTrue(m2 == m4);
      Assert::IsFalse(m2 != m4);
      Assert::IsFalse(m2 == m3);
      Assert::IsTrue(m2 != m3);
    }

    TEST_METHOD(_GetActions)
    {
      Move m1{ a1 };
      Move m2{ a2 };
      Move m3{ a3 };
      Move m4{ a4 };

      Assert::IsTrue(m1.GetActions() == a1);   // GetActions

      Assert::IsTrue(m2.GetFrL() == l1);   // GetFrL
      Assert::IsTrue(m3.GetFrL() == l1);

      Assert::IsTrue(m1.GetToL() == l3);   // GetToL
      Assert::IsTrue(m4.GetToL() == l3);
    }
  };

  TEST_CLASS(_Field)
  {
    const BoardGamesMFC::Rect r{ 20, 120, 40, 140 };
    const PieceIndex pWC = PMap[CorePiece::WC];
    const PieceIndex pBC = PMap[CorePiece::BC];

    std::stringstream s;
// create a lambda that can be called with void() lambdas and executes them, to test serialization:
    std::function<std::string(std::function<void()>)> TrySerialize = [&](auto f) -> std::string
    {
      s.str().clear();  // clears flags only!
      s.str("");        // clears content
      f();
      return s.str();
    };

    TEST_METHOD(_CopyConstructor)
    {
      Field f1(r, TileColor::Light, pBC);
      Field f2(f1);
      Assert::IsTrue(f1 == f2);
      Assert::IsTrue(f2.GetPieceIndex() == pBC);
    }

    TEST_METHOD(_MoveConstructor)
    {
      Field f1(r, TileColor::Light, pBC);
      Field f2(r, TileColor::Light, pBC);
      Field f3(std::move(f2));
      Assert::IsTrue(f1 == f3);
      Assert::IsTrue(f3.GetPieceIndex() == pBC);
    }

    TEST_METHOD(_GetPieceIndex)
    {
      Field f(r, TileColor::Light, pBC);
      Assert::IsTrue(f.GetPieceIndex() == pBC);
    }

    TEST_METHOD(_SetPieceIndex)
    {
      Field f(r, TileColor::Light, pBC);
      Assert::IsTrue(f.GetPieceIndex() == pBC);
      f.SetPieceIndex(pWC);
      Assert::IsTrue(f.GetPieceIndex() == pWC);
    }

    TEST_METHOD(_IsInRect)
    {
      Field f(r, TileColor::Light, pBC);
      Assert::IsFalse(f.IsInRect(Point(10, 10)));
      Assert::IsFalse(f.IsInRect(Point(30, 10)));
      Assert::IsTrue(f.IsInRect(Point(30, 130)));
      Assert::IsFalse(f.IsInRect(Point(130, 130)));
      Assert::IsFalse(f.IsInRect(Point(130, 30)));
    }

    TEST_METHOD(_Serialize)
    {
      Assert::IsTrue(TrySerialize([this]() { Field(r, TileColor::Light, pBC).Serialize(s); }) == "0B");
      Assert::IsTrue(TrySerialize([this]() { Field(r, TileColor::Dark, pWC).Serialize(s); }) == "0W");
      Field f2(r, TileColor::Light, pBC);
      std::string s2 = TrySerialize([this, &f2]() { f2.Serialize(s); });
      Field f3(std::move(f2));
      std::string s3 = TrySerialize([this, &f3]() { f3.Serialize(s); });
      Assert::IsTrue(s3 == s2);
    }

  };

  TEST_CLASS(_Mode)
  {
    TEST_METHOD(_Set)
    {
      Mode m1{ Mode_::ShowStock };
      Mode m2 = m1;
      Assert::IsTrue(m2.IsSet(Mode_::ShowStock));
      Assert::IsFalse(m2.IsSet(Mode_::Editing));
      Assert::IsFalse(m2.IsSet(Mode_::GameOver));
      m2.Set(Mode_::Editing);
      Assert::IsTrue(m2.IsSet(Mode_::ShowStock));
      Assert::IsTrue(m2.IsSet(Mode_::Editing));
      Assert::IsFalse(m2.IsSet(Mode_::GameOver));
      m2.Set(Mode_::GameOver);
      Assert::IsTrue(m2.IsSet(Mode_::ShowStock));
      Assert::IsTrue(m2.IsSet(Mode_::Editing));
      Assert::IsTrue(m2.IsSet(Mode_::GameOver));
    }

    TEST_METHOD(_Del)
    {
      Mode m1{ Mode_::ShowStock | Mode_::Editing | Mode_::GameOver };
      Mode m2 = m1;

      Assert::IsTrue(m2.IsSet(Mode_::ShowStock));
      Assert::IsTrue(m2.IsSet(Mode_::Editing));
      Assert::IsTrue(m2.IsSet(Mode_::GameOver));
      m2.Del(Mode_::Editing);
      Assert::IsTrue(m2.IsSet(Mode_::ShowStock));
      Assert::IsFalse(m2.IsSet(Mode_::Editing));
      Assert::IsTrue(m2.IsSet(Mode_::GameOver));
      m2.Del(Mode_::GameOver);
      Assert::IsTrue(m2.IsSet(Mode_::ShowStock));
      Assert::IsFalse(m2.IsSet(Mode_::Editing));
      Assert::IsFalse(m2.IsSet(Mode_::GameOver));
    }

    TEST_METHOD(_IsSet)
    {
      Mode m1{ Mode_::ShowStock };
      Assert::IsFalse(m1.IsSet(Mode_::SelectFr));
      Assert::IsFalse(m1.IsSet(Mode_::SelectTo));
      Assert::IsFalse(m1.IsSet(Mode_::Editing));
      Assert::IsFalse(m1.IsSet(Mode_::Dragging));
      Assert::IsTrue(m1.IsSet(Mode_::ShowStock));
      Assert::IsFalse(m1.IsSet(Mode_::ShowTaken));
      Assert::IsFalse(m1.IsSet(Mode_::GameOver));

      Mode m2{ Mode_::Dragging};
      Assert::IsFalse(m2.IsSet(Mode_::SelectFr));
      Assert::IsFalse(m2.IsSet(Mode_::SelectTo));
      Assert::IsFalse(m2.IsSet(Mode_::Editing));
      Assert::IsTrue(m2.IsSet(Mode_::Dragging));
      Assert::IsFalse(m2.IsSet(Mode_::ShowStock));
      Assert::IsFalse(m2.IsSet(Mode_::ShowTaken));
      Assert::IsFalse(m2.IsSet(Mode_::GameOver));
    }

    TEST_METHOD(_OperatorBitwise)
    {
      Mode_ m1 = (Mode_::Editing | Mode_::ShowStock | Mode_::GameOver) & (~Mode_::ShowStock);
      Mode_ m2 = Mode_::Editing | Mode_::GameOver;
      Mode_ m3 = Mode_::Editing | Mode_::ShowStock | Mode_::GameOver;
      Assert::IsTrue(m1 == m2);
      Assert::IsFalse(m1 == m3);
      Assert::IsTrue(m3 == ~~m3);
    }
  };

  TEST_CLASS(_PlayerType)
  {
    std::stringstream s;
// create a lambda that can be called with void() lambdas and executes them, to test serialization:
    std::function<std::string(std::function<void()>)> TrySerialize = [&](auto f) -> std::string
    {
      s.str().clear();  // clears flags only!
      s.str("");        // clears content
      f();
      return s.str();
    };

    TEST_METHOD(_OperatorEqual)
    {
      Assert::IsFalse(&PlayerType::Human == nullptr);
      Assert::IsFalse(&PlayerType::Computer == nullptr);

      Assert::IsFalse(&PlayerType::Human == &PlayerType::Computer);
      Assert::IsFalse(PlayerType::Human == PlayerType::Computer);
      Assert::IsFalse(PlayerType::Computer == PlayerType::Human);
    }

    TEST_METHOD(_OperatorNotEqual)
    {
      Assert::IsTrue(PlayerType::Human != PlayerType::Computer);
      Assert::IsTrue(PlayerType::Computer != PlayerType::Human);
      Assert::IsFalse(PlayerType::Human != PlayerType::Human);
    }

    TEST_METHOD(_Serialize)
    {
      Assert::IsTrue(TrySerialize([this]() { PlayerType::Human.Serialize(s); }) == "H");
      Assert::IsTrue(TrySerialize([this]() { PlayerType::Computer.Serialize(s); }) == "C");
    }
  };

  TEST_CLASS(_Player)
  {

    TEST_METHOD(_Constructor)
    {
      static_assert(Player(PlayerType::Computer, PieceColor::Black).IsAI(), "Player is not constexpr");

      Player p1{ PlayerType::Human,    PieceColor::White };
      Player p2{ PlayerType::Human,    PieceColor::Black };
      Player p3{ PlayerType::Computer, PieceColor::White };
      Player p4{ PlayerType::Computer, PieceColor::Black };

      std::function<Player* ()>_makePHB = [&pt=PlayerType::Human,    &pc=PieceColor::Black  ]() -> Player* { return new Player(pt, pc); };
      std::function<Player* ()>_makePHN = [&pt=PlayerType::Human,    &pc=PieceColor::NoColor]() -> Player* { return new Player(pt, pc); };
      std::function<Player* ()>_makePHV = [&pt=PlayerType::Human,    &pc=PieceColor::Void   ]() -> Player* { return new Player(pt, pc); };
      std::function<Player* ()>_makePCV = [&pt=PlayerType::Computer, &pc=PieceColor::Void   ]() -> Player* { return new Player(pt, pc); };
      Assert::IsTrue(_makePHB() != nullptr);
      Assert::ExpectException<std::invalid_argument>(_makePHN);
      Assert::ExpectException<std::invalid_argument>(_makePHV);
      Assert::ExpectException<std::invalid_argument>(_makePCV);
    }

    TEST_METHOD(_IsAI)
    {
      Player p1{ PlayerType::Human,    PieceColor::White };
      Player p2{ PlayerType::Human,    PieceColor::Black };
      Player p3{ PlayerType::Computer, PieceColor::White };
      Player p4{ PlayerType::Computer, PieceColor::Black };

      Assert::IsFalse(p1.IsAI());
      Assert::IsFalse(p2.IsAI());
      Assert::IsTrue(p3.IsAI());
      Assert::IsTrue(p4.IsAI());
    }

    TEST_METHOD(_IsColor)
    {
      Player p1{ PlayerType::Human,    PieceColor::White };
      Player p2{ PlayerType::Human,    PieceColor::Black };
      Player p3{ PlayerType::Computer, PieceColor::White };
      Player p4{ PlayerType::Computer, PieceColor::Black };

      Assert::IsTrue(p1.IsColor(PieceColor::White));
      Assert::IsFalse(p2.IsColor(PieceColor::White));
      Assert::IsTrue(p3.IsColor(PieceColor::White));
      Assert::IsFalse(p4.IsColor(PieceColor::White));

      Assert::IsFalse(p1.IsColor(PieceColor::Black));
      Assert::IsTrue(p2.IsColor(PieceColor::Black));
      Assert::IsFalse(p3.IsColor(PieceColor::Black));
      Assert::IsTrue(p4.IsColor(PieceColor::Black));

      Assert::IsFalse(p1.IsColor(PieceColor::NoColor));
      Assert::IsFalse(p2.IsColor(PieceColor::NoColor));
      Assert::IsFalse(p3.IsColor(PieceColor::NoColor));
      Assert::IsFalse(p4.IsColor(PieceColor::NoColor));

      Assert::IsFalse(p1.IsColor(PieceColor::Void));
      Assert::IsFalse(p2.IsColor(PieceColor::Void));
      Assert::IsFalse(p3.IsColor(PieceColor::Void));
      Assert::IsFalse(p4.IsColor(PieceColor::Void));
    }
  };

  TEST_CLASS(_BoardPart)
  {
    const PieceIndex pWC = PMap[CorePiece::WC];
    const PieceIndex pBC = PMap[CorePiece::BC];

    std::stringstream s;
// create a lambda that can be called with void() lambdas and executes them, to test serialization:
    std::function<std::string(std::function<void()>)> TrySerialize = [&](auto f) -> std::string
    {
      s.str().clear();  // clears flags only!
      s.str("");        // clears content
      f();
      return s.str();
    };

    TEST_METHOD(_Constructor)
    {
      BoardPart b1(BoardPartDimension(4, 4, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);
      BoardPart b2(BoardPartDimension(1, 127, LayoutType::Dark, 10, 10, 50, 50), BoardPartID::Stage);
      BoardPart b4(BoardPartDimension(1, 1, LayoutType::Light, 0, 0, 0, 0), BoardPartID::Stage);
    }

    TEST_METHOD(_CopyConstructor)
    {
      BoardPart b1(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);
      b1.SetPieceIndex(pWC, 0, 1);
      BoardPart b2(b1);
      Assert::IsTrue(b2 == b1);
      Assert::IsTrue(b2.GetSizeX() == b1.GetSizeX());
      Assert::IsTrue(b2.GetSizeY() == b1.GetSizeY());
      Assert::IsTrue(b2.GetPieceIndex(0, 1) == b1.GetPieceIndex(0, 1));
      Assert::IsTrue(b2.GetPieceIndex(1, 0) == b1.GetPieceIndex(1, 0));
    }

    TEST_METHOD(_MoveConstructor)
    {
      BoardPart b1(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);
      BoardPart b2(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);
      BoardPart b3(std::move(b2));
      Assert::IsTrue(b3 == b1);
      Assert::IsTrue(b3.GetSizeX() == b1.GetSizeX());
      Assert::IsTrue(b3.GetSizeY() == b1.GetSizeY());
      Assert::IsTrue(b3.GetPieceIndex(0, 1) == b1.GetPieceIndex(0, 1));
      Assert::IsTrue(b3.GetPieceIndex(1, 0) == b1.GetPieceIndex(1, 0));
    }

    TEST_METHOD(_Serialize)
    {
      using namespace std::literals::string_literals;
      BoardPart b1(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);
      std::string res = TrySerialize([this, &b1]() { b1.Serialize(s); });
      Assert::IsTrue(TrySerialize([this, &b1]() { b1.Serialize(s); }) == "\x4\x2\x3\0\xa\0\xa\0\x32\0\x32\0\x4\0\x4\0" "X X X X X X X X "s);

      BoardPart b2(BoardPartDimension(3, 2, LayoutType::Light, 20, 5, 40, 30, 3, 2), BoardPartID::Stage, pWC);
      b2.SetPieceIndex(pBC, 1, 1);
      Assert::IsTrue(TrySerialize([this, &b2]() { b2.Serialize(s); }) == "\x3\x2\x1\0\x14\0\x5\0\x28\0\x1e\0\x3\0\x2\0" "0W0W0W0W0B0W"s);
    }

    TEST_METHOD(_OperatorEqual)
    {
      BoardPart b1(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);
      BoardPart b2(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);
      Assert::IsTrue(b1 == b2);
      Assert::IsTrue(b2 == b1);
      BoardPart b3(BoardPartDimension(4, 2, LayoutType::Light, 20, 20, 40, 40), BoardPartID::Stage);
      Assert::IsTrue(b1 == b3);
      BoardPart b4(BoardPartDimension(2, 4, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);
      Assert::IsFalse(b4 == b2);
      BoardPart b5(BoardPartDimension(4, 2, LayoutType::Light, 20, 20, 40, 40), BoardPartID::Stage, pWC);
      Assert::IsFalse(b5 == b2);
    }

    TEST_METHOD(_OperatorNotEqual)
    {
      BoardPart b1(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);
      BoardPart b2(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);
      Assert::IsFalse(b1 != b2);
      Assert::IsFalse(b2 != b1);

      BoardPart b3(BoardPartDimension(4, 2, LayoutType::Light, 5, 5, 40, 40, 2, 2), BoardPartID::Stage);
      Assert::IsFalse(b1 != b3);

      BoardPart b4(BoardPartDimension(2, 4, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);
      Assert::IsTrue(b1 != b4);

      b1.SetPieceIndex(pWC, 0, 1);
      b2.SetPieceIndex(pBC, 0, 1);
      Assert::IsTrue(b1 != b2);
      Assert::IsTrue(b2 != b1);
      b2.SetPieceIndex(pWC, 0, 1);
      Assert::IsFalse(b1 != b2);
    }

    TEST_METHOD(_GetHash)
    {
      BoardPart b1(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);
      BoardPart b2(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage, pWC);
      BoardPart b3(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage, pBC);
      Assert::IsFalse(b1.GetHash() == b2.GetHash());
      Assert::IsFalse(b1.GetHash() == b3.GetHash());

      BoardPart b4(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage, pBC);
      Assert::IsTrue(b3.GetHash() == b4.GetHash());
      b4.SetPieceIndex(pWC, 2, 1);
      Assert::IsFalse(b3.GetHash() == b4.GetHash());
      b4.SetPieceIndex(pBC, 2, 1);
      Assert::IsTrue(b3.GetHash() == b4.GetHash());
    }

    TEST_METHOD(_GetLocationFromPoint)
    {
      BoardPart b(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage);

      Coordinate x{ -1 };
      Coordinate y{ -1 };

      Assert::IsFalse(b.GetLocationFromPoint(Point(  0,   0), x, y));
      Assert::IsFalse(b.GetLocationFromPoint(Point(  9,   9), x, y));
      Assert::IsTrue (b.GetLocationFromPoint(Point( 10,  10), x, y));  Assert::IsTrue(x == 0 && y == 0);
      Assert::IsTrue (b.GetLocationFromPoint(Point( 15,  15), x, y));  Assert::IsTrue(x == 0 && y == 0);
      Assert::IsFalse(b.GetLocationFromPoint(Point( 60,  60), x, y));  // between fields
      Assert::IsTrue (b.GetLocationFromPoint(Point( 64,  64), x, y));  Assert::IsTrue(x == 1 && y == 1);
      Assert::IsTrue (b.GetLocationFromPoint(Point(113, 113), x, y));  Assert::IsTrue(x == 1 && y == 1);
      Assert::IsFalse(b.GetLocationFromPoint(Point(114, 113), x, y));  // between fields
      Assert::IsFalse(b.GetLocationFromPoint(Point(114, 114), x, y));  // too far down
      Assert::IsTrue (b.GetLocationFromPoint(Point(118, 113), x, y));  Assert::IsTrue(x == 2 && y == 1);
      Assert::IsFalse(b.GetLocationFromPoint(Point(222, 113), x, y));  // too far right
      Assert::IsFalse(b.GetLocationFromPoint(Point(227, 113), x, y));  // too far right
    }

    TEST_METHOD(_GetSize)
    {
      BoardPart b(BoardPartDimension(4, 2, LayoutType::Dark, 10, 10, 50, 50, 4, 4), BoardPartID::Stage, pWC);
      Assert::IsTrue(b.GetSizeX() == 4);
      Assert::IsTrue(b.GetSizeY() == 2);
    }

    TEST_METHOD(_HasPiece)
    {
      BoardPart b(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage, pWC);
      Assert::IsTrue(b.HasPiece(pWC));
      Assert::IsFalse(b.HasPiece(pBC));
      b.SetPieceIndex(pBC, 2, 1);
      Assert::IsTrue(b.HasPiece(pWC));
      Assert::IsTrue(b.HasPiece(pBC));
    }

    TEST_METHOD(_GetPieceIndex)
    {
      BoardPart b(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage, pBC);
      Assert::IsTrue(b.GetPieceIndex(3, 0) == pBC);
      Assert::IsTrue(b.GetPieceIndex(2, 1) == pBC);

      for (Coordinate x = -6; x < 6; ++x)
        for (Coordinate y = -6; x < 6; ++x)
        {
          std::function<int()>_l = [&b, x, y] { return b.GetPieceIndex(x, y); };
          if      (x <  -b.GetSizeX())  Assert::ExpectException<std::invalid_argument>(_l);
          else if (x >=  b.GetSizeX())  Assert::ExpectException<std::invalid_argument>(_l);
          else if (y <  -b.GetSizeY())  Assert::ExpectException<std::invalid_argument>(_l);
          else if (y >=  b.GetSizeY())  Assert::ExpectException<std::invalid_argument>(_l);
          else _l();
        }
    }

    TEST_METHOD(_SetPieceIndex)
    {
      BoardPart b(BoardPartDimension(4, 2, LayoutType::Alternating, 10, 10, 50, 50, 4, 4), BoardPartID::Stage, pBC);
      b.SetPieceIndex(pWC, 2, 1);
      Assert::IsTrue(b.GetPieceIndex(2, 1) == pWC);
      b.SetPieceIndex(pBC, 2, 1);
      Assert::IsTrue(b.GetPieceIndex(2, 1) == pBC);
    }
  };

  TEST_CLASS(_Board)
  {
    const PieceIndex pNP = PMap[Piece::NoPiece];
    const PieceIndex pNT = PMap[Piece::NoTile];
    const PieceIndex pWC = PMap[CorePiece::WC];
    const PieceIndex pBC = PMap[CorePiece::BC];
    class TestBoard : public Board
    {
    public:
      TestBoard(const VariantChosen& v, const BoardPartDimensions& d) noexcept : Board(v, d) {};
      virtual Board* Clone() const noexcept override { return new TestBoard(*this); }
    };
    VariantChosen v{0, 0, 0, 4, 2 };
    BoardPartDimensions d{
      {4, 2, LayoutType::Alternating,  10,  10, 50, 50,  0,  0 },
      {2, 2, LayoutType::Light,       260, 140, 50, 50,  0,  0 },
      {2, 2, LayoutType::Small,       260,  60, 50, 50,  0, 50 },
    };

    std::stringstream s;
// create a lambda that can be called with void() lambdas and executes them, to test serialization:
    std::function<std::string(std::function<void()>)> TrySerialize = [&](auto f) -> std::string
    {
      s.str().clear();  // clears flags only!
      s.str("");        // clears content
      f();
      return s.str();
    };

    TEST_METHOD(_Constructors)
    {
      TestBoard b1{ v,d };
      TestBoard b2(b1);
      Assert::IsTrue(b1 == b2);
      TestBoard b3(std::move(b1));
      Assert::IsTrue(b3 == b1); // wasn't moved! move is disabled!
      Assert::IsTrue(b3 == b2);
    }

    TEST_METHOD(_Clone)
    {
      TestBoard b1{ v,d };
      TestBoard* b = dynamic_cast<TestBoard*>(b1.Clone());
      Assert::IsNotNull(b);

      Assert::IsTrue(&b1 != b);
      TestBoard b2 = *b;
      Assert::IsTrue(b1 == b2);
    }

    TEST_METHOD(_GetHash)
    {
      TestBoard b1{ v,d };
      Assert::IsTrue(b1.GetHash() != 0);

      TestBoard b2{ v,d };
      Assert::IsTrue(b1.GetHash() == b2.GetHash());

      BoardPartDimensions d3{
        {4, 3, LayoutType::Alternating,  10,  10, 50, 50,  0,  0 },
        {2, 2, LayoutType::Light,       260, 140, 50, 50,  0,  0 },
        {2, 2, LayoutType::Small,       260,  60, 50, 50,  0, 50 },
      };

      TestBoard b3{ v,d3 };
      Assert::IsFalse(b1.GetHash() == b3.GetHash());
    }

    TEST_METHOD(_OperatorEqual)
    {
      TestBoard b1{ v,d };
      TestBoard b2{ v,d };
      Assert::IsTrue(b1 == b2);
      Assert::IsTrue(b2 == b1);

      BoardPartDimensions d3{
        {3, 4, LayoutType::Alternating,  10,  10, 50, 50,  0,  0 },
        {2, 2, LayoutType::Light,       260, 140, 50, 50,  0,  0 },
        {2, 2, LayoutType::Small,       260,  60, 50, 50,  0, 50 },
      };
      TestBoard b3{ v,d3 };
      Assert::IsFalse(b1 == b3);
      Assert::IsFalse(b3 == b1);

      b2.stage_.SetPieceIndex(pBC, 1, 1);
      Assert::IsFalse(b1 == b2);
      Assert::IsFalse(b2 == b1);

      b2.stage_.SetPieceIndex(pNP, 1, 1);
      Assert::IsTrue(b1 == b2);
      Assert::IsTrue(b2 == b1);
    }

    TEST_METHOD(_OperatorNotEqual)
    {
      TestBoard b1{ v,d };
      TestBoard b2{ v,d };
      Assert::IsFalse(b1 != b2);
      Assert::IsFalse(b2 != b1);

      BoardPartDimensions d3{
        {3, 4, LayoutType::Alternating,  10,  10, 50, 50,  0,  0 },
        {2, 2, LayoutType::Light,       260, 140, 50, 50,  0,  0 },
        {2, 2, LayoutType::Small,       260,  60, 50, 50,  0, 50 },
      };
      TestBoard b3{ v,d3 };
      Assert::IsTrue(b1 != b3);
      Assert::IsTrue(b3 != b2);

      b2.stage_.SetPieceIndex(pBC, 1, 1);
      Assert::IsTrue(b1 != b2);

      b2.stage_.SetPieceIndex(pNP, 1, 1);
      Assert::IsFalse(b1 != b2);
    }

    TEST_METHOD(_Serialize)
    {
      using namespace std::literals::string_literals;
      TestBoard b1{ v,d };
      std::string res1 = TrySerialize([this, &b1]() { b1.Serialize(s); });
      Assert::IsTrue(TrySerialize([this, &b1]() { b1.Serialize(s); }) ==
                     "\x4\x2\x3\0\xa\0\xa\0\x32\0\x32\0\0\0\0\0" "X X X X X X X X "
                     "\x2\x2\x4\0\x4\x1\x3c\0\x32\0\x32\0\0\0\x32\0" "XXXXXXXX"s);

      BoardPartDimensions d3{
        {3, 4, LayoutType::Alternating,  10,  10, 50, 50,  0,  0 },
        {2, 2, LayoutType::Light,       260, 140, 50, 50,  0,  0 },
        {2, 2, LayoutType::Small,       260,  60, 50, 50,  0, 50 },
      };
      TestBoard b3{ v,d3 };
      std::string res3 = TrySerialize([this, &b3]() { b3.Serialize(s); });
      Assert::IsTrue(TrySerialize([this, &b3]() { b3.Serialize(s); }) ==
                     "\x3\x4\x3\0\xa\0\xa\0\x32\0\x32\0\0\0\0\0" "X X X X X X X X X X X X "
                     "\x2\x2\x4\0\x4\x1\x3c\0\x32\0\x32\0\0\0\x32\0" "XXXXXXXX"s);
    }

    TEST_METHOD(_SetBoard)
    {
      TestBoard b{ v,d };
      Assert::IsTrue(b.GetPieceIndex(0, 0) == pNP);
      Assert::IsTrue(b.GetPieceIndex(0, 1) == pNP);
      Assert::IsTrue(b.GetPieceIndex(1, 0) == pNP);
      Assert::IsTrue(b.GetPieceIndex(1, 1) == pNP);
      Assert::IsTrue(b.GetPieceIndex(2, 0) == pNP);
      Assert::IsTrue(b.GetPieceIndex(2, 1) == pNP);
      Assert::IsTrue(b.GetPieceIndex(3, 0) == pNP);
      Assert::IsTrue(b.GetPieceIndex(3, 1) == pNP);

      const std::vector<PieceIndex>& list = { pNP, pNP, pWC, pBC, pNT, pNP, pWC, pBC };
      Assert::IsTrue(list.size() == 8);

      b.SetDepth(1);
      b.SetValue(true, PositionValue::PValueType::Won);
      b.SetBoard(list);
      Assert::IsTrue(b.GetPieceIndex(0, 0) == list[0]);
      Assert::IsTrue(b.GetPieceIndex(1, 0) == list[1]);
      Assert::IsTrue(b.GetPieceIndex(2, 0) == list[2]);
      Assert::IsTrue(b.GetPieceIndex(3, 0) == list[3]);
      Assert::IsTrue(b.GetPieceIndex(0, 1) == list[4]);
      Assert::IsTrue(b.GetPieceIndex(1, 1) == list[5]);
      Assert::IsTrue(b.GetPieceIndex(2, 1) == list[6]);
      Assert::IsTrue(b.GetPieceIndex(3, 1) == list[7]);
      Assert::IsTrue(b.GetValue(true) == PositionValue::PValueType::Undefined);
      Assert::IsTrue(b.GetDepth() == 0);
    }

    TEST_METHOD(_GetPieceIndex)
    {
      TestBoard b{ v,d };

      Assert::IsTrue(b.GetPieceIndex(3, 0) == pNP);
      Assert::IsTrue(b.GetPieceIndex(2, 1) == pNP);
      Assert::IsTrue(b.GetPieceIndex(3, 0, BoardPartID::Stage) == pNP);
      Assert::IsTrue(b.GetPieceIndex(2, 1, BoardPartID::Stage) == pNP);

      Assert::IsTrue(b.GetPieceIndex(1, 0, BoardPartID::Taken) == pNT);
      Assert::IsTrue(b.GetPieceIndex(0, 1, BoardPartID::Taken) == pNT);
      Assert::IsTrue(b.GetPieceIndex(1, 0, BoardPartID::Stock) == pNP);
      Assert::IsTrue(b.GetPieceIndex(0, 1, BoardPartID::Stock) == pNP);
    }

    TEST_METHOD(_SetPieceIndex)
    {
      TestBoard b{ v,d };

      Assert::IsTrue(b.GetPieceIndex(3, 0) == pNP);
      Assert::IsTrue(b.GetPieceIndex(2, 1) == pNP);
      Assert::IsTrue(b.GetPieceIndex(3, 0, BoardPartID::Stage) == pNP);
      Assert::IsTrue(b.GetPieceIndex(2, 1, BoardPartID::Stage) == pNP);

      b.SetPieceIndex(pWC, 2, 1);
      Assert::IsTrue(b.GetPieceIndex(3, 0) == pNP);
      Assert::IsTrue(b.GetPieceIndex(2, 1) == pWC);
      Assert::IsTrue(b.GetPieceIndex(3, 0, BoardPartID::Stage) == pNP);
      Assert::IsTrue(b.GetPieceIndex(2, 1, BoardPartID::Stage) == pWC);

      b.SetPieceIndex(pBC, 3, 0, BoardPartID::Stage);
      Assert::IsTrue(b.GetPieceIndex(3, 0) == pBC);
      Assert::IsTrue(b.GetPieceIndex(2, 1) == pWC);
      Assert::IsTrue(b.GetPieceIndex(3, 0, BoardPartID::Stage) == pBC);
      Assert::IsTrue(b.GetPieceIndex(2, 1, BoardPartID::Stage) == pWC);

      b.SetPieceIndex(pWC, 1, 0, BoardPartID::Taken);
      Assert::IsTrue(b.GetPieceIndex(1, 0) == pNP);
      Assert::IsTrue(b.GetPieceIndex(0, 1) == pNP);
      Assert::IsTrue(b.GetPieceIndex(1, 0, BoardPartID::Stage) == pNP);
      Assert::IsTrue(b.GetPieceIndex(0, 1, BoardPartID::Stage) == pNP);
      Assert::IsTrue(b.GetPieceIndex(1, 0, BoardPartID::Taken) == pWC); // only here
      Assert::IsTrue(b.GetPieceIndex(0, 1, BoardPartID::Taken) == pNT);
      Assert::IsTrue(b.GetPieceIndex(1, 0, BoardPartID::Stock) == pNP);
      Assert::IsTrue(b.GetPieceIndex(0, 1, BoardPartID::Stock) == pNP);

      b.SetPieceIndex(pBC, 1, 0, BoardPartID::Stock);
      Assert::IsTrue(b.GetPieceIndex(1, 0) == pNP);
      Assert::IsTrue(b.GetPieceIndex(0, 1) == pNP);
      Assert::IsTrue(b.GetPieceIndex(1, 0, BoardPartID::Stage) == pNP);
      Assert::IsTrue(b.GetPieceIndex(0, 1, BoardPartID::Stage) == pNP);
      Assert::IsTrue(b.GetPieceIndex(1, 0, BoardPartID::Taken) == pWC);
      Assert::IsTrue(b.GetPieceIndex(0, 1, BoardPartID::Taken) == pNT);
      Assert::IsTrue(b.GetPieceIndex(1, 0, BoardPartID::Stock) == pBC); // only here
      Assert::IsTrue(b.GetPieceIndex(0, 1, BoardPartID::Stock) == pNP);
    }

    TEST_METHOD(_SetGetValue)
    {
      TestBoard b{ v,d };
      Assert::IsTrue(b.GetValue(true) == PositionValue::PValueType::Undefined);
      Assert::IsTrue(b.GetValue(false) == PositionValue::PValueType::Undefined);
      b.SetValue(true, PositionValue::PValueType::Won);
      Assert::IsTrue(b.GetValue(true) == PositionValue::PValueType::Won);
      Assert::IsTrue(b.GetValue(false) == PositionValue::PValueType::Lost);
      constexpr PValueBaseType z = 37;
      b.SetValue(false, z);
      Assert::IsTrue(b.GetValue(true) == PositionValue(-z));
      Assert::IsTrue(b.GetValue(false) == PositionValue(z));
    }

    TEST_METHOD(_SetGetDepth)
    {
      TestBoard b{ v,d };
      Assert::IsTrue(b.GetDepth() == 0);
      constexpr Depth z = 7;
      b.SetDepth(z);
      Assert::IsTrue(b.GetDepth() == z);
    }

    TEST_METHOD(_GetMoveList)
    {
      class TestBoard : public Board
      {
      public:
        TestBoard(const VariantChosen& v, const BoardPartDimensions& d) noexcept : Board(v, d) {};
        virtual Board* Clone() const noexcept override { return new TestBoard(*this); }
        Moves& GetMovesW() { return movesW_; }
        Moves& GetMovesB() { return movesB_; }
      };

      TestBoard b{ v,d };
      Assert::IsTrue(&b.GetMoveList(true) == &b.GetMovesW());
      Assert::IsTrue(&b.GetMoveList(false) == &b.GetMovesB());
    }

    TEST_METHOD(_GetMoveCountFactor)
    {
      TestBoard b{ v,d };
      Assert::IsTrue(b.GetMoveCountFactor() == 20);
    }

    TEST_METHOD(_GetAllMoves)
    {
      class TestBoard : public Board
      {
        const PieceIndex pNP = PMap[Piece::NoPiece];
        const PieceIndex pNT = PMap[Piece::NoTile];
      public:
        TestBoard(const VariantChosen& v, const BoardPartDimensions& d) noexcept : Board(v, d) {};
        virtual Board* Clone() const noexcept override { return new TestBoard(*this); }
        virtual bool AddIfLegal(Moves& m, const Location& fr, const Location& to) const noexcept override
        {
          PieceIndex pfI = GetPieceIndex(fr.x_, fr.y_, fr.b_);
          assert(pfI != pNP);
          assert(pfI != pNT);
 
          PieceIndex ptI = GetPieceIndex(to.x_, to.y_, to.b_);
          if (ptI != pNP) return false;

          Actions a{};
          a.push_back(std::make_shared<ActionLift>(fr, pfI));     // pick piece up
          a.push_back(std::make_shared<ActionDrop>(to, ptI));     // and place it on target
          m.push_back(std::make_shared<Move>(a));                 // add move to move list
          return false;
        }

      };
      VariantChosen v{ 0, 0, 0, 4, 2 };
      BoardPartDimensions d{
        {4, 2, LayoutType::Alternating,  10,  10, 50, 50,  0,  0 },
        {2, 2, LayoutType::Light,       260, 140, 50, 50,  0,  0 },
        {2, 2, LayoutType::Small,       260,  60, 50, 50,  0, 50 },
      };

      class TestChecker final : public Kind
      {
      public:
        constexpr inline TestChecker() noexcept : Kind('C') {}
        constexpr virtual inline PositionValue GetValue(const Board& /*p*/, const Location& /*l*/) const noexcept override { return 100; }
        constexpr virtual void CollectMoves(const Board& p, const Location& l, Moves& m) const noexcept override
        {
          if (l.b_ != BoardPartID::Stage) return;  // this game does nto allow dropping taken pieces
          const TestBoard* b = dynamic_cast<const TestBoard*>(&p);
          assert(b != nullptr);
          PieceIndex pI = b->GetPieceIndex(l.x_, l.y_);
          const Piece& p0 = PMap[pI];
          assert(p0.IsKind(*this));
          const int dy = p0.IsColor(PieceColor::White) ? -1 : 1;
          b->AddIfLegal(m, l, l + Offset(1, dy));                          // check for slide moves
          b->AddIfLegal(m, l, l + Offset(-1, dy));
        }
      };
      constexpr static const TestChecker TheTestChecker{};

      class TestCheckersPiece final : public Piece
      {
      public:
        constexpr TestCheckersPiece(const PieceColor& c) noexcept : Piece(TheTestChecker, c, 1001) {}
      };
      constexpr static const TestCheckersPiece TestCheckersPieceW{ PieceColor::White };
      constexpr static const TestCheckersPiece TestCheckersPieceB{ PieceColor::Black };
      PMap.Register(TestCheckersPieceW);
      PMap.Register(TestCheckersPieceB);
      const PieceIndex pWC = PMap[TestCheckersPieceW];
      const PieceIndex pBC = PMap[TestCheckersPieceB];


      TestBoard b{ v,d };
      b.GetAllMoves();
      Assert::IsTrue(b.GetMoveList(true).size() == 0);
      Assert::IsTrue(b.GetMoveList(false).size() == 0);

      b.SetPieceIndex(pWC, 1, 1);
      b.GetAllMoves();

      auto m = b.GetMoveList(true);
      Assert::IsTrue(b.GetMoveList(true).size() == 2);
      Assert::IsTrue(b.GetMoveList(false).size() == 0);
    }

    TEST_METHOD(_EvaluateStatically)
    {
        constexpr const static PositionValue CValue = 31;
        constexpr const static PValueBaseType CFactor = 7;
        class TestBoard : public Board
        {
            const PieceIndex pNP = PMap[Piece::NoPiece];
            const PieceIndex pNT = PMap[Piece::NoTile];
        public:
            TestBoard(const VariantChosen& v, const BoardPartDimensions& d) noexcept : Board(v, d) {};
            virtual Board* Clone() const noexcept override { return new TestBoard(*this); }
            virtual bool AddIfLegal(Moves& m, const Location& fr, const Location& to) const noexcept override
            {
                PieceIndex pfI = GetPieceIndex(fr.x_, fr.y_, fr.b_);
                assert(pfI != pNP);
                assert(pfI != pNT);

                PieceIndex ptI = GetPieceIndex(to.x_, to.y_, to.b_);
                if (ptI != pNP) return false;

                Actions a{};
                a.push_back(std::make_shared<ActionLift>(fr, pfI));     // pick piece up
                a.push_back(std::make_shared<ActionDrop>(to, ptI));     // and place it on target
                m.push_back(std::make_shared<Move>(a));                 // add move to move list
                return false;
            }
            int GetMoveCountFactor() const noexcept override { return CFactor; }
        };
        VariantChosen v{ 0, 0, 0, 4, 2 };
        BoardPartDimensions d{
          {4, 2, LayoutType::Alternating,  10,  10, 50, 50,  0,  0 },
          {2, 2, LayoutType::Light,       260, 140, 50, 50,  0,  0 },
          {2, 2, LayoutType::Small,       260,  60, 50, 50,  0, 50 },
        };

        class TestChecker final : public Kind
        {
        public:
            constexpr inline TestChecker() noexcept : Kind('C') {}
            constexpr virtual inline PositionValue GetValue(const Board& /*p*/, const Location& /*l*/) const noexcept override { return CValue; }
            constexpr virtual void CollectMoves(const Board& p, const Location& l, Moves& m) const noexcept override
            {
                if (l.b_ != BoardPartID::Stage) return;  // this game does nto allow dropping taken pieces
                const TestBoard* b = dynamic_cast<const TestBoard*>(&p);
                assert(b != nullptr);
                PieceIndex pI = b->GetPieceIndex(l.x_, l.y_);
                const Piece& p0 = PMap[pI];
                assert(p0.IsKind(*this));
                const int dy = p0.IsColor(PieceColor::White) ? -1 : 1;
                b->AddIfLegal(m, l, l + Offset(1, dy));                          // check for slide moves
                b->AddIfLegal(m, l, l + Offset(-1, dy));
            }
        };
        constexpr static const TestChecker TheTestChecker{};

        class TestCheckersPiece final : public Piece
        {
        public:
            constexpr TestCheckersPiece(const PieceColor& c) noexcept : Piece(TheTestChecker, c, 1001) {}
        };
        constexpr static const TestCheckersPiece TestCheckersPieceW{ PieceColor::White };
        constexpr static const TestCheckersPiece TestCheckersPieceB{ PieceColor::Black };
        PMap.Register(TestCheckersPieceW);
        PMap.Register(TestCheckersPieceB);
        const PieceIndex pWC = PMap[TestCheckersPieceW];
        const PieceIndex pBC = PMap[TestCheckersPieceB];


        TestBoard b{ v,d };
        Assert::IsTrue(b.GetDepth() == 0);
        b.EvaluateStatically();
        Assert::IsTrue(b.GetDepth() == 1);
        Assert::IsTrue(b.GetValue(true) == PositionValue::PValueType::Lost);

        b.SetPieceIndex(pWC, 1, 1);
        b.GetAllMoves();
        b.EvaluateStatically();
        Assert::IsTrue(b.GetDepth() == 1);
        Assert::IsTrue(b.GetValue(true) == CValue + PositionValue(2)*CFactor);
    }

    TEST_METHOD(_Execute)
    {
      class TestBoard : public Board
      {
        const PieceIndex pNP = PMap[Piece::NoPiece];
        const PieceIndex pNT = PMap[Piece::NoTile];
      public:
        TestBoard(const VariantChosen& v, const BoardPartDimensions& d) noexcept : Board(v, d) {};
        virtual Board* Clone() const noexcept override { return new TestBoard(*this); }
        virtual bool AddIfLegal(Moves& m, const Location& fr, const Location& to) const noexcept override
        {
          PieceIndex pfI = GetPieceIndex(fr.x_, fr.y_, fr.b_);
          assert(pfI != pNP);
          assert(pfI != pNT);

          PieceIndex ptI = GetPieceIndex(to.x_, to.y_, to.b_);
          if (ptI != pNP) return false;

          Actions a{};
          a.push_back(std::make_shared<ActionLift>(fr, pfI));     // pick piece up
          a.push_back(std::make_shared<ActionDrop>(to, pfI));     // and place it on target
          m.push_back(std::make_shared<Move>(a));                 // add move to move list
          return false;
        }
      };
      VariantChosen v{ 0, 0, 0, 4, 2 };
      BoardPartDimensions d{
        {4, 2, LayoutType::Alternating,  10,  10, 50, 50,  0,  0 },
        {2, 2, LayoutType::Light,       260, 140, 50, 50,  0,  0 },
        {2, 2, LayoutType::Small,       260,  60, 50, 50,  0, 50 },
      };

      class TestChecker final : public Kind
      {
      public:
        constexpr inline TestChecker() noexcept : Kind('C') {}
        constexpr virtual inline PositionValue GetValue(const Board& /*p*/, const Location& /*l*/) const noexcept override { return 0; }
        constexpr virtual void CollectMoves(const Board& p, const Location& l, Moves& m) const noexcept override
        {
          if (l.b_ != BoardPartID::Stage) return;  // this game does nto allow dropping taken pieces
          const TestBoard* b = dynamic_cast<const TestBoard*>(&p);
          assert(b != nullptr);
          PieceIndex pI = b->GetPieceIndex(l.x_, l.y_);
          const Piece& p0 = PMap[pI];
          assert(p0.IsKind(*this));
          const int dy = p0.IsColor(PieceColor::White) ? -1 : 1;
          b->AddIfLegal(m, l, l + Offset(1, dy));                          // check for slide moves
          b->AddIfLegal(m, l, l + Offset(-1, dy));
        }
      };
      constexpr static const TestChecker TheTestChecker{};

      class TestCheckersPiece final : public Piece
      {
      public:
        constexpr TestCheckersPiece(const PieceColor& c) noexcept : Piece(TheTestChecker, c, 1001) {}
      };
      constexpr static const TestCheckersPiece TestCheckersPieceW{ PieceColor::White };
      constexpr static const TestCheckersPiece TestCheckersPieceB{ PieceColor::Black };
      PMap.Register(TestCheckersPieceW);
      PMap.Register(TestCheckersPieceB);
      const PieceIndex pWC = PMap[TestCheckersPieceW];
      const PieceIndex pBC = PMap[TestCheckersPieceB];


      TestBoard b{ v,d };
      Assert::IsTrue(b.GetDepth() == 0);
      b.EvaluateStatically();
      Assert::IsTrue(b.GetDepth() == 1);
      Assert::IsTrue(b.GetValue(true) == PositionValue::PValueType::Lost);

      b.SetPieceIndex(pWC, 1, 1);
      b.GetAllMoves();
      b.EvaluateStatically();
      const Move& m = *b.GetMoveList(true)[0];
      b.Execute(m);
      Assert::IsTrue(b.GetPieceIndex(1, 1) == pNP);  // Piece is gone from original field;
      Assert::IsTrue(b.GetPieceIndex(0, 0) == pNP);  // didn't move diagonally left;
      Assert::IsTrue(b.GetPieceIndex(2, 0) == pWC);  // did move diagonally right
    }

    TEST_METHOD(_WhiteOnTurn)
    {
      TestBoard b{ v,d };
      Assert::IsTrue(b.WhiteOnTurn());

      Actions a{};
      Move m{a};
      b.Execute(m);
      Assert::IsFalse(b.WhiteOnTurn());
    }

    TEST_METHOD(_GetLocationFromPoint)
    {
      BoardPartDimensions d0{
        {4, 2, LayoutType::Alternating,  10,  10, 50, 50,  4,  4 },
        {2, 2, LayoutType::Light,       260, 140, 50, 50,  0,  0 },
        {2, 2, LayoutType::Small,       260,  60, 50, 50,  0, 50 },
      };

      TestBoard b(v,d0);

      Coordinate x{ -1 };
      Coordinate y{ -1 };
      Location l{ BoardPartID::Stock,-1,-1 };

      Assert::IsFalse(b.GetLocationFromPoint(Point(  0,   0), l));
      Assert::IsFalse(b.GetLocationFromPoint(Point(  9,   9), l));
      Assert::IsTrue (b.GetLocationFromPoint(Point( 10,  10), l));  Assert::IsTrue(l.b_ == BoardPartID::Stage && l.x_ == 0 && l.y_ == 0);
      Assert::IsTrue (b.GetLocationFromPoint(Point( 15,  15), l));  Assert::IsTrue(l.b_ == BoardPartID::Stage && l.x_ == 0 && l.y_ == 0);
      Assert::IsFalse(b.GetLocationFromPoint(Point( 60,  60), l));  // between fields
      Assert::IsTrue (b.GetLocationFromPoint(Point( 64,  64), l));  Assert::IsTrue(l.b_ == BoardPartID::Stage && l.x_ == 1 && l.y_ == 1);
      Assert::IsTrue (b.GetLocationFromPoint(Point(113, 113), l));  Assert::IsTrue(l.b_ == BoardPartID::Stage && l.x_ == 1 && l.y_ == 1);
      Assert::IsFalse(b.GetLocationFromPoint(Point(114, 113), l));  // between fields
      Assert::IsFalse(b.GetLocationFromPoint(Point(114, 114), l));  // too far down
      Assert::IsTrue (b.GetLocationFromPoint(Point(118, 113), l));  Assert::IsTrue(l.b_ == BoardPartID::Stage && l.x_ == 2 && l.y_ == 1);
      Assert::IsFalse(b.GetLocationFromPoint(Point(222, 113), l));  // too far right
      Assert::IsFalse(b.GetLocationFromPoint(Point(227, 113), l));  // too far right

      Assert::IsTrue (b.GetLocationFromPoint(Point(265,  61), l));  Assert::IsTrue(l.b_ == BoardPartID::Taken && l.x_ == 0 && l.y_ == 0);
    }

    TEST_METHOD(_GetChainValue)
    {
      BoardPartDimensions d0{
        {4, 2, LayoutType::Alternating,  10,  10, 50, 50,  4,  4 },
        {2, 2, LayoutType::Light,       260, 140, 50, 50,  0,  0 },
        {2, 2, LayoutType::Small,       260,  60, 50, 50,  0, 50 },
      };
      class TestBoard : public Board
      {
      public:
        TestBoard(const VariantChosen& v, const BoardPartDimensions& d) noexcept : Board(v, d) {};
        virtual Board* Clone() const noexcept override { return new TestBoard(*this); }
        PValueBaseType TestGetChainValue(unsigned int z) const noexcept { return GetChainValue(z); }
      };
      TestBoard b(v, d0);

      Assert::IsTrue(b.TestGetChainValue(0) == 1);
      Assert::IsTrue(b.TestGetChainValue(3) == 1000);
      Assert::IsTrue(b.TestGetChainValue(9) == 1'000'000'000);
      Assert::IsTrue(b.TestGetChainValue(10) == 0);
      Assert::IsTrue(b.TestGetChainValue(16) == 0);
      Assert::IsTrue(b.TestGetChainValue(-1) == 0);
    }

    TEST_METHOD(_EvaluateChainLengths)
    {
      BoardPartDimensions d0{
        {4, 4, LayoutType::Alternating,  10,  10, 50, 50,  0,  0 },
        {2, 2, LayoutType::Light,       260, 140, 50, 50,  0,  0 },
        {2, 2, LayoutType::Small,       260,  60, 50, 50,  0, 50 },
      };
      class TestBoard : public Board
      {
      public:
        TestBoard(const VariantChosen& v, const BoardPartDimensions& d) noexcept : Board(v, d) {};
        virtual Board* Clone() const noexcept override { return new TestBoard(*this); }
        PositionValue TestEvaluateChainLengths(unsigned int towin) const noexcept { return EvaluateChainLengths(towin); }
      };
      TestBoard b(v, d0);
      Assert::IsTrue(b.TestEvaluateChainLengths(4) == PositionValue(0));

      b.SetPieceIndex(pWC, 1, 1);
      Assert::IsTrue(b.TestEvaluateChainLengths(4) == PositionValue(48));  // 4 directions * (10 + 2)
      b.SetPieceIndex(pWC, 2, 1);
      Assert::IsTrue(b.TestEvaluateChainLengths(4) == PositionValue(192));  // 6 directions * (10 + 2) + 1 directions * (100 + 20)
    }

  };


  TEST_CLASS(_Rest)
  {

    //TEST_METHOD(TestActions2?)
    //{
    //  // test with a board:
    //  BoardPartDimension d(5, 5, 0, 0, 0, 0);
    //  BoardPart b(d, BoardPart::LayoutType::Alternating, 3);
    //  Assert::IsTrue(b.GetPiece(1,2) == 3);  // verify BoardPart exists and is initialized

    //  b.SetPiece(2, 2, 3);


    //  class TestBoardPart : public BoardPart
    //  {
    //  public:
    //    TestBoardPart(const Location& l, const Piece& p) noexcept : l_{ l }, p_(&p), Board(Variants<Checkers::CheckersGame>::GetPieces(0), Checkers::CheckersGame::GetDimensions(0,8U, 8U)) {}
    //    virtual Board* Clone() const noexcept { return nullptr; }
    //    virtual const Piece& SetPiece(const Location& l, const Piece& p) noexcept override { Assert::IsTrue(l == l_); p_ = &p; return p; }
    //    virtual const Piece& GetPiece(const Location& l) const noexcept override { Assert::IsTrue(l == l_); return *p_; }
    //    const Location& l_;
    //    const Piece* p_;
    //  };

    //  TestBoard t{ l1, Piece::NoPiece };
    //  Assert::IsTrue(t.SetPiece(l1, Piece::NoPiece) == Piece::NoPiece);

    //  // testing Action.Execute():
    //  TestBoard t1{ a1->GetLocation(), a1->GetPiece() };   // take starting piece
    //  Assert::IsTrue(t1.GetPiece(a1->GetLocation()) == a1->GetPiece());
    //  a1->Execute(&t1);
    //  Assert::IsTrue(t1.GetPiece(a1->GetLocation()) == Piece::NoPiece);

    //  TestBoard t2{ a2->GetLocation(), Piece::NoPiece };  // jump over empty field
    //  Assert::IsTrue(t2.GetPiece(a2->GetLocation()) == Piece::NoPiece);
    //  a2->Execute(&t2);
    //  Assert::IsTrue(t2.GetPiece(a2->GetLocation()) == Piece::NoPiece);

    //  TestBoard t3{ a3->GetLocation(), Piece::NoPiece };  // place on empty field
    //  Assert::IsTrue(t3.GetPiece(a3->GetLocation()) == Piece::NoPiece);
    //  a3->Execute(&t3);
    //  Assert::IsTrue(t3.GetPiece(a3->GetLocation()) == a3->GetPiece());
    //}

    //TEST_METHOD(TestEvaluateChainLengths1)
    //{
    //  const PieceMapP& map = std::make_shared<PieceMap>();
    //  map->Empty();
    //  map->Add(CorePiece::WC);
    //  map->Add(CorePiece::BC);
    //  map->Add(Piece::NoPiece);

    //  constexpr unsigned int FieldSizeX = 50;   // pixels per tile
    //  constexpr unsigned int FieldSizeY = 50;   // pixels per tile

    //  constexpr unsigned int FieldSizeSX = 20;  // pixels per small tile
    //  constexpr unsigned int FieldSizeSY = 18;  // pixels per small tile

    //  constexpr unsigned int BoardStartX = 30;  // offset for drawing the board
    //  constexpr unsigned int BoardStartY = 30;  // offset for drawing the board
    //  Dimensions dim{
    //    Dimension(12, 12, BoardStartX, BoardStartY, FieldSizeX, FieldSizeY, 1, 1),
    //    Dimension(15, 2, BoardStartX + FieldSizeX * (8 + 1), BoardStartY + 8 * FieldSizeY + FieldSizeY / 2, FieldSizeX, FieldSizeY),
    //    Dimension(3 * 8, 2, BoardStartX + FieldSizeX * (8 + 1), BoardStartY + FieldSizeSY, FieldSizeSX, FieldSizeSY, 0, FieldSizeY * 8 - FieldSizeSY * 4),
    //  };


    //  class TestBoard : public Board
    //  {
    //  public:
    //    TestBoard(VariantChosen v, const PieceMapP& p, const Dimensions& d) noexcept : Board(v, p, d) {}
    //    virtual void SetStartingBoard() noexcept override {};
    //    virtual Board* Clone() const noexcept override { return new TestBoard(*this); }
    //  };

    //  { // create a test position and run test for white 1, 2, 3 ,4
    //    VariantChosen v_{ 0,0,0,0 };
    //    TestBoard p(v_, map, dim);
    //    PositionValue v(PositionValue::PValueType::Undefined);

    //    v = p.EvaluateChainLengths(3);
    //    Assert::IsTrue(v == PositionValue(0));
    //    v = p.EvaluateChainLengths(4);
    //    Assert::IsTrue(v == PositionValue(0));
    //    v = p.EvaluateChainLengths(5);
    //    Assert::IsTrue(v == PositionValue(0));

    //    // values are calculated: directions * ( free open ends + free open opposite ends ) + 1-chains + 2-chains + ...
    //    p.SetPiece(Location{ BoardPartID::Main,7,7 }, CorePiece::WC);
    //    v = p.EvaluateChainLengths(3);
    //    Assert::IsTrue(v == PositionValue(96)); // 8 * (1 + 1) + 8 * 10
    //    v = p.EvaluateChainLengths(4);
    //    Assert::IsTrue(v == PositionValue(96)); // 8 * (1 + 1) + 8 * 10
    //    v = p.EvaluateChainLengths(5);
    //    Assert::IsTrue(v == PositionValue(96)); // 8 * (1 + 1) + 8 * 10

    //    p.SetPiece(Location{ BoardPartID::Main,7,6 }, CorePiece::WC);
    //    v = p.EvaluateChainLengths(3);
    //    Assert::IsTrue(v == PositionValue(348)); // 7 * (1 + 1) + 2 * 6 * 10 + 2 * 100
    //    v = p.EvaluateChainLengths(4);
    //    Assert::IsTrue(v == PositionValue(348)); // 7 * (1 + 1) + 2 * 6 * 10 + 2 * 100
    //    v = p.EvaluateChainLengths(5);
    //    Assert::IsTrue(v == PositionValue(348)); // 7 * (1 + 1) + 2 * 6 * 10 + 2 * 100

    //    p.SetPiece(Location{ BoardPartID::Main,7,5 }, CorePiece::WC);
    //    v = p.EvaluateChainLengths(3);
    //    Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won));
    //    v = p.EvaluateChainLengths(4);
    //    Assert::IsTrue(v == PositionValue(2220)); // (7+6+7) * (1+1) + 6+6+6 * 10 + 2 * 1000
    //    v = p.EvaluateChainLengths(5);
    //    Assert::IsTrue(v == PositionValue(2220)); // (7+6+7) * (1+1) + 6+6+6 * 10 + 2 * 1000

    //    p.SetPiece(Location{ BoardPartID::Main,7,4 }, CorePiece::WC);
    //    v = p.EvaluateChainLengths(3);
    //    Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won));
    //    v = p.EvaluateChainLengths(4);
    //    Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won));
    //    v = p.EvaluateChainLengths(5);
    //    Assert::IsTrue(v == PositionValue(20292)); // (7+6+6+7) * (1+1) + 24 * 10 + 2 * 10000
    //  }

    //  { // create a test position and run test for white 1, 2, 3 ,4
    //    VariantChosen v_{ 0,0,0,0 };
    //    TestBoard p(v_, map, dim);
    //    PositionValue v(PositionValue::PValueType::Undefined);

    //    // values are calculated: directions * ( free open ends + free open opposite ends ) + 1-chains + 2-chains + ...
    //    p.SetPiece(Location{ BoardPartID::Main,7,7 }, CorePiece::WC);
    //    v = p.EvaluateChainLengths(3);
    //    Assert::IsTrue(v == PositionValue(96)); // 8 * (1 + 1) + 8 * 10
    //    v = p.EvaluateChainLengths(4);
    //    Assert::IsTrue(v == PositionValue(96)); // 8 * (1 + 1) + 8 * 10
    //    v = p.EvaluateChainLengths(5);
    //    Assert::IsTrue(v == PositionValue(96)); // 8 * (1 + 1) + 8 * 10

    //    p.SetPiece(Location{ BoardPartID::Main,6,7 }, CorePiece::WC);
    //    v = p.EvaluateChainLengths(3);
    //    Assert::IsTrue(v == PositionValue(348)); // 7 * (1 + 1) + 2 * 6 * 10 + 2 * 100
    //    v = p.EvaluateChainLengths(4);
    //    Assert::IsTrue(v == PositionValue(348)); // 7 * (1 + 1) + 2 * 6 * 10 + 2 * 100
    //    v = p.EvaluateChainLengths(5);
    //    Assert::IsTrue(v == PositionValue(348)); // 7 * (1 + 1) + 2 * 6 * 10 + 2 * 100

    //    p.SetPiece(Location{ BoardPartID::Main,8,7 }, CorePiece::WC);
    //    v = p.EvaluateChainLengths(3);
    //    Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won));
    //    v = p.EvaluateChainLengths(4);
    //    Assert::IsTrue(v == PositionValue(2220)); // (7+6+7) * (1+1) + 6+6+6 * 10 + 2 * 1000
    //    v = p.EvaluateChainLengths(5);
    //    Assert::IsTrue(v == PositionValue(2220)); // (7+6+7) * (1+1) + 6+6+6 * 10 + 2 * 1000

    //    p.SetPiece(Location{ BoardPartID::Main,5,7 }, CorePiece::WC);
    //    v = p.EvaluateChainLengths(3);
    //    Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won));
    //    v = p.EvaluateChainLengths(4);
    //    Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won));
    //    v = p.EvaluateChainLengths(5);
    //    Assert::IsTrue(v == PositionValue(20292)); // (7+6+6+7) * (1+1) + 24 * 10 + 2 * 10000
    //  }

    //  { // create a test position and run test for white 1, black 1, white 2, black 2, 
    //    VariantChosen v_{ 0,0,0,0 };
    //    TestBoard p(v_, map, dim);
    //    PositionValue v(PositionValue::PValueType::Undefined);

    //    p.SetPiece(Location{ BoardPartID::Main,7,7 }, CorePiece::WC);
    //    p.SetPiece(Location{ BoardPartID::Main,6,7 }, CorePiece::BC);
    //    v = p.EvaluateChainLengths(3);
    //    Assert::IsTrue(v == PositionValue(0)); // symmetry!
    //    v = p.EvaluateChainLengths(4);
    //    Assert::IsTrue(v == PositionValue(0));
    //    v = p.EvaluateChainLengths(5);
    //    Assert::IsTrue(v == PositionValue(0));

    //    p.SetPiece(Location{ BoardPartID::Main,7,6 }, CorePiece::WC);
    //    v = p.EvaluateChainLengths(3);
    //    Assert::IsTrue(v == PositionValue(252)); // 12 * 2 + 10 * 10 + 2 * 100 - 6 * 2 - 6 * 10
    //    v = p.EvaluateChainLengths(4);
    //    Assert::IsTrue(v == PositionValue(252)); // 12 * 2 + 10 * 10 + 2 * 100 - 6 * 2 - 6 * 10
    //    v = p.EvaluateChainLengths(5);
    //    Assert::IsTrue(v == PositionValue(252)); // 12 * 2 + 10 * 10 + 2 * 100 - 6 * 2 - 6 * 10

    //    p.SetPiece(Location{ BoardPartID::Main,6,6 }, CorePiece::BC);
    //    v = p.EvaluateChainLengths(3);
    //    Assert::IsTrue(v == PositionValue(0)); // symmetry!
    //    v = p.EvaluateChainLengths(4);
    //    Assert::IsTrue(v == PositionValue(0));
    //    v = p.EvaluateChainLengths(5);
    //    Assert::IsTrue(v == PositionValue(0));

    //  }
    //}

    //TEST_METHOD(TestEvaluateChainLengths2)
    //{
    //  const std::array<const Piece*,  3> pieces { &CorePiece::WC, &CorePiece::BC, &Piece::NoPiece };
    //  const std::array<const wchar_t, 3> symbols{  L'x',           L'o',           L'.'};

    //  const PieceMapP& map = std::make_shared<PieceMap>();
    //  map->Empty();
    //  map->Add(*pieces[0]);
    //  map->Add(*pieces[1]);
    //  map->Add(*pieces[2]);

    //  constexpr unsigned int FieldSizeX = 50;   // pixels per tile
    //  constexpr unsigned int FieldSizeY = 50;   // pixels per tile

    //  constexpr unsigned int FieldSizeSX = 20;  // pixels per small tile
    //  constexpr unsigned int FieldSizeSY = 18;  // pixels per small tile

    //  constexpr unsigned int BoardStartX = 30;  // offset for drawing the board
    //  constexpr unsigned int BoardStartY = 30;  // offset for drawing the board
    //  Dimensions dim{
    //    Dimension(3, 3, BoardStartX, BoardStartY, FieldSizeX, FieldSizeY, 1, 1),
    //    Dimension(15, 2, BoardStartX + FieldSizeX * (8 + 1), BoardStartY + 8 * FieldSizeY + FieldSizeY / 2, FieldSizeX, FieldSizeY),
    //    Dimension(3 * 8, 2, BoardStartX + FieldSizeX * (8 + 1), BoardStartY + FieldSizeSY, FieldSizeSX, FieldSizeSY, 0, FieldSizeY * 8 - FieldSizeSY * 4),
    //  };


    //  class TestBoard : public Board
    //  {
    //  public:
    //    TestBoard(VariantChosen v, const PieceMapP& p, const BoardPartDimensions& d) noexcept : Board(v, p, d) {}
    //    virtual void SetStartingBoard() noexcept override {};
    //    virtual Board* Clone() const noexcept override { return new TestBoard(*this); }
    //   };

    //  const int N = 3 * 3 * 3 * 3 * 3 * 3 * 3 * 3 * 3;
    //  VariantChosen v_{ 0,0,0,0 };
    //  TestBoard p(v_, map, dim);
    //  PositionValue v(PositionValue::PValueType::Undefined);

    //  wchar_t buffer[11]{ L"          " };

    //  for (int i = 0; i < N; i++)
    //  {
    //    int z = i;

    //    for (Coordinate j = 0; j < 9; ++j)
    //    {
    //      int k = z % 3;
    //      buffer[j] = symbols[k];
    //      p.SetPiece(Location{ BoardPartID::Main,j / 3U,j % 3U }, * pieces[k]);

    //      z /= 3;
    //    }

    //    v = p.EvaluateChainLengths(3);
    //    OutputDebugString(buffer); v.Log();
    //    continue;
    //    switch (i)
    //    {
    //      case     0: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx xxx
    //      case     1: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx xxx
    //      case     2: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx xxx
    //      case     3: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx xxx
    //      case     4: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx xxx
    //      case     5: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx xxx
    //      case     6: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx xxx
    //      case     7: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx xxx
    //      case     8: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx xxx
    //      case     9: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx xxx
    //      case    10: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx xxx
    //      case    11: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx xxx
    //      case    12: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx xxx
    //      case    13: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx xxx
    //      case    14: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx xxx
    //      case    15: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx xxx
    //      case    16: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx xxx
    //      case    17: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx xxx
    //      case    18: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx xxx
    //      case    19: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx xxx
    //      case    20: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx xxx
    //      case    21: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx xxx
    //      case    22: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx xxx
    //      case    23: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx xxx
    //      case    24: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx xxx
    //      case    25: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx xxx
    //      case    26: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx xxx
    //      case    27: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx xxx
    //      case    28: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx xxx
    //      case    29: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx xxx
    //      case    30: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx xxx
    //      case    31: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxx xxx
    //      case    32: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx xxx
    //      case    33: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx xxx
    //      case    34: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxx xxx
    //      case    35: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx xxx
    //      case    36: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx xxx
    //      case    37: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oxx xxx
    //      case    38: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxx xxx
    //      case    39: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxx xxx
    //      case    40: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx xxx
    //      case    41: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo oxx xxx
    //      case    42: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxx xxx
    //      case    43: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o oxx xxx
    //      case    44: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o oxx xxx
    //      case    45: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx xxx
    //      case    46: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oxx xxx
    //      case    47: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxx xxx
    //      case    48: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxx xxx
    //      case    49: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. oxx xxx
    //      case    50: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. oxx xxx
    //      case    51: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxx xxx
    //      case    52: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. oxx xxx
    //      case    53: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... oxx xxx
    //      case    54: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx xxx
    //      case    55: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx xxx
    //      case    56: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx xxx
    //      case    57: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx xxx
    //      case    58: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx xxx
    //      case    59: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx xxx
    //      case    60: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx xxx
    //      case    61: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx xxx
    //      case    62: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx xxx
    //      case    63: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx xxx
    //      case    64: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xx xxx
    //      case    65: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xx xxx
    //      case    66: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xx xxx
    //      case    67: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx xxx
    //      case    68: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo .xx xxx
    //      case    69: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xx xxx
    //      case    70: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o .xx xxx
    //      case    71: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o .xx xxx
    //      case    72: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx xxx
    //      case    73: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xx xxx
    //      case    74: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xx xxx
    //      case    75: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xx xxx
    //      case    76: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. .xx xxx
    //      case    77: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. .xx xxx
    //      case    78: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xx xxx
    //      case    79: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. .xx xxx
    //      case    80: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... .xx xxx
    //      case    81: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox xxx
    //      case    82: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xox xxx
    //      case    83: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xox xxx
    //      case    84: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox xxx
    //      case    85: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xox xxx
    //      case    86: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xox xxx
    //      case    87: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox xxx
    //      case    88: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xox xxx
    //      case    89: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xox xxx
    //      case    90: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xox xxx
    //      case    91: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xox xxx
    //      case    92: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xox xxx
    //      case    93: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xox xxx
    //      case    94: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox xxx
    //      case    95: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xox xxx
    //      case    96: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xox xxx
    //      case    97: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xox xxx
    //      case    98: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xox xxx
    //      case    99: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xox xxx
    //      case   100: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xox xxx
    //      case   101: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xox xxx
    //      case   102: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xox xxx
    //      case   103: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xox xxx
    //      case   104: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xox xxx
    //      case   105: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xox xxx
    //      case   106: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xox xxx
    //      case   107: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xox xxx
    //      case   108: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox xxx
    //      case   109: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oox xxx
    //      case   110: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oox xxx
    //      case   111: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oox xxx
    //      case   112: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oox xxx
    //      case   113: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oox xxx
    //      case   114: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oox xxx
    //      case   115: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oox xxx
    //      case   116: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oox xxx
    //      case   117: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oox xxx
    //      case   118: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oox xxx
    //      case   119: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oox xxx
    //      case   120: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oox xxx
    //      case   121: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox xxx
    //      case   122: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo oox xxx
    //      case   123: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oox xxx
    //      case   124: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o oox xxx
    //      case   125: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o oox xxx
    //      case   126: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oox xxx
    //      case   127: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oox xxx
    //      case   128: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oox xxx
    //      case   129: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oox xxx
    //      case   130: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. oox xxx
    //      case   131: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. oox xxx
    //      case   132: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oox xxx
    //      case   133: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. oox xxx
    //      case   134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... oox xxx
    //      case   135: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox xxx
    //      case   136: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .ox xxx
    //      case   137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .ox xxx
    //      case   138: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .ox xxx
    //      case   139: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .ox xxx
    //      case   140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .ox xxx
    //      case   141: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .ox xxx
    //      case   142: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .ox xxx
    //      case   143: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .ox xxx
    //      case   144: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .ox xxx
    //      case   145: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .ox xxx
    //      case   146: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .ox xxx
    //      case   147: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .ox xxx
    //      case   148: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox xxx
    //      case   149: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo .ox xxx
    //      case   150: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .ox xxx
    //      case   151: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o .ox xxx
    //      case   152: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o .ox xxx
    //      case   153: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .ox xxx
    //      case   154: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .ox xxx
    //      case   155: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .ox xxx
    //      case   156: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .ox xxx
    //      case   157: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. .ox xxx
    //      case   158: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. .ox xxx
    //      case   159: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .ox xxx
    //      case   160: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. .ox xxx
    //      case   161: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... .ox xxx
    //      case   162: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x xxx
    //      case   163: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx x.x xxx
    //      case   164: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx x.x xxx
    //      case   165: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x xxx
    //      case   166: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox x.x xxx
    //      case   167: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox x.x xxx
    //      case   168: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x xxx
    //      case   169: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x x.x xxx
    //      case   170: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x x.x xxx
    //      case   171: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.x xxx
    //      case   172: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo x.x xxx
    //      case   173: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo x.x xxx
    //      case   174: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.x xxx
    //      case   175: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x xxx
    //      case   176: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo x.x xxx
    //      case   177: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.x xxx
    //      case   178: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o x.x xxx
    //      case   179: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o x.x xxx
    //      case   180: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.x xxx
    //      case   181: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. x.x xxx
    //      case   182: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. x.x xxx
    //      case   183: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.x xxx
    //      case   184: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. x.x xxx
    //      case   185: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. x.x xxx
    //      case   186: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.x xxx
    //      case   187: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. x.x xxx
    //      case   188: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... x.x xxx
    //      case   189: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x xxx
    //      case   190: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx o.x xxx
    //      case   191: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx o.x xxx
    //      case   192: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox o.x xxx
    //      case   193: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox o.x xxx
    //      case   194: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox o.x xxx
    //      case   195: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x o.x xxx
    //      case   196: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x o.x xxx
    //      case   197: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x o.x xxx
    //      case   198: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo o.x xxx
    //      case   199: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo o.x xxx
    //      case   200: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo o.x xxx
    //      case   201: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo o.x xxx
    //      case   202: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x xxx
    //      case   203: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo o.x xxx
    //      case   204: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o o.x xxx
    //      case   205: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o o.x xxx
    //      case   206: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o o.x xxx
    //      case   207: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. o.x xxx
    //      case   208: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. o.x xxx
    //      case   209: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. o.x xxx
    //      case   210: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. o.x xxx
    //      case   211: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. o.x xxx
    //      case   212: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. o.x xxx
    //      case   213: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. o.x xxx
    //      case   214: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. o.x xxx
    //      case   215: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... o.x xxx
    //      case   216: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x xxx
    //      case   217: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ..x xxx
    //      case   218: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ..x xxx
    //      case   219: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ..x xxx
    //      case   220: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ..x xxx
    //      case   221: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ..x xxx
    //      case   222: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ..x xxx
    //      case   223: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ..x xxx
    //      case   224: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ..x xxx
    //      case   225: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ..x xxx
    //      case   226: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo ..x xxx
    //      case   227: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo ..x xxx
    //      case   228: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo ..x xxx
    //      case   229: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x xxx
    //      case   230: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo ..x xxx
    //      case   231: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o ..x xxx
    //      case   232: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o ..x xxx
    //      case   233: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o ..x xxx
    //      case   234: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ..x xxx
    //      case   235: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. ..x xxx
    //      case   236: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. ..x xxx
    //      case   237: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. ..x xxx
    //      case   238: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. ..x xxx
    //      case   239: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. ..x xxx
    //      case   240: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. ..x xxx
    //      case   241: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. ..x xxx
    //      case   242: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... ..x xxx
    //      case   243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo xxx
    //      case   244: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo xxx
    //      case   245: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo xxx
    //      case   246: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo xxx
    //      case   247: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxo xxx
    //      case   248: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxo xxx
    //      case   249: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo xxx
    //      case   250: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxo xxx
    //      case   251: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxo xxx
    //      case   252: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo xxx
    //      case   253: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxo xxx
    //      case   254: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxo xxx
    //      case   255: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo xxx
    //      case   256: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo xxx
    //      case   257: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxo xxx
    //      case   258: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo xxx
    //      case   259: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxo xxx
    //      case   260: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxo xxx
    //      case   261: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo xxx
    //      case   262: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxo xxx
    //      case   263: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxo xxx
    //      case   264: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo xxx
    //      case   265: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxo xxx
    //      case   266: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxo xxx
    //      case   267: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo xxx
    //      case   268: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxo xxx
    //      case   269: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxo xxx
    //      case   270: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo xxx
    //      case   271: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxo xxx
    //      case   272: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo xxx
    //      case   273: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo xxx
    //      case   274: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxo xxx
    //      case   275: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxo xxx
    //      case   276: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo xxx
    //      case   277: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxo xxx
    //      case   278: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxo xxx
    //      case   279: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo xxx
    //      case   280: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oxo xxx
    //      case   281: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxo xxx
    //      case   282: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxo xxx
    //      case   283: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo xxx
    //      case   284: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo oxo xxx
    //      case   285: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxo xxx
    //      case   286: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o oxo xxx
    //      case   287: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o oxo xxx
    //      case   288: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo xxx
    //      case   289: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oxo xxx
    //      case   290: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxo xxx
    //      case   291: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxo xxx
    //      case   292: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. oxo xxx
    //      case   293: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. oxo xxx
    //      case   294: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxo xxx
    //      case   295: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. oxo xxx
    //      case   296: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... oxo xxx
    //      case   297: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo xxx
    //      case   298: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo xxx
    //      case   299: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo xxx
    //      case   300: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo xxx
    //      case   301: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xo xxx
    //      case   302: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xo xxx
    //      case   303: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo xxx
    //      case   304: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xo xxx
    //      case   305: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xo xxx
    //      case   306: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo xxx
    //      case   307: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xo xxx
    //      case   308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xo xxx
    //      case   309: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xo xxx
    //      case   310: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo xxx
    //      case   311: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo .xo xxx
    //      case   312: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xo xxx
    //      case   313: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o .xo xxx
    //      case   314: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o .xo xxx
    //      case   315: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo xxx
    //      case   316: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xo xxx
    //      case   317: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xo xxx
    //      case   318: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xo xxx
    //      case   319: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. .xo xxx
    //      case   320: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. .xo xxx
    //      case   321: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xo xxx
    //      case   322: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. .xo xxx
    //      case   323: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... .xo xxx
    //      case   324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo xxx
    //      case   325: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xoo xxx
    //      case   326: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xoo xxx
    //      case   327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xoo xxx
    //      case   328: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xoo xxx
    //      case   329: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xoo xxx
    //      case   330: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xoo xxx
    //      case   331: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xoo xxx
    //      case   332: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xoo xxx
    //      case   333: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xoo xxx
    //      case   334: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xoo xxx
    //      case   335: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xoo xxx
    //      case   336: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xoo xxx
    //      case   337: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo xxx
    //      case   338: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xoo xxx
    //      case   339: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xoo xxx
    //      case   340: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xoo xxx
    //      case   341: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xoo xxx
    //      case   342: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xoo xxx
    //      case   343: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xoo xxx
    //      case   344: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xoo xxx
    //      case   345: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xoo xxx
    //      case   346: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xoo xxx
    //      case   347: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xoo xxx
    //      case   348: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xoo xxx
    //      case   349: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xoo xxx
    //      case   350: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xoo xxx
    //      case   351: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo xxx
    //      case   352: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo xxx
    //      case   353: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo xxx
    //      case   354: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo xxx
    //      case   355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo xxx
    //      case   356: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo xxx
    //      case   357: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo xxx
    //      case   358: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo xxx
    //      case   359: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo xxx
    //      case   360: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo xxx
    //      case   361: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo xxx
    //      case   362: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo xxx
    //      case   363: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo xxx
    //      case   364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo xxx
    //      case   365: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo xxx
    //      case   366: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo xxx
    //      case   367: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo xxx
    //      case   368: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo xxx
    //      case   369: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo xxx
    //      case   370: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo xxx
    //      case   371: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo xxx
    //      case   372: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo xxx
    //      case   373: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo xxx
    //      case   374: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo xxx
    //      case   375: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo xxx
    //      case   376: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo xxx
    //      case   377: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo xxx
    //      case   378: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo xxx
    //      case   379: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .oo xxx
    //      case   380: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .oo xxx
    //      case   381: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .oo xxx
    //      case   382: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .oo xxx
    //      case   383: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .oo xxx
    //      case   384: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .oo xxx
    //      case   385: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .oo xxx
    //      case   386: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .oo xxx
    //      case   387: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .oo xxx
    //      case   388: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .oo xxx
    //      case   389: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .oo xxx
    //      case   390: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .oo xxx
    //      case   391: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo xxx
    //      case   392: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo .oo xxx
    //      case   393: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .oo xxx
    //      case   394: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o .oo xxx
    //      case   395: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o .oo xxx
    //      case   396: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .oo xxx
    //      case   397: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .oo xxx
    //      case   398: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .oo xxx
    //      case   399: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .oo xxx
    //      case   400: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. .oo xxx
    //      case   401: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. .oo xxx
    //      case   402: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .oo xxx
    //      case   403: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. .oo xxx
    //      case   404: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... .oo xxx
    //      case   405: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o xxx
    //      case   406: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx x.o xxx
    //      case   407: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx x.o xxx
    //      case   408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.o xxx
    //      case   409: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox x.o xxx
    //      case   410: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox x.o xxx
    //      case   411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.o xxx
    //      case   412: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x x.o xxx
    //      case   413: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x x.o xxx
    //      case   414: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.o xxx
    //      case   415: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo x.o xxx
    //      case   416: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo x.o xxx
    //      case   417: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.o xxx
    //      case   418: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o xxx
    //      case   419: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo x.o xxx
    //      case   420: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.o xxx
    //      case   421: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o x.o xxx
    //      case   422: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o x.o xxx
    //      case   423: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.o xxx
    //      case   424: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. x.o xxx
    //      case   425: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. x.o xxx
    //      case   426: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.o xxx
    //      case   427: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. x.o xxx
    //      case   428: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. x.o xxx
    //      case   429: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.o xxx
    //      case   430: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. x.o xxx
    //      case   431: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... x.o xxx
    //      case   432: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o xxx
    //      case   433: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx o.o xxx
    //      case   434: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx o.o xxx
    //      case   435: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox o.o xxx
    //      case   436: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox o.o xxx
    //      case   437: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox o.o xxx
    //      case   438: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x o.o xxx
    //      case   439: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x o.o xxx
    //      case   440: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x o.o xxx
    //      case   441: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo o.o xxx
    //      case   442: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo o.o xxx
    //      case   443: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo o.o xxx
    //      case   444: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo o.o xxx
    //      case   445: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o xxx
    //      case   446: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo o.o xxx
    //      case   447: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o o.o xxx
    //      case   448: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o o.o xxx
    //      case   449: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o o.o xxx
    //      case   450: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. o.o xxx
    //      case   451: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. o.o xxx
    //      case   452: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. o.o xxx
    //      case   453: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. o.o xxx
    //      case   454: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. o.o xxx
    //      case   455: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. o.o xxx
    //      case   456: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. o.o xxx
    //      case   457: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. o.o xxx
    //      case   458: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... o.o xxx
    //      case   459: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o xxx
    //      case   460: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ..o xxx
    //      case   461: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ..o xxx
    //      case   462: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ..o xxx
    //      case   463: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ..o xxx
    //      case   464: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ..o xxx
    //      case   465: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ..o xxx
    //      case   466: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ..o xxx
    //      case   467: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ..o xxx
    //      case   468: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ..o xxx
    //      case   469: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo ..o xxx
    //      case   470: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo ..o xxx
    //      case   471: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo ..o xxx
    //      case   472: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o xxx
    //      case   473: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo ..o xxx
    //      case   474: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o ..o xxx
    //      case   475: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o ..o xxx
    //      case   476: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o ..o xxx
    //      case   477: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ..o xxx
    //      case   478: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. ..o xxx
    //      case   479: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. ..o xxx
    //      case   480: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. ..o xxx
    //      case   481: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. ..o xxx
    //      case   482: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. ..o xxx
    //      case   483: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. ..o xxx
    //      case   484: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. ..o xxx
    //      case   485: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... ..o xxx
    //      case   486: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. xxx
    //      case   487: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. xxx
    //      case   488: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. xxx
    //      case   489: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. xxx
    //      case   490: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xx. xxx
    //      case   491: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xx. xxx
    //      case   492: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. xxx
    //      case   493: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xx. xxx
    //      case   494: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xx. xxx
    //      case   495: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. xxx
    //      case   496: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xx. xxx
    //      case   497: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xx. xxx
    //      case   498: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. xxx
    //      case   499: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. xxx
    //      case   500: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xx. xxx
    //      case   501: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. xxx
    //      case   502: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xx. xxx
    //      case   503: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xx. xxx
    //      case   504: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. xxx
    //      case   505: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xx. xxx
    //      case   506: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xx. xxx
    //      case   507: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. xxx
    //      case   508: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xx. xxx
    //      case   509: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xx. xxx
    //      case   510: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. xxx
    //      case   511: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xx. xxx
    //      case   512: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xx. xxx
    //      case   513: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. xxx
    //      case   514: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ox. xxx
    //      case   515: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. xxx
    //      case   516: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. xxx
    //      case   517: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ox. xxx
    //      case   518: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ox. xxx
    //      case   519: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. xxx
    //      case   520: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ox. xxx
    //      case   521: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ox. xxx
    //      case   522: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. xxx
    //      case   523: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo ox. xxx
    //      case   524: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo ox. xxx
    //      case   525: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo ox. xxx
    //      case   526: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. xxx
    //      case   527: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo ox. xxx
    //      case   528: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o ox. xxx
    //      case   529: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o ox. xxx
    //      case   530: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o ox. xxx
    //      case   531: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. xxx
    //      case   532: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. ox. xxx
    //      case   533: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. ox. xxx
    //      case   534: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. ox. xxx
    //      case   535: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. ox. xxx
    //      case   536: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. ox. xxx
    //      case   537: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. ox. xxx
    //      case   538: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. ox. xxx
    //      case   539: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... ox. xxx
    //      case   540: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. xxx
    //      case   541: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. xxx
    //      case   542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. xxx
    //      case   543: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. xxx
    //      case   544: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .x. xxx
    //      case   545: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .x. xxx
    //      case   546: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. xxx
    //      case   547: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .x. xxx
    //      case   548: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .x. xxx
    //      case   549: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. xxx
    //      case   550: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .x. xxx
    //      case   551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .x. xxx
    //      case   552: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .x. xxx
    //      case   553: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. xxx
    //      case   554: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo .x. xxx
    //      case   555: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .x. xxx
    //      case   556: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o .x. xxx
    //      case   557: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o .x. xxx
    //      case   558: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. xxx
    //      case   559: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .x. xxx
    //      case   560: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .x. xxx
    //      case   561: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .x. xxx
    //      case   562: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. .x. xxx
    //      case   563: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. .x. xxx
    //      case   564: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .x. xxx
    //      case   565: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. .x. xxx
    //      case   566: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... .x. xxx
    //      case   567: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. xxx
    //      case   568: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xo. xxx
    //      case   569: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xo. xxx
    //      case   570: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xo. xxx
    //      case   571: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xo. xxx
    //      case   572: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xo. xxx
    //      case   573: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xo. xxx
    //      case   574: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xo. xxx
    //      case   575: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xo. xxx
    //      case   576: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xo. xxx
    //      case   577: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xo. xxx
    //      case   578: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xo. xxx
    //      case   579: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xo. xxx
    //      case   580: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. xxx
    //      case   581: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xo. xxx
    //      case   582: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xo. xxx
    //      case   583: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xo. xxx
    //      case   584: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xo. xxx
    //      case   585: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xo. xxx
    //      case   586: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xo. xxx
    //      case   587: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xo. xxx
    //      case   588: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xo. xxx
    //      case   589: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xo. xxx
    //      case   590: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xo. xxx
    //      case   591: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xo. xxx
    //      case   592: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xo. xxx
    //      case   593: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xo. xxx
    //      case   594: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. xxx
    //      case   595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oo. xxx
    //      case   596: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oo. xxx
    //      case   597: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oo. xxx
    //      case   598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oo. xxx
    //      case   599: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oo. xxx
    //      case   600: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oo. xxx
    //      case   601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oo. xxx
    //      case   602: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oo. xxx
    //      case   603: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oo. xxx
    //      case   604: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oo. xxx
    //      case   605: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oo. xxx
    //      case   606: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oo. xxx
    //      case   607: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. xxx
    //      case   608: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo oo. xxx
    //      case   609: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oo. xxx
    //      case   610: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o oo. xxx
    //      case   611: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o oo. xxx
    //      case   612: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oo. xxx
    //      case   613: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oo. xxx
    //      case   614: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oo. xxx
    //      case   615: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oo. xxx
    //      case   616: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. oo. xxx
    //      case   617: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. oo. xxx
    //      case   618: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oo. xxx
    //      case   619: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. oo. xxx
    //      case   620: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... oo. xxx
    //      case   621: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. xxx
    //      case   622: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .o. xxx
    //      case   623: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .o. xxx
    //      case   624: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .o. xxx
    //      case   625: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .o. xxx
    //      case   626: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .o. xxx
    //      case   627: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .o. xxx
    //      case   628: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .o. xxx
    //      case   629: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .o. xxx
    //      case   630: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .o. xxx
    //      case   631: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .o. xxx
    //      case   632: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .o. xxx
    //      case   633: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .o. xxx
    //      case   634: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. xxx
    //      case   635: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo .o. xxx
    //      case   636: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .o. xxx
    //      case   637: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o .o. xxx
    //      case   638: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o .o. xxx
    //      case   639: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .o. xxx
    //      case   640: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .o. xxx
    //      case   641: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .o. xxx
    //      case   642: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .o. xxx
    //      case   643: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. .o. xxx
    //      case   644: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. .o. xxx
    //      case   645: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .o. xxx
    //      case   646: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. .o. xxx
    //      case   647: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... .o. xxx
    //      case   648: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. xxx
    //      case   649: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx x.. xxx
    //      case   650: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx x.. xxx
    //      case   651: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.. xxx
    //      case   652: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox x.. xxx
    //      case   653: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox x.. xxx
    //      case   654: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.. xxx
    //      case   655: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x x.. xxx
    //      case   656: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x x.. xxx
    //      case   657: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.. xxx
    //      case   658: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo x.. xxx
    //      case   659: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo x.. xxx
    //      case   660: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.. xxx
    //      case   661: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. xxx
    //      case   662: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo x.. xxx
    //      case   663: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.. xxx
    //      case   664: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o x.. xxx
    //      case   665: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o x.. xxx
    //      case   666: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.. xxx
    //      case   667: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. x.. xxx
    //      case   668: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. x.. xxx
    //      case   669: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.. xxx
    //      case   670: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. x.. xxx
    //      case   671: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. x.. xxx
    //      case   672: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.. xxx
    //      case   673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. x.. xxx
    //      case   674: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... x.. xxx
    //      case   675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. xxx
    //      case   676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx o.. xxx
    //      case   677: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx o.. xxx
    //      case   678: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox o.. xxx
    //      case   679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox o.. xxx
    //      case   680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox o.. xxx
    //      case   681: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x o.. xxx
    //      case   682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x o.. xxx
    //      case   683: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x o.. xxx
    //      case   684: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo o.. xxx
    //      case   685: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo o.. xxx
    //      case   686: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo o.. xxx
    //      case   687: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo o.. xxx
    //      case   688: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. xxx
    //      case   689: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo o.. xxx
    //      case   690: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o o.. xxx
    //      case   691: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o o.. xxx
    //      case   692: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o o.. xxx
    //      case   693: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. o.. xxx
    //      case   694: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. o.. xxx
    //      case   695: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. o.. xxx
    //      case   696: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. o.. xxx
    //      case   697: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. o.. xxx
    //      case   698: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. o.. xxx
    //      case   699: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. o.. xxx
    //      case   700: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. o.. xxx
    //      case   701: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... o.. xxx
    //      case   702: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... xxx
    //      case   703: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ... xxx
    //      case   704: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ... xxx
    //      case   705: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ... xxx
    //      case   706: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ... xxx
    //      case   707: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ... xxx
    //      case   708: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ... xxx
    //      case   709: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ... xxx
    //      case   710: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ... xxx
    //      case   711: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ... xxx
    //      case   712: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo ... xxx
    //      case   713: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo ... xxx
    //      case   714: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo ... xxx
    //      case   715: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... xxx
    //      case   716: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo ... xxx
    //      case   717: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o ... xxx
    //      case   718: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o ... xxx
    //      case   719: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o ... xxx
    //      case   720: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ... xxx
    //      case   721: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. ... xxx
    //      case   722: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. ... xxx
    //      case   723: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. ... xxx
    //      case   724: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. ... xxx
    //      case   725: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. ... xxx
    //      case   726: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. ... xxx
    //      case   727: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. ... xxx
    //      case   728: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... ... xxx
    //      case   729: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx oxx
    //      case   730: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx oxx
    //      case   731: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx oxx
    //      case   732: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx oxx
    //      case   733: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx oxx
    //      case   734: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx oxx
    //      case   735: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx oxx
    //      case   736: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx oxx
    //      case   737: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx oxx
    //      case   738: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx oxx
    //      case   739: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx oxx
    //      case   740: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx oxx
    //      case   741: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx oxx
    //      case   742: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx oxx
    //      case   743: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx oxx
    //      case   744: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx oxx
    //      case   745: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx oxx
    //      case   746: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx oxx
    //      case   747: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx oxx
    //      case   748: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx oxx
    //      case   749: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx oxx
    //      case   750: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx oxx
    //      case   751: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx oxx
    //      case   752: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx oxx
    //      case   753: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx oxx
    //      case   754: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx oxx
    //      case   755: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx oxx
    //      case   756: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx oxx
    //      case   757: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxx oxx
    //      case   758: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx oxx
    //      case   759: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx oxx
    //      case   760: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxx oxx
    //      case   761: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx oxx
    //      case   762: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx oxx
    //      case   763: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxx oxx
    //      case   764: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx oxx
    //      case   765: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx oxx
    //      case   766: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxx oxx
    //      case   767: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxx oxx
    //      case   768: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxx oxx
    //      case   769: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx oxx
    //      case   770: Assert::IsTrue(v == PositionValue(+  230                         )); break;  // .oo oxx oxx
    //      case   771: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxx oxx
    //      case   772: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxx oxx
    //      case   773: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // ..o oxx oxx
    //      case   774: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx oxx
    //      case   775: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxx oxx
    //      case   776: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxx oxx
    //      case   777: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxx oxx
    //      case   778: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxx oxx
    //      case   779: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // .o. oxx oxx
    //      case   780: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxx oxx
    //      case   781: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxx oxx
    //      case   782: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // ... oxx oxx
    //      case   783: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx oxx
    //      case   784: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx oxx
    //      case   785: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx oxx
    //      case   786: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx oxx
    //      case   787: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx oxx
    //      case   788: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx oxx
    //      case   789: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx oxx
    //      case   790: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx oxx
    //      case   791: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx oxx
    //      case   792: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx oxx
    //      case   793: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xx oxx
    //      case   794: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xx oxx
    //      case   795: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xx oxx
    //      case   796: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx oxx
    //      case   797: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // .oo .xx oxx
    //      case   798: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xx oxx
    //      case   799: Assert::IsTrue(v == PositionValue(+  538                         )); break;  // o.o .xx oxx
    //      case   800: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // ..o .xx oxx
    //      case   801: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx oxx
    //      case   802: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xx oxx
    //      case   803: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xx oxx
    //      case   804: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xx oxx
    //      case   805: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // oo. .xx oxx
    //      case   806: Assert::IsTrue(v == PositionValue(+  588                         )); break;  // .o. .xx oxx
    //      case   807: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xx oxx
    //      case   808: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // o.. .xx oxx
    //      case   809: Assert::IsTrue(v == PositionValue(+  642                         )); break;  // ... .xx oxx
    //      case   810: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox oxx
    //      case   811: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xox oxx
    //      case   812: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xox oxx
    //      case   813: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox oxx
    //      case   814: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xox oxx
    //      case   815: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xox oxx
    //      case   816: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox oxx
    //      case   817: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xox oxx
    //      case   818: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xox oxx
    //      case   819: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xox oxx
    //      case   820: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox oxx
    //      case   821: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xox oxx
    //      case   822: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xox oxx
    //      case   823: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox oxx
    //      case   824: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox oxx
    //      case   825: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xox oxx
    //      case   826: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox oxx
    //      case   827: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xox oxx
    //      case   828: Assert::IsTrue(v == PositionValue(+  730                         )); break;  // xx. xox oxx
    //      case   829: Assert::IsTrue(v == PositionValue(+  401                         )); break;  // ox. xox oxx
    //      case   830: Assert::IsTrue(v == PositionValue(+  522                         )); break;  // .x. xox oxx
    //      case   831: Assert::IsTrue(v == PositionValue(+  319                         )); break;  // xo. xox oxx
    //      case   832: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // oo. xox oxx
    //      case   833: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // .o. xox oxx
    //      case   834: Assert::IsTrue(v == PositionValue(+  442                         )); break;  // x.. xox oxx
    //      case   835: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // o.. xox oxx
    //      case   836: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // ... xox oxx
    //      case   837: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox oxx
    //      case   838: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox oxx
    //      case   839: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oox oxx
    //      case   840: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oox oxx
    //      case   841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox oxx
    //      case   842: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oox oxx
    //      case   843: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oox oxx
    //      case   844: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox oxx
    //      case   845: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oox oxx
    //      case   846: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oox oxx
    //      case   847: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox oxx
    //      case   848: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oox oxx
    //      case   849: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox oxx
    //      case   850: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox oxx
    //      case   851: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox oxx
    //      case   852: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oox oxx
    //      case   853: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox oxx
    //      case   854: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oox oxx
    //      case   855: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xx. oox oxx
    //      case   856: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox oxx
    //      case   857: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // .x. oox oxx
    //      case   858: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xo. oox oxx
    //      case   859: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox oxx
    //      case   860: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .o. oox oxx
    //      case   861: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.. oox oxx
    //      case   862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox oxx
    //      case   863: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // ... oox oxx
    //      case   864: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox oxx
    //      case   865: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .ox oxx
    //      case   866: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .ox oxx
    //      case   867: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .ox oxx
    //      case   868: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .ox oxx
    //      case   869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .ox oxx
    //      case   870: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .ox oxx
    //      case   871: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .ox oxx
    //      case   872: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .ox oxx
    //      case   873: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .ox oxx
    //      case   874: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox oxx
    //      case   875: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .ox oxx
    //      case   876: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox oxx
    //      case   877: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox oxx
    //      case   878: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox oxx
    //      case   879: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .ox oxx
    //      case   880: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox oxx
    //      case   881: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .ox oxx
    //      case   882: Assert::IsTrue(v == PositionValue(+  451                         )); break;  // xx. .ox oxx
    //      case   883: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // ox. .ox oxx
    //      case   884: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // .x. .ox oxx
    //      case   885: Assert::IsTrue(v == PositionValue(+  118                         )); break;  // xo. .ox oxx
    //      case   886: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // oo. .ox oxx
    //      case   887: Assert::IsTrue(v == PositionValue(+   75                         )); break;  // .o. .ox oxx
    //      case   888: Assert::IsTrue(v == PositionValue(+  241                         )); break;  // x.. .ox oxx
    //      case   889: Assert::IsTrue(v == PositionValue(+   77                         )); break;  // o.. .ox oxx
    //      case   890: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // ... .ox oxx
    //      case   891: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x oxx
    //      case   892: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx x.x oxx
    //      case   893: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx x.x oxx
    //      case   894: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x oxx
    //      case   895: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox x.x oxx
    //      case   896: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox x.x oxx
    //      case   897: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x oxx
    //      case   898: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x x.x oxx
    //      case   899: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x x.x oxx
    //      case   900: Assert::IsTrue(v == PositionValue(+  804                         )); break;  // xxo x.x oxx
    //      case   901: Assert::IsTrue(v == PositionValue(+  562                         )); break;  // oxo x.x oxx
    //      case   902: Assert::IsTrue(v == PositionValue(+  605                         )); break;  // .xo x.x oxx
    //      case   903: Assert::IsTrue(v == PositionValue(+  402                         )); break;  // xoo x.x oxx
    //      case   904: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x oxx
    //      case   905: Assert::IsTrue(v == PositionValue(+  272                         )); break;  // .oo x.x oxx
    //      case   906: Assert::IsTrue(v == PositionValue(+  525                         )); break;  // x.o x.x oxx
    //      case   907: Assert::IsTrue(v == PositionValue(+  361                         )); break;  // o.o x.x oxx
    //      case   908: Assert::IsTrue(v == PositionValue(+  404                         )); break;  // ..o x.x oxx
    //      case   909: Assert::IsTrue(v == PositionValue(+  865                         )); break;  // xx. x.x oxx
    //      case   910: Assert::IsTrue(v == PositionValue(+  614                         )); break;  // ox. x.x oxx
    //      case   911: Assert::IsTrue(v == PositionValue(+  657                         )); break;  // .x. x.x oxx
    //      case   912: Assert::IsTrue(v == PositionValue(+  532                         )); break;  // xo. x.x oxx
    //      case   913: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // oo. x.x oxx
    //      case   914: Assert::IsTrue(v == PositionValue(+  411                         )); break;  // .o. x.x oxx
    //      case   915: Assert::IsTrue(v == PositionValue(+  577                         )); break;  // x.. x.x oxx
    //      case   916: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // o.. x.x oxx
    //      case   917: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // ... x.x oxx
    //      case   918: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x oxx
    //      case   919: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.x oxx
    //      case   920: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx o.x oxx
    //      case   921: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox o.x oxx
    //      case   922: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.x oxx
    //      case   923: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox o.x oxx
    //      case   924: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x o.x oxx
    //      case   925: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.x oxx
    //      case   926: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x o.x oxx
    //      case   927: Assert::IsTrue(v == PositionValue(+  402                         )); break;  // xxo o.x oxx
    //      case   928: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.x oxx
    //      case   929: Assert::IsTrue(v == PositionValue(+  272                         )); break;  // .xo o.x oxx
    //      case   930: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xoo o.x oxx
    //      case   931: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x oxx
    //      case   932: Assert::IsTrue(v == PositionValue(-   61                         )); break;  // .oo o.x oxx
    //      case   933: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // x.o o.x oxx
    //      case   934: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.x oxx
    //      case   935: Assert::IsTrue(v == PositionValue(+  149                         )); break;  // ..o o.x oxx
    //      case   936: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // xx. o.x oxx
    //      case   937: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.x oxx
    //      case   938: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // .x. o.x oxx
    //      case   939: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xo. o.x oxx
    //      case   940: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.x oxx
    //      case   941: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // .o. o.x oxx
    //      case   942: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // x.. o.x oxx
    //      case   943: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.x oxx
    //      case   944: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // ... o.x oxx
    //      case   945: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x oxx
    //      case   946: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ..x oxx
    //      case   947: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ..x oxx
    //      case   948: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ..x oxx
    //      case   949: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ..x oxx
    //      case   950: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ..x oxx
    //      case   951: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ..x oxx
    //      case   952: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ..x oxx
    //      case   953: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ..x oxx
    //      case   954: Assert::IsTrue(v == PositionValue(+  525                         )); break;  // xxo ..x oxx
    //      case   955: Assert::IsTrue(v == PositionValue(+  361                         )); break;  // oxo ..x oxx
    //      case   956: Assert::IsTrue(v == PositionValue(+  404                         )); break;  // .xo ..x oxx
    //      case   957: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xoo ..x oxx
    //      case   958: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x oxx
    //      case   959: Assert::IsTrue(v == PositionValue(+  149                         )); break;  // .oo ..x oxx
    //      case   960: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // x.o ..x oxx
    //      case   961: Assert::IsTrue(v == PositionValue(+  238                         )); break;  // o.o ..x oxx
    //      case   962: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // ..o ..x oxx
    //      case   963: Assert::IsTrue(v == PositionValue(+  586                         )); break;  // xx. ..x oxx
    //      case   964: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // ox. ..x oxx
    //      case   965: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // .x. ..x oxx
    //      case   966: Assert::IsTrue(v == PositionValue(+  331                         )); break;  // xo. ..x oxx
    //      case   967: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // oo. ..x oxx
    //      case   968: Assert::IsTrue(v == PositionValue(+  288                         )); break;  // .o. ..x oxx
    //      case   969: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // x.. ..x oxx
    //      case   970: Assert::IsTrue(v == PositionValue(+  290                         )); break;  // o.. ..x oxx
    //      case   971: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // ... ..x oxx
    //      case   972: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo oxx
    //      case   973: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo oxx
    //      case   974: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo oxx
    //      case   975: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo oxx
    //      case   976: Assert::IsTrue(v == PositionValue(+  360                         )); break;  // oox xxo oxx
    //      case   977: Assert::IsTrue(v == PositionValue(+  490                         )); break;  // .ox xxo oxx
    //      case   978: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo oxx
    //      case   979: Assert::IsTrue(v == PositionValue(+  570                         )); break;  // o.x xxo oxx
    //      case   980: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // ..x xxo oxx
    //      case   981: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo oxx
    //      case   982: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxo oxx
    //      case   983: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxo oxx
    //      case   984: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo oxx
    //      case   985: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo oxx
    //      case   986: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // .oo xxo oxx
    //      case   987: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo oxx
    //      case   988: Assert::IsTrue(v == PositionValue(+  328                         )); break;  // o.o xxo oxx
    //      case   989: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // ..o xxo oxx
    //      case   990: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo oxx
    //      case   991: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxo oxx
    //      case   992: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxo oxx
    //      case   993: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo oxx
    //      case   994: Assert::IsTrue(v == PositionValue(+  230                         )); break;  // oo. xxo oxx
    //      case   995: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // .o. xxo oxx
    //      case   996: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo oxx
    //      case   997: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // o.. xxo oxx
    //      case   998: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // ... xxo oxx
    //      case   999: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo oxx
    //      case  1000: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxo oxx
    //      case  1001: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo oxx
    //      case  1002: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo oxx
    //      case  1003: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxo oxx
    //      case  1004: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // .ox oxo oxx
    //      case  1005: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo oxx
    //      case  1006: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxo oxx
    //      case  1007: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // ..x oxo oxx
    //      case  1008: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo oxx
    //      case  1009: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo oxx
    //      case  1010: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxo oxx
    //      case  1011: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxo oxx
    //      case  1012: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo oxx
    //      case  1013: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .oo oxo oxx
    //      case  1014: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxo oxx
    //      case  1015: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo oxx
    //      case  1016: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // ..o oxo oxx
    //      case  1017: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo oxx
    //      case  1018: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxo oxx
    //      case  1019: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxo oxx
    //      case  1020: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxo oxx
    //      case  1021: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxo oxx
    //      case  1022: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // .o. oxo oxx
    //      case  1023: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxo oxx
    //      case  1024: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxo oxx
    //      case  1025: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // ... oxo oxx
    //      case  1026: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo oxx
    //      case  1027: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo oxx
    //      case  1028: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo oxx
    //      case  1029: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo oxx
    //      case  1030: Assert::IsTrue(v == PositionValue(+  159                         )); break;  // oox .xo oxx
    //      case  1031: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // .ox .xo oxx
    //      case  1032: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo oxx
    //      case  1033: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // o.x .xo oxx
    //      case  1034: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // ..x .xo oxx
    //      case  1035: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo oxx
    //      case  1036: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xo oxx
    //      case  1037: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xo oxx
    //      case  1038: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xo oxx
    //      case  1039: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo oxx
    //      case  1040: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .oo .xo oxx
    //      case  1041: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xo oxx
    //      case  1042: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // o.o .xo oxx
    //      case  1043: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // ..o .xo oxx
    //      case  1044: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo oxx
    //      case  1045: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xo oxx
    //      case  1046: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xo oxx
    //      case  1047: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xo oxx
    //      case  1048: Assert::IsTrue(v == PositionValue(+   29                         )); break;  // oo. .xo oxx
    //      case  1049: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .o. .xo oxx
    //      case  1050: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xo oxx
    //      case  1051: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // o.. .xo oxx
    //      case  1052: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // ... .xo oxx
    //      case  1053: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo oxx
    //      case  1054: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // oxx xoo oxx
    //      case  1055: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .xx xoo oxx
    //      case  1056: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xox xoo oxx
    //      case  1057: Assert::IsTrue(v == PositionValue(-  360                         )); break;  // oox xoo oxx
    //      case  1058: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // .ox xoo oxx
    //      case  1059: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // x.x xoo oxx
    //      case  1060: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.x xoo oxx
    //      case  1061: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ..x xoo oxx
    //      case  1062: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xoo oxx
    //      case  1063: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo oxx
    //      case  1064: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo oxx
    //      case  1065: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo oxx
    //      case  1066: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo oxx
    //      case  1067: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo oxx
    //      case  1068: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xoo oxx
    //      case  1069: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo oxx
    //      case  1070: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo oxx
    //      case  1071: Assert::IsTrue(v == PositionValue(+  319                         )); break;  // xx. xoo oxx
    //      case  1072: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ox. xoo oxx
    //      case  1073: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // .x. xoo oxx
    //      case  1074: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // xo. xoo oxx
    //      case  1075: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // oo. xoo oxx
    //      case  1076: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .o. xoo oxx
    //      case  1077: Assert::IsTrue(v == PositionValue(+  109                         )); break;  // x.. xoo oxx
    //      case  1078: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // o.. xoo oxx
    //      case  1079: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // ... xoo oxx
    //      case  1080: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo oxx
    //      case  1081: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo oxx
    //      case  1082: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo oxx
    //      case  1083: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo oxx
    //      case  1084: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo oxx
    //      case  1085: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo oxx
    //      case  1086: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo oxx
    //      case  1087: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo oxx
    //      case  1088: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo oxx
    //      case  1089: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo oxx
    //      case  1090: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo oxx
    //      case  1091: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo oxx
    //      case  1092: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo oxx
    //      case  1093: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo oxx
    //      case  1094: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo oxx
    //      case  1095: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo oxx
    //      case  1096: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo oxx
    //      case  1097: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo oxx
    //      case  1098: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo oxx
    //      case  1099: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo oxx
    //      case  1100: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo oxx
    //      case  1101: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo oxx
    //      case  1102: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo oxx
    //      case  1103: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo oxx
    //      case  1104: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo oxx
    //      case  1105: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo oxx
    //      case  1106: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo oxx
    //      case  1107: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo oxx
    //      case  1108: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // oxx .oo oxx
    //      case  1109: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .xx .oo oxx
    //      case  1110: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xox .oo oxx
    //      case  1111: Assert::IsTrue(v == PositionValue(-  492                         )); break;  // oox .oo oxx
    //      case  1112: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .ox .oo oxx
    //      case  1113: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // x.x .oo oxx
    //      case  1114: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.x .oo oxx
    //      case  1115: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // ..x .oo oxx
    //      case  1116: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo oxx
    //      case  1117: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo oxx
    //      case  1118: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo oxx
    //      case  1119: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo oxx
    //      case  1120: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo oxx
    //      case  1121: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo oxx
    //      case  1122: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo oxx
    //      case  1123: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo oxx
    //      case  1124: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo oxx
    //      case  1125: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // xx. .oo oxx
    //      case  1126: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // ox. .oo oxx
    //      case  1127: Assert::IsTrue(v == PositionValue(-   99                         )); break;  // .x. .oo oxx
    //      case  1128: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // xo. .oo oxx
    //      case  1129: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // oo. .oo oxx
    //      case  1130: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // .o. .oo oxx
    //      case  1131: Assert::IsTrue(v == PositionValue(-  101                         )); break;  // x.. .oo oxx
    //      case  1132: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // o.. .oo oxx
    //      case  1133: Assert::IsTrue(v == PositionValue(-  144                         )); break;  // ... .oo oxx
    //      case  1134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o oxx
    //      case  1135: Assert::IsTrue(v == PositionValue(+  402                         )); break;  // oxx x.o oxx
    //      case  1136: Assert::IsTrue(v == PositionValue(+  454                         )); break;  // .xx x.o oxx
    //      case  1137: Assert::IsTrue(v == PositionValue(+  242                         )); break;  // xox x.o oxx
    //      case  1138: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oox x.o oxx
    //      case  1139: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // .ox x.o oxx
    //      case  1140: Assert::IsTrue(v == PositionValue(+  365                         )); break;  // x.x x.o oxx
    //      case  1141: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // o.x x.o oxx
    //      case  1142: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // ..x x.o oxx
    //      case  1143: Assert::IsTrue(v == PositionValue(+  402                         )); break;  // xxo x.o oxx
    //      case  1144: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // oxo x.o oxx
    //      case  1145: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // .xo x.o oxx
    //      case  1146: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xoo x.o oxx
    //      case  1147: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o oxx
    //      case  1148: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .oo x.o oxx
    //      case  1149: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // x.o x.o oxx
    //      case  1150: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // o.o x.o oxx
    //      case  1151: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ..o x.o oxx
    //      case  1152: Assert::IsTrue(v == PositionValue(+  532                         )); break;  // xx. x.o oxx
    //      case  1153: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // ox. x.o oxx
    //      case  1154: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // .x. x.o oxx
    //      case  1155: Assert::IsTrue(v == PositionValue(+  199                         )); break;  // xo. x.o oxx
    //      case  1156: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // oo. x.o oxx
    //      case  1157: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // .o. x.o oxx
    //      case  1158: Assert::IsTrue(v == PositionValue(+  322                         )); break;  // x.. x.o oxx
    //      case  1159: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // o.. x.o oxx
    //      case  1160: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // ... x.o oxx
    //      case  1161: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o oxx
    //      case  1162: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.o oxx
    //      case  1163: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // .xx o.o oxx
    //      case  1164: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // xox o.o oxx
    //      case  1165: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.o oxx
    //      case  1166: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // .ox o.o oxx
    //      case  1167: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.x o.o oxx
    //      case  1168: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.o oxx
    //      case  1169: Assert::IsTrue(v == PositionValue(-   11                         )); break;  // ..x o.o oxx
    //      case  1170: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xxo o.o oxx
    //      case  1171: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o oxx
    //      case  1172: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .xo o.o oxx
    //      case  1173: Assert::IsTrue(v == PositionValue(-  402                         )); break;  // xoo o.o oxx
    //      case  1174: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o oxx
    //      case  1175: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // .oo o.o oxx
    //      case  1176: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // x.o o.o oxx
    //      case  1177: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o oxx
    //      case  1178: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // ..o o.o oxx
    //      case  1179: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xx. o.o oxx
    //      case  1180: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.o oxx
    //      case  1181: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // .x. o.o oxx
    //      case  1182: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // xo. o.o oxx
    //      case  1183: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.o oxx
    //      case  1184: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // .o. o.o oxx
    //      case  1185: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.. o.o oxx
    //      case  1186: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.o oxx
    //      case  1187: Assert::IsTrue(v == PositionValue(-   54                         )); break;  // ... o.o oxx
    //      case  1188: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o oxx
    //      case  1189: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oxx ..o oxx
    //      case  1190: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .xx ..o oxx
    //      case  1191: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xox ..o oxx
    //      case  1192: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // oox ..o oxx
    //      case  1193: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .ox ..o oxx
    //      case  1194: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // x.x ..o oxx
    //      case  1195: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // o.x ..o oxx
    //      case  1196: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // ..x ..o oxx
    //      case  1197: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xxo ..o oxx
    //      case  1198: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // oxo ..o oxx
    //      case  1199: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .xo ..o oxx
    //      case  1200: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xoo ..o oxx
    //      case  1201: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o oxx
    //      case  1202: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .oo ..o oxx
    //      case  1203: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o ..o oxx
    //      case  1204: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.o ..o oxx
    //      case  1205: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ..o ..o oxx
    //      case  1206: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xx. ..o oxx
    //      case  1207: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ox. ..o oxx
    //      case  1208: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .x. ..o oxx
    //      case  1209: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xo. ..o oxx
    //      case  1210: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // oo. ..o oxx
    //      case  1211: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .o. ..o oxx
    //      case  1212: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // x.. ..o oxx
    //      case  1213: Assert::IsTrue(v == PositionValue(+   35                         )); break;  // o.. ..o oxx
    //      case  1214: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // ... ..o oxx
    //      case  1215: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. oxx
    //      case  1216: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. oxx
    //      case  1217: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. oxx
    //      case  1218: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. oxx
    //      case  1219: Assert::IsTrue(v == PositionValue(+  492                         )); break;  // oox xx. oxx
    //      case  1220: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // .ox xx. oxx
    //      case  1221: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. oxx
    //      case  1222: Assert::IsTrue(v == PositionValue(+  624                         )); break;  // o.x xx. oxx
    //      case  1223: Assert::IsTrue(v == PositionValue(+  676                         )); break;  // ..x xx. oxx
    //      case  1224: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. oxx
    //      case  1225: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xx. oxx
    //      case  1226: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xx. oxx
    //      case  1227: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. oxx
    //      case  1228: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. oxx
    //      case  1229: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // .oo xx. oxx
    //      case  1230: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. oxx
    //      case  1231: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // o.o xx. oxx
    //      case  1232: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // ..o xx. oxx
    //      case  1233: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. oxx
    //      case  1234: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xx. oxx
    //      case  1235: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xx. oxx
    //      case  1236: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. oxx
    //      case  1237: Assert::IsTrue(v == PositionValue(+  362                         )); break;  // oo. xx. oxx
    //      case  1238: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .o. xx. oxx
    //      case  1239: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. oxx
    //      case  1240: Assert::IsTrue(v == PositionValue(+  503                         )); break;  // o.. xx. oxx
    //      case  1241: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // ... xx. oxx
    //      case  1242: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. oxx
    //      case  1243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ox. oxx
    //      case  1244: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. oxx
    //      case  1245: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. oxx
    //      case  1246: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ox. oxx
    //      case  1247: Assert::IsTrue(v == PositionValue(+  202                         )); break;  // .ox ox. oxx
    //      case  1248: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. oxx
    //      case  1249: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ox. oxx
    //      case  1250: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // ..x ox. oxx
    //      case  1251: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. oxx
    //      case  1252: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ox. oxx
    //      case  1253: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo ox. oxx
    //      case  1254: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo ox. oxx
    //      case  1255: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. oxx
    //      case  1256: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // .oo ox. oxx
    //      case  1257: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o ox. oxx
    //      case  1258: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ox. oxx
    //      case  1259: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // ..o ox. oxx
    //      case  1260: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. oxx
    //      case  1261: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ox. oxx
    //      case  1262: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. ox. oxx
    //      case  1263: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. ox. oxx
    //      case  1264: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ox. oxx
    //      case  1265: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .o. ox. oxx
    //      case  1266: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. ox. oxx
    //      case  1267: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ox. oxx
    //      case  1268: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ... ox. oxx
    //      case  1269: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. oxx
    //      case  1270: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. oxx
    //      case  1271: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. oxx
    //      case  1272: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. oxx
    //      case  1273: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // oox .x. oxx
    //      case  1274: Assert::IsTrue(v == PositionValue(+  412                         )); break;  // .ox .x. oxx
    //      case  1275: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. oxx
    //      case  1276: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // o.x .x. oxx
    //      case  1277: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // ..x .x. oxx
    //      case  1278: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. oxx
    //      case  1279: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .x. oxx
    //      case  1280: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .x. oxx
    //      case  1281: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .x. oxx
    //      case  1282: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. oxx
    //      case  1283: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // .oo .x. oxx
    //      case  1284: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .x. oxx
    //      case  1285: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // o.o .x. oxx
    //      case  1286: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // ..o .x. oxx
    //      case  1287: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. oxx
    //      case  1288: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .x. oxx
    //      case  1289: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .x. oxx
    //      case  1290: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .x. oxx
    //      case  1291: Assert::IsTrue(v == PositionValue(+  152                         )); break;  // oo. .x. oxx
    //      case  1292: Assert::IsTrue(v == PositionValue(+  291                         )); break;  // .o. .x. oxx
    //      case  1293: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .x. oxx
    //      case  1294: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // o.. .x. oxx
    //      case  1295: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // ... .x. oxx
    //      case  1296: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. oxx
    //      case  1297: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // oxx xo. oxx
    //      case  1298: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // .xx xo. oxx
    //      case  1299: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // xox xo. oxx
    //      case  1300: Assert::IsTrue(v == PositionValue(-  159                         )); break;  // oox xo. oxx
    //      case  1301: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .ox xo. oxx
    //      case  1302: Assert::IsTrue(v == PositionValue(+  284                         )); break;  // x.x xo. oxx
    //      case  1303: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // o.x xo. oxx
    //      case  1304: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ..x xo. oxx
    //      case  1305: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xo. oxx
    //      case  1306: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. oxx
    //      case  1307: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xo. oxx
    //      case  1308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xo. oxx
    //      case  1309: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. oxx
    //      case  1310: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. oxx
    //      case  1311: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xo. oxx
    //      case  1312: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. oxx
    //      case  1313: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xo. oxx
    //      case  1314: Assert::IsTrue(v == PositionValue(+  442                         )); break;  // xx. xo. oxx
    //      case  1315: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // ox. xo. oxx
    //      case  1316: Assert::IsTrue(v == PositionValue(+  234                         )); break;  // .x. xo. oxx
    //      case  1317: Assert::IsTrue(v == PositionValue(+  109                         )); break;  // xo. xo. oxx
    //      case  1318: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // oo. xo. oxx
    //      case  1319: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // .o. xo. oxx
    //      case  1320: Assert::IsTrue(v == PositionValue(+  232                         )); break;  // x.. xo. oxx
    //      case  1321: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // o.. xo. oxx
    //      case  1322: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // ... xo. oxx
    //      case  1323: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. oxx
    //      case  1324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. oxx
    //      case  1325: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // .xx oo. oxx
    //      case  1326: Assert::IsTrue(v == PositionValue(-  328                         )); break;  // xox oo. oxx
    //      case  1327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. oxx
    //      case  1328: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // .ox oo. oxx
    //      case  1329: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // x.x oo. oxx
    //      case  1330: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. oxx
    //      case  1331: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // ..x oo. oxx
    //      case  1332: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oo. oxx
    //      case  1333: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. oxx
    //      case  1334: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oo. oxx
    //      case  1335: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. oxx
    //      case  1336: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. oxx
    //      case  1337: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. oxx
    //      case  1338: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oo. oxx
    //      case  1339: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. oxx
    //      case  1340: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oo. oxx
    //      case  1341: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // xx. oo. oxx
    //      case  1342: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. oxx
    //      case  1343: Assert::IsTrue(v == PositionValue(-  186                         )); break;  // .x. oo. oxx
    //      case  1344: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // xo. oo. oxx
    //      case  1345: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. oxx
    //      case  1346: Assert::IsTrue(v == PositionValue(-  432                         )); break;  // .o. oo. oxx
    //      case  1347: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // x.. oo. oxx
    //      case  1348: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. oxx
    //      case  1349: Assert::IsTrue(v == PositionValue(-  231                         )); break;  // ... oo. oxx
    //      case  1350: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. oxx
    //      case  1351: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // oxx .o. oxx
    //      case  1352: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // .xx .o. oxx
    //      case  1353: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xox .o. oxx
    //      case  1354: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // oox .o. oxx
    //      case  1355: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // .ox .o. oxx
    //      case  1356: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // x.x .o. oxx
    //      case  1357: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.x .o. oxx
    //      case  1358: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ..x .o. oxx
    //      case  1359: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .o. oxx
    //      case  1360: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. oxx
    //      case  1361: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .o. oxx
    //      case  1362: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. oxx
    //      case  1363: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. oxx
    //      case  1364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. oxx
    //      case  1365: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .o. oxx
    //      case  1366: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. oxx
    //      case  1367: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .o. oxx
    //      case  1368: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // xx. .o. oxx
    //      case  1369: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ox. .o. oxx
    //      case  1370: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // .x. .o. oxx
    //      case  1371: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // xo. .o. oxx
    //      case  1372: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // oo. .o. oxx
    //      case  1373: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // .o. .o. oxx
    //      case  1374: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // x.. .o. oxx
    //      case  1375: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // o.. .o. oxx
    //      case  1376: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // ... .o. oxx
    //      case  1377: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. oxx
    //      case  1378: Assert::IsTrue(v == PositionValue(+  447                         )); break;  // oxx x.. oxx
    //      case  1379: Assert::IsTrue(v == PositionValue(+  499                         )); break;  // .xx x.. oxx
    //      case  1380: Assert::IsTrue(v == PositionValue(+  365                         )); break;  // xox x.. oxx
    //      case  1381: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oox x.. oxx
    //      case  1382: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // .ox x.. oxx
    //      case  1383: Assert::IsTrue(v == PositionValue(+  410                         )); break;  // x.x x.. oxx
    //      case  1384: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // o.x x.. oxx
    //      case  1385: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // ..x x.. oxx
    //      case  1386: Assert::IsTrue(v == PositionValue(+  525                         )); break;  // xxo x.. oxx
    //      case  1387: Assert::IsTrue(v == PositionValue(+  283                         )); break;  // oxo x.. oxx
    //      case  1388: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // .xo x.. oxx
    //      case  1389: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xoo x.. oxx
    //      case  1390: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. oxx
    //      case  1391: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // .oo x.. oxx
    //      case  1392: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // x.o x.. oxx
    //      case  1393: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // o.o x.. oxx
    //      case  1394: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // ..o x.. oxx
    //      case  1395: Assert::IsTrue(v == PositionValue(+  577                         )); break;  // xx. x.. oxx
    //      case  1396: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // ox. x.. oxx
    //      case  1397: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // .x. x.. oxx
    //      case  1398: Assert::IsTrue(v == PositionValue(+  322                         )); break;  // xo. x.. oxx
    //      case  1399: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // oo. x.. oxx
    //      case  1400: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // .o. x.. oxx
    //      case  1401: Assert::IsTrue(v == PositionValue(+  367                         )); break;  // x.. x.. oxx
    //      case  1402: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // o.. x.. oxx
    //      case  1403: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // ... x.. oxx
    //      case  1404: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. oxx
    //      case  1405: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.. oxx
    //      case  1406: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // .xx o.. oxx
    //      case  1407: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // xox o.. oxx
    //      case  1408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.. oxx
    //      case  1409: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // .ox o.. oxx
    //      case  1410: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.x o.. oxx
    //      case  1411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.. oxx
    //      case  1412: Assert::IsTrue(v == PositionValue(+   34                         )); break;  // ..x o.. oxx
    //      case  1413: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xxo o.. oxx
    //      case  1414: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.. oxx
    //      case  1415: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // .xo o.. oxx
    //      case  1416: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xoo o.. oxx
    //      case  1417: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. oxx
    //      case  1418: Assert::IsTrue(v == PositionValue(-  262                         )); break;  // .oo o.. oxx
    //      case  1419: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o o.. oxx
    //      case  1420: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.. oxx
    //      case  1421: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // ..o o.. oxx
    //      case  1422: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // xx. o.. oxx
    //      case  1423: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.. oxx
    //      case  1424: Assert::IsTrue(v == PositionValue(+   36                         )); break;  // .x. o.. oxx
    //      case  1425: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xo. o.. oxx
    //      case  1426: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.. oxx
    //      case  1427: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // .o. o.. oxx
    //      case  1428: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.. o.. oxx
    //      case  1429: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.. oxx
    //      case  1430: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // ... o.. oxx
    //      case  1431: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... oxx
    //      case  1432: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // oxx ... oxx
    //      case  1433: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // .xx ... oxx
    //      case  1434: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // xox ... oxx
    //      case  1435: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oox ... oxx
    //      case  1436: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // .ox ... oxx
    //      case  1437: Assert::IsTrue(v == PositionValue(+  209                         )); break;  // x.x ... oxx
    //      case  1438: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // o.x ... oxx
    //      case  1439: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // ..x ... oxx
    //      case  1440: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // xxo ... oxx
    //      case  1441: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // oxo ... oxx
    //      case  1442: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // .xo ... oxx
    //      case  1443: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xoo ... oxx
    //      case  1444: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... oxx
    //      case  1445: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // .oo ... oxx
    //      case  1446: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.o ... oxx
    //      case  1447: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // o.o ... oxx
    //      case  1448: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ..o ... oxx
    //      case  1449: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // xx. ... oxx
    //      case  1450: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ox. ... oxx
    //      case  1451: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .x. ... oxx
    //      case  1452: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xo. ... oxx
    //      case  1453: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // oo. ... oxx
    //      case  1454: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // .o. ... oxx
    //      case  1455: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // x.. ... oxx
    //      case  1456: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // o.. ... oxx
    //      case  1457: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ... ... oxx
    //      case  1458: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx .xx
    //      case  1459: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx .xx
    //      case  1460: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx .xx
    //      case  1461: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx .xx
    //      case  1462: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx .xx
    //      case  1463: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx .xx
    //      case  1464: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx .xx
    //      case  1465: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx .xx
    //      case  1466: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx .xx
    //      case  1467: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx .xx
    //      case  1468: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx .xx
    //      case  1469: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx .xx
    //      case  1470: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx .xx
    //      case  1471: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx .xx
    //      case  1472: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx .xx
    //      case  1473: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx .xx
    //      case  1474: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx .xx
    //      case  1475: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx .xx
    //      case  1476: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx .xx
    //      case  1477: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx .xx
    //      case  1478: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx .xx
    //      case  1479: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx .xx
    //      case  1480: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx .xx
    //      case  1481: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx .xx
    //      case  1482: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx .xx
    //      case  1483: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx .xx
    //      case  1484: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx .xx
    //      case  1485: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx .xx
    //      case  1486: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx .xx
    //      case  1487: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx .xx
    //      case  1488: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx .xx
    //      case  1489: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxx .xx
    //      case  1490: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx .xx
    //      case  1491: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx .xx
    //      case  1492: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxx .xx
    //      case  1493: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx .xx
    //      case  1494: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx .xx
    //      case  1495: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oxx .xx
    //      case  1496: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxx .xx
    //      case  1497: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxx .xx
    //      case  1498: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx .xx
    //      case  1499: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // .oo oxx .xx
    //      case  1500: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxx .xx
    //      case  1501: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // o.o oxx .xx
    //      case  1502: Assert::IsTrue(v == PositionValue(+  588                         )); break;  // ..o oxx .xx
    //      case  1503: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx .xx
    //      case  1504: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oxx .xx
    //      case  1505: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxx .xx
    //      case  1506: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxx .xx
    //      case  1507: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // oo. oxx .xx
    //      case  1508: Assert::IsTrue(v == PositionValue(+  508                         )); break;  // .o. oxx .xx
    //      case  1509: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxx .xx
    //      case  1510: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // o.. oxx .xx
    //      case  1511: Assert::IsTrue(v == PositionValue(+  640                         )); break;  // ... oxx .xx
    //      case  1512: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx .xx
    //      case  1513: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx .xx
    //      case  1514: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx .xx
    //      case  1515: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx .xx
    //      case  1516: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx .xx
    //      case  1517: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx .xx
    //      case  1518: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx .xx
    //      case  1519: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx .xx
    //      case  1520: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx .xx
    //      case  1521: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx .xx
    //      case  1522: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xx .xx
    //      case  1523: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xx .xx
    //      case  1524: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xx .xx
    //      case  1525: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx .xx
    //      case  1526: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .oo .xx .xx
    //      case  1527: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xx .xx
    //      case  1528: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // o.o .xx .xx
    //      case  1529: Assert::IsTrue(v == PositionValue(+  642                         )); break;  // ..o .xx .xx
    //      case  1530: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx .xx
    //      case  1531: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xx .xx
    //      case  1532: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xx .xx
    //      case  1533: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xx .xx
    //      case  1534: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // oo. .xx .xx
    //      case  1535: Assert::IsTrue(v == PositionValue(+  640                         )); break;  // .o. .xx .xx
    //      case  1536: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xx .xx
    //      case  1537: Assert::IsTrue(v == PositionValue(+  642                         )); break;  // o.. .xx .xx
    //      case  1538: Assert::IsTrue(v == PositionValue(+  694                         )); break;  // ... .xx .xx
    //      case  1539: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox .xx
    //      case  1540: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xox .xx
    //      case  1541: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xox .xx
    //      case  1542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox .xx
    //      case  1543: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xox .xx
    //      case  1544: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xox .xx
    //      case  1545: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox .xx
    //      case  1546: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xox .xx
    //      case  1547: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xox .xx
    //      case  1548: Assert::IsTrue(v == PositionValue(+  730                         )); break;  // xxo xox .xx
    //      case  1549: Assert::IsTrue(v == PositionValue(+  401                         )); break;  // oxo xox .xx
    //      case  1550: Assert::IsTrue(v == PositionValue(+  522                         )); break;  // .xo xox .xx
    //      case  1551: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xoo xox .xx
    //      case  1552: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox .xx
    //      case  1553: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // .oo xox .xx
    //      case  1554: Assert::IsTrue(v == PositionValue(+  451                         )); break;  // x.o xox .xx
    //      case  1555: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // o.o xox .xx
    //      case  1556: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // ..o xox .xx
    //      case  1557: Assert::IsTrue(v == PositionValue(+  878                         )); break;  // xx. xox .xx
    //      case  1558: Assert::IsTrue(v == PositionValue(+  540                         )); break;  // ox. xox .xx
    //      case  1559: Assert::IsTrue(v == PositionValue(+  661                         )); break;  // .x. xox .xx
    //      case  1560: Assert::IsTrue(v == PositionValue(+  467                         )); break;  // xo. xox .xx
    //      case  1561: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // oo. xox .xx
    //      case  1562: Assert::IsTrue(v == PositionValue(+  337                         )); break;  // .o. xox .xx
    //      case  1563: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // x.. xox .xx
    //      case  1564: Assert::IsTrue(v == PositionValue(+  339                         )); break;  // o.. xox .xx
    //      case  1565: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // ... xox .xx
    //      case  1566: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox .xx
    //      case  1567: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oox .xx
    //      case  1568: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oox .xx
    //      case  1569: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oox .xx
    //      case  1570: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oox .xx
    //      case  1571: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oox .xx
    //      case  1572: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oox .xx
    //      case  1573: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oox .xx
    //      case  1574: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oox .xx
    //      case  1575: Assert::IsTrue(v == PositionValue(+  319                         )); break;  // xxo oox .xx
    //      case  1576: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // oxo oox .xx
    //      case  1577: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // .xo oox .xx
    //      case  1578: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xoo oox .xx
    //      case  1579: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox .xx
    //      case  1580: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .oo oox .xx
    //      case  1581: Assert::IsTrue(v == PositionValue(+  118                         )); break;  // x.o oox .xx
    //      case  1582: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // o.o oox .xx
    //      case  1583: Assert::IsTrue(v == PositionValue(+   75                         )); break;  // ..o oox .xx
    //      case  1584: Assert::IsTrue(v == PositionValue(+  467                         )); break;  // xx. oox .xx
    //      case  1585: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // ox. oox .xx
    //      case  1586: Assert::IsTrue(v == PositionValue(+  337                         )); break;  // .x. oox .xx
    //      case  1587: Assert::IsTrue(v == PositionValue(+   56                         )); break;  // xo. oox .xx
    //      case  1588: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // oo. oox .xx
    //      case  1589: Assert::IsTrue(v == PositionValue(+   13                         )); break;  // .o. oox .xx
    //      case  1590: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // x.. oox .xx
    //      case  1591: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // o.. oox .xx
    //      case  1592: Assert::IsTrue(v == PositionValue(+  214                         )); break;  // ... oox .xx
    //      case  1593: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox .xx
    //      case  1594: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .ox .xx
    //      case  1595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .ox .xx
    //      case  1596: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .ox .xx
    //      case  1597: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .ox .xx
    //      case  1598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .ox .xx
    //      case  1599: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .ox .xx
    //      case  1600: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .ox .xx
    //      case  1601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .ox .xx
    //      case  1602: Assert::IsTrue(v == PositionValue(+  442                         )); break;  // xxo .ox .xx
    //      case  1603: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // oxo .ox .xx
    //      case  1604: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // .xo .ox .xx
    //      case  1605: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xoo .ox .xx
    //      case  1606: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox .xx
    //      case  1607: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // .oo .ox .xx
    //      case  1608: Assert::IsTrue(v == PositionValue(+  241                         )); break;  // x.o .ox .xx
    //      case  1609: Assert::IsTrue(v == PositionValue(+   77                         )); break;  // o.o .ox .xx
    //      case  1610: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // ..o .ox .xx
    //      case  1611: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // xx. .ox .xx
    //      case  1612: Assert::IsTrue(v == PositionValue(+  339                         )); break;  // ox. .ox .xx
    //      case  1613: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // .x. .ox .xx
    //      case  1614: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // xo. .ox .xx
    //      case  1615: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // oo. .ox .xx
    //      case  1616: Assert::IsTrue(v == PositionValue(+  214                         )); break;  // .o. .ox .xx
    //      case  1617: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // x.. .ox .xx
    //      case  1618: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // o.. .ox .xx
    //      case  1619: Assert::IsTrue(v == PositionValue(+  337                         )); break;  // ... .ox .xx
    //      case  1620: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x .xx
    //      case  1621: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx x.x .xx
    //      case  1622: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx x.x .xx
    //      case  1623: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x .xx
    //      case  1624: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox x.x .xx
    //      case  1625: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox x.x .xx
    //      case  1626: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x .xx
    //      case  1627: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x x.x .xx
    //      case  1628: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x x.x .xx
    //      case  1629: Assert::IsTrue(v == PositionValue(+  865                         )); break;  // xxo x.x .xx
    //      case  1630: Assert::IsTrue(v == PositionValue(+  614                         )); break;  // oxo x.x .xx
    //      case  1631: Assert::IsTrue(v == PositionValue(+  657                         )); break;  // .xo x.x .xx
    //      case  1632: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // xoo x.x .xx
    //      case  1633: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x .xx
    //      case  1634: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // .oo x.x .xx
    //      case  1635: Assert::IsTrue(v == PositionValue(+  586                         )); break;  // x.o x.x .xx
    //      case  1636: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // o.o x.x .xx
    //      case  1637: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // ..o x.x .xx
    //      case  1638: Assert::IsTrue(v == PositionValue(+  926                         )); break;  // xx. x.x .xx
    //      case  1639: Assert::IsTrue(v == PositionValue(+  666                         )); break;  // ox. x.x .xx
    //      case  1640: Assert::IsTrue(v == PositionValue(+  709                         )); break;  // .x. x.x .xx
    //      case  1641: Assert::IsTrue(v == PositionValue(+  593                         )); break;  // xo. x.x .xx
    //      case  1642: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // oo. x.x .xx
    //      case  1643: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // .o. x.x .xx
    //      case  1644: Assert::IsTrue(v == PositionValue(+  638                         )); break;  // x.. x.x .xx
    //      case  1645: Assert::IsTrue(v == PositionValue(+  465                         )); break;  // o.. x.x .xx
    //      case  1646: Assert::IsTrue(v == PositionValue(+  508                         )); break;  // ... x.x .xx
    //      case  1647: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x .xx
    //      case  1648: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx o.x .xx
    //      case  1649: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx o.x .xx
    //      case  1650: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox o.x .xx
    //      case  1651: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox o.x .xx
    //      case  1652: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox o.x .xx
    //      case  1653: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x o.x .xx
    //      case  1654: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x o.x .xx
    //      case  1655: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x o.x .xx
    //      case  1656: Assert::IsTrue(v == PositionValue(+  532                         )); break;  // xxo o.x .xx
    //      case  1657: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // oxo o.x .xx
    //      case  1658: Assert::IsTrue(v == PositionValue(+  411                         )); break;  // .xo o.x .xx
    //      case  1659: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xoo o.x .xx
    //      case  1660: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x .xx
    //      case  1661: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // .oo o.x .xx
    //      case  1662: Assert::IsTrue(v == PositionValue(+  331                         )); break;  // x.o o.x .xx
    //      case  1663: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // o.o o.x .xx
    //      case  1664: Assert::IsTrue(v == PositionValue(+  288                         )); break;  // ..o o.x .xx
    //      case  1665: Assert::IsTrue(v == PositionValue(+  593                         )); break;  // xx. o.x .xx
    //      case  1666: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // ox. o.x .xx
    //      case  1667: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // .x. o.x .xx
    //      case  1668: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // xo. o.x .xx
    //      case  1669: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oo. o.x .xx
    //      case  1670: Assert::IsTrue(v == PositionValue(+  217                         )); break;  // .o. o.x .xx
    //      case  1671: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // x.. o.x .xx
    //      case  1672: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // o.. o.x .xx
    //      case  1673: Assert::IsTrue(v == PositionValue(+  340                         )); break;  // ... o.x .xx
    //      case  1674: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x .xx
    //      case  1675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ..x .xx
    //      case  1676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ..x .xx
    //      case  1677: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ..x .xx
    //      case  1678: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ..x .xx
    //      case  1679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ..x .xx
    //      case  1680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ..x .xx
    //      case  1681: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ..x .xx
    //      case  1682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ..x .xx
    //      case  1683: Assert::IsTrue(v == PositionValue(+  577                         )); break;  // xxo ..x .xx
    //      case  1684: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // oxo ..x .xx
    //      case  1685: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // .xo ..x .xx
    //      case  1686: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xoo ..x .xx
    //      case  1687: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x .xx
    //      case  1688: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // .oo ..x .xx
    //      case  1689: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // x.o ..x .xx
    //      case  1690: Assert::IsTrue(v == PositionValue(+  290                         )); break;  // o.o ..x .xx
    //      case  1691: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // ..o ..x .xx
    //      case  1692: Assert::IsTrue(v == PositionValue(+  638                         )); break;  // xx. ..x .xx
    //      case  1693: Assert::IsTrue(v == PositionValue(+  465                         )); break;  // ox. ..x .xx
    //      case  1694: Assert::IsTrue(v == PositionValue(+  508                         )); break;  // .x. ..x .xx
    //      case  1695: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // xo. ..x .xx
    //      case  1696: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // oo. ..x .xx
    //      case  1697: Assert::IsTrue(v == PositionValue(+  340                         )); break;  // .o. ..x .xx
    //      case  1698: Assert::IsTrue(v == PositionValue(+  428                         )); break;  // x.. ..x .xx
    //      case  1699: Assert::IsTrue(v == PositionValue(+  342                         )); break;  // o.. ..x .xx
    //      case  1700: Assert::IsTrue(v == PositionValue(+  385                         )); break;  // ... ..x .xx
    //      case  1701: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo .xx
    //      case  1702: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo .xx
    //      case  1703: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo .xx
    //      case  1704: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo .xx
    //      case  1705: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // oox xxo .xx
    //      case  1706: Assert::IsTrue(v == PositionValue(+  551                         )); break;  // .ox xxo .xx
    //      case  1707: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo .xx
    //      case  1708: Assert::IsTrue(v == PositionValue(+  631                         )); break;  // o.x xxo .xx
    //      case  1709: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // ..x xxo .xx
    //      case  1710: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo .xx
    //      case  1711: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxo .xx
    //      case  1712: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxo .xx
    //      case  1713: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo .xx
    //      case  1714: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo .xx
    //      case  1715: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .oo xxo .xx
    //      case  1716: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo .xx
    //      case  1717: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // o.o xxo .xx
    //      case  1718: Assert::IsTrue(v == PositionValue(+  432                         )); break;  // ..o xxo .xx
    //      case  1719: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo .xx
    //      case  1720: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxo .xx
    //      case  1721: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxo .xx
    //      case  1722: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo .xx
    //      case  1723: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // oo. xxo .xx
    //      case  1724: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .o. xxo .xx
    //      case  1725: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo .xx
    //      case  1726: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // o.. xxo .xx
    //      case  1727: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // ... xxo .xx
    //      case  1728: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo .xx
    //      case  1729: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxo .xx
    //      case  1730: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo .xx
    //      case  1731: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo .xx
    //      case  1732: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // oox oxo .xx
    //      case  1733: Assert::IsTrue(v == PositionValue(+  227                         )); break;  // .ox oxo .xx
    //      case  1734: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo .xx
    //      case  1735: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // o.x oxo .xx
    //      case  1736: Assert::IsTrue(v == PositionValue(+  437                         )); break;  // ..x oxo .xx
    //      case  1737: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo .xx
    //      case  1738: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oxo .xx
    //      case  1739: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxo .xx
    //      case  1740: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxo .xx
    //      case  1741: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo .xx
    //      case  1742: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // .oo oxo .xx
    //      case  1743: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxo .xx
    //      case  1744: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // o.o oxo .xx
    //      case  1745: Assert::IsTrue(v == PositionValue(+  186                         )); break;  // ..o oxo .xx
    //      case  1746: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo .xx
    //      case  1747: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oxo .xx
    //      case  1748: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxo .xx
    //      case  1749: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxo .xx
    //      case  1750: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // oo. oxo .xx
    //      case  1751: Assert::IsTrue(v == PositionValue(+   97                         )); break;  // .o. oxo .xx
    //      case  1752: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxo .xx
    //      case  1753: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // o.. oxo .xx
    //      case  1754: Assert::IsTrue(v == PositionValue(+  307                         )); break;  // ... oxo .xx
    //      case  1755: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo .xx
    //      case  1756: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo .xx
    //      case  1757: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo .xx
    //      case  1758: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo .xx
    //      case  1759: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // oox .xo .xx
    //      case  1760: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // .ox .xo .xx
    //      case  1761: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo .xx
    //      case  1762: Assert::IsTrue(v == PositionValue(+  430                         )); break;  // o.x .xo .xx
    //      case  1763: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // ..x .xo .xx
    //      case  1764: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo .xx
    //      case  1765: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xo .xx
    //      case  1766: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xo .xx
    //      case  1767: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xo .xx
    //      case  1768: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo .xx
    //      case  1769: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // .oo .xo .xx
    //      case  1770: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xo .xx
    //      case  1771: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // o.o .xo .xx
    //      case  1772: Assert::IsTrue(v == PositionValue(+  231                         )); break;  // ..o .xo .xx
    //      case  1773: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo .xx
    //      case  1774: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xo .xx
    //      case  1775: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xo .xx
    //      case  1776: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xo .xx
    //      case  1777: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // oo. .xo .xx
    //      case  1778: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .o. .xo .xx
    //      case  1779: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xo .xx
    //      case  1780: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // o.. .xo .xx
    //      case  1781: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // ... .xo .xx
    //      case  1782: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo .xx
    //      case  1783: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // oxx xoo .xx
    //      case  1784: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // .xx xoo .xx
    //      case  1785: Assert::IsTrue(v == PositionValue(+   99                         )); break;  // xox xoo .xx
    //      case  1786: Assert::IsTrue(v == PositionValue(-  230                         )); break;  // oox xoo .xx
    //      case  1787: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // .ox xoo .xx
    //      case  1788: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // x.x xoo .xx
    //      case  1789: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // o.x xoo .xx
    //      case  1790: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // ..x xoo .xx
    //      case  1791: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xxo xoo .xx
    //      case  1792: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // oxo xoo .xx
    //      case  1793: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // .xo xoo .xx
    //      case  1794: Assert::IsTrue(v == PositionValue(-  230                         )); break;  // xoo xoo .xx
    //      case  1795: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo .xx
    //      case  1796: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // .oo xoo .xx
    //      case  1797: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // x.o xoo .xx
    //      case  1798: Assert::IsTrue(v == PositionValue(-  202                         )); break;  // o.o xoo .xx
    //      case  1799: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ..o xoo .xx
    //      case  1800: Assert::IsTrue(v == PositionValue(+  467                         )); break;  // xx. xoo .xx
    //      case  1801: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // ox. xoo .xx
    //      case  1802: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .x. xoo .xx
    //      case  1803: Assert::IsTrue(v == PositionValue(+   56                         )); break;  // xo. xoo .xx
    //      case  1804: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // oo. xoo .xx
    //      case  1805: Assert::IsTrue(v == PositionValue(-   74                         )); break;  // .o. xoo .xx
    //      case  1806: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // x.. xoo .xx
    //      case  1807: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // o.. xoo .xx
    //      case  1808: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // ... xoo .xx
    //      case  1809: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo .xx
    //      case  1810: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo .xx
    //      case  1811: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo .xx
    //      case  1812: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo .xx
    //      case  1813: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo .xx
    //      case  1814: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo .xx
    //      case  1815: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo .xx
    //      case  1816: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo .xx
    //      case  1817: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo .xx
    //      case  1818: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo .xx
    //      case  1819: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo .xx
    //      case  1820: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo .xx
    //      case  1821: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo .xx
    //      case  1822: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo .xx
    //      case  1823: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo .xx
    //      case  1824: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo .xx
    //      case  1825: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo .xx
    //      case  1826: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo .xx
    //      case  1827: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo .xx
    //      case  1828: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo .xx
    //      case  1829: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo .xx
    //      case  1830: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo .xx
    //      case  1831: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo .xx
    //      case  1832: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo .xx
    //      case  1833: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo .xx
    //      case  1834: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo .xx
    //      case  1835: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo .xx
    //      case  1836: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo .xx
    //      case  1837: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oxx .oo .xx
    //      case  1838: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .xx .oo .xx
    //      case  1839: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // xox .oo .xx
    //      case  1840: Assert::IsTrue(v == PositionValue(-  362                         )); break;  // oox .oo .xx
    //      case  1841: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .ox .oo .xx
    //      case  1842: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.x .oo .xx
    //      case  1843: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // o.x .oo .xx
    //      case  1844: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // ..x .oo .xx
    //      case  1845: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // xxo .oo .xx
    //      case  1846: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // oxo .oo .xx
    //      case  1847: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .xo .oo .xx
    //      case  1848: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // xoo .oo .xx
    //      case  1849: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo .xx
    //      case  1850: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .oo .oo .xx
    //      case  1851: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // x.o .oo .xx
    //      case  1852: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // o.o .oo .xx
    //      case  1853: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ..o .oo .xx
    //      case  1854: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xx. .oo .xx
    //      case  1855: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ox. .oo .xx
    //      case  1856: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .x. .oo .xx
    //      case  1857: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xo. .oo .xx
    //      case  1858: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // oo. .oo .xx
    //      case  1859: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // .o. .oo .xx
    //      case  1860: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // x.. .oo .xx
    //      case  1861: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // o.. .oo .xx
    //      case  1862: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // ... .oo .xx
    //      case  1863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o .xx
    //      case  1864: Assert::IsTrue(v == PositionValue(+  454                         )); break;  // oxx x.o .xx
    //      case  1865: Assert::IsTrue(v == PositionValue(+  506                         )); break;  // .xx x.o .xx
    //      case  1866: Assert::IsTrue(v == PositionValue(+  303                         )); break;  // xox x.o .xx
    //      case  1867: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // oox x.o .xx
    //      case  1868: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .ox x.o .xx
    //      case  1869: Assert::IsTrue(v == PositionValue(+  426                         )); break;  // x.x x.o .xx
    //      case  1870: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // o.x x.o .xx
    //      case  1871: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // ..x x.o .xx
    //      case  1872: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // xxo x.o .xx
    //      case  1873: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // oxo x.o .xx
    //      case  1874: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // .xo x.o .xx
    //      case  1875: Assert::IsTrue(v == PositionValue(+   61                         )); break;  // xoo x.o .xx
    //      case  1876: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o .xx
    //      case  1877: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // .oo x.o .xx
    //      case  1878: Assert::IsTrue(v == PositionValue(+  262                         )); break;  // x.o x.o .xx
    //      case  1879: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // o.o x.o .xx
    //      case  1880: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // ..o x.o .xx
    //      case  1881: Assert::IsTrue(v == PositionValue(+  593                         )); break;  // xx. x.o .xx
    //      case  1882: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // ox. x.o .xx
    //      case  1883: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // .x. x.o .xx
    //      case  1884: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // xo. x.o .xx
    //      case  1885: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oo. x.o .xx
    //      case  1886: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .o. x.o .xx
    //      case  1887: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // x.. x.o .xx
    //      case  1888: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // o.. x.o .xx
    //      case  1889: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // ... x.o .xx
    //      case  1890: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o .xx
    //      case  1891: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // oxx o.o .xx
    //      case  1892: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // .xx o.o .xx
    //      case  1893: Assert::IsTrue(v == PositionValue(-   30                         )); break;  // xox o.o .xx
    //      case  1894: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // oox o.o .xx
    //      case  1895: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // .ox o.o .xx
    //      case  1896: Assert::IsTrue(v == PositionValue(+  171                         )); break;  // x.x o.o .xx
    //      case  1897: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // o.x o.o .xx
    //      case  1898: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // ..x o.o .xx
    //      case  1899: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xxo o.o .xx
    //      case  1900: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oxo o.o .xx
    //      case  1901: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // .xo o.o .xx
    //      case  1902: Assert::IsTrue(v == PositionValue(-  272                         )); break;  // xoo o.o .xx
    //      case  1903: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o .xx
    //      case  1904: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // .oo o.o .xx
    //      case  1905: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // x.o o.o .xx
    //      case  1906: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // o.o o.o .xx
    //      case  1907: Assert::IsTrue(v == PositionValue(-   36                         )); break;  // ..o o.o .xx
    //      case  1908: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // xx. o.o .xx
    //      case  1909: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ox. o.o .xx
    //      case  1910: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .x. o.o .xx
    //      case  1911: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // xo. o.o .xx
    //      case  1912: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // oo. o.o .xx
    //      case  1913: Assert::IsTrue(v == PositionValue(-  116                         )); break;  // .o. o.o .xx
    //      case  1914: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // x.. o.o .xx
    //      case  1915: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // o.. o.o .xx
    //      case  1916: Assert::IsTrue(v == PositionValue(+   85                         )); break;  // ... o.o .xx
    //      case  1917: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o .xx
    //      case  1918: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // oxx ..o .xx
    //      case  1919: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // .xx ..o .xx
    //      case  1920: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // xox ..o .xx
    //      case  1921: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // oox ..o .xx
    //      case  1922: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // .ox ..o .xx
    //      case  1923: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // x.x ..o .xx
    //      case  1924: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // o.x ..o .xx
    //      case  1925: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // ..x ..o .xx
    //      case  1926: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // xxo ..o .xx
    //      case  1927: Assert::IsTrue(v == PositionValue(+   11                         )); break;  // oxo ..o .xx
    //      case  1928: Assert::IsTrue(v == PositionValue(+   54                         )); break;  // .xo ..o .xx
    //      case  1929: Assert::IsTrue(v == PositionValue(-  149                         )); break;  // xoo ..o .xx
    //      case  1930: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o .xx
    //      case  1931: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // .oo ..o .xx
    //      case  1932: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // x.o ..o .xx
    //      case  1933: Assert::IsTrue(v == PositionValue(-   34                         )); break;  // o.o ..o .xx
    //      case  1934: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // ..o ..o .xx
    //      case  1935: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // xx. ..o .xx
    //      case  1936: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // ox. ..o .xx
    //      case  1937: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .x. ..o .xx
    //      case  1938: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // xo. ..o .xx
    //      case  1939: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // oo. ..o .xx
    //      case  1940: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // .o. ..o .xx
    //      case  1941: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // x.. ..o .xx
    //      case  1942: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // o.. ..o .xx
    //      case  1943: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // ... ..o .xx
    //      case  1944: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. .xx
    //      case  1945: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. .xx
    //      case  1946: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. .xx
    //      case  1947: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. .xx
    //      case  1948: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // oox xx. .xx
    //      case  1949: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // .ox xx. .xx
    //      case  1950: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. .xx
    //      case  1951: Assert::IsTrue(v == PositionValue(+  685                         )); break;  // o.x xx. .xx
    //      case  1952: Assert::IsTrue(v == PositionValue(+  737                         )); break;  // ..x xx. .xx
    //      case  1953: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. .xx
    //      case  1954: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xx. .xx
    //      case  1955: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xx. .xx
    //      case  1956: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. .xx
    //      case  1957: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. .xx
    //      case  1958: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // .oo xx. .xx
    //      case  1959: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. .xx
    //      case  1960: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // o.o xx. .xx
    //      case  1961: Assert::IsTrue(v == PositionValue(+  564                         )); break;  // ..o xx. .xx
    //      case  1962: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. .xx
    //      case  1963: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xx. .xx
    //      case  1964: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xx. .xx
    //      case  1965: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. .xx
    //      case  1966: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // oo. xx. .xx
    //      case  1967: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // .o. xx. .xx
    //      case  1968: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. .xx
    //      case  1969: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // o.. xx. .xx
    //      case  1970: Assert::IsTrue(v == PositionValue(+  607                         )); break;  // ... xx. .xx
    //      case  1971: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. .xx
    //      case  1972: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ox. .xx
    //      case  1973: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. .xx
    //      case  1974: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. .xx
    //      case  1975: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // oox ox. .xx
    //      case  1976: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // .ox ox. .xx
    //      case  1977: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. .xx
    //      case  1978: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // o.x ox. .xx
    //      case  1979: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // ..x ox. .xx
    //      case  1980: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. .xx
    //      case  1981: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo ox. .xx
    //      case  1982: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo ox. .xx
    //      case  1983: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo ox. .xx
    //      case  1984: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. .xx
    //      case  1985: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .oo ox. .xx
    //      case  1986: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o ox. .xx
    //      case  1987: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // o.o ox. .xx
    //      case  1988: Assert::IsTrue(v == PositionValue(+  309                         )); break;  // ..o ox. .xx
    //      case  1989: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. .xx
    //      case  1990: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. ox. .xx
    //      case  1991: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. ox. .xx
    //      case  1992: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. ox. .xx
    //      case  1993: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // oo. ox. .xx
    //      case  1994: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .o. ox. .xx
    //      case  1995: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. ox. .xx
    //      case  1996: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // o.. ox. .xx
    //      case  1997: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // ... ox. .xx
    //      case  1998: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. .xx
    //      case  1999: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. .xx
    //      case  2000: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. .xx
    //      case  2001: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. .xx
    //      case  2002: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // oox .x. .xx
    //      case  2003: Assert::IsTrue(v == PositionValue(+  473                         )); break;  // .ox .x. .xx
    //      case  2004: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. .xx
    //      case  2005: Assert::IsTrue(v == PositionValue(+  475                         )); break;  // o.x .x. .xx
    //      case  2006: Assert::IsTrue(v == PositionValue(+  527                         )); break;  // ..x .x. .xx
    //      case  2007: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. .xx
    //      case  2008: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .x. .xx
    //      case  2009: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .x. .xx
    //      case  2010: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .x. .xx
    //      case  2011: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. .xx
    //      case  2012: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .oo .x. .xx
    //      case  2013: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .x. .xx
    //      case  2014: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // o.o .x. .xx
    //      case  2015: Assert::IsTrue(v == PositionValue(+  354                         )); break;  // ..o .x. .xx
    //      case  2016: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. .xx
    //      case  2017: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .x. .xx
    //      case  2018: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .x. .xx
    //      case  2019: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .x. .xx
    //      case  2020: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // oo. .x. .xx
    //      case  2021: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // .o. .x. .xx
    //      case  2022: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .x. .xx
    //      case  2023: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // o.. .x. .xx
    //      case  2024: Assert::IsTrue(v == PositionValue(+  397                         )); break;  // ... .x. .xx
    //      case  2025: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. .xx
    //      case  2026: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // oxx xo. .xx
    //      case  2027: Assert::IsTrue(v == PositionValue(+  503                         )); break;  // .xx xo. .xx
    //      case  2028: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // xox xo. .xx
    //      case  2029: Assert::IsTrue(v == PositionValue(-   29                         )); break;  // oox xo. .xx
    //      case  2030: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .ox xo. .xx
    //      case  2031: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // x.x xo. .xx
    //      case  2032: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // o.x xo. .xx
    //      case  2033: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // ..x xo. .xx
    //      case  2034: Assert::IsTrue(v == PositionValue(+  451                         )); break;  // xxo xo. .xx
    //      case  2035: Assert::IsTrue(v == PositionValue(+  122                         )); break;  // oxo xo. .xx
    //      case  2036: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // .xo xo. .xx
    //      case  2037: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // xoo xo. .xx
    //      case  2038: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. .xx
    //      case  2039: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .oo xo. .xx
    //      case  2040: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // x.o xo. .xx
    //      case  2041: Assert::IsTrue(v == PositionValue(-    1                         )); break;  // o.o xo. .xx
    //      case  2042: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // ..o xo. .xx
    //      case  2043: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // xx. xo. .xx
    //      case  2044: Assert::IsTrue(v == PositionValue(+  252                         )); break;  // ox. xo. .xx
    //      case  2045: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // .x. xo. .xx
    //      case  2046: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // xo. xo. .xx
    //      case  2047: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // oo. xo. .xx
    //      case  2048: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // .o. xo. .xx
    //      case  2049: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // x.. xo. .xx
    //      case  2050: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // o.. xo. .xx
    //      case  2051: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // ... xo. .xx
    //      case  2052: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. .xx
    //      case  2053: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // oxx oo. .xx
    //      case  2054: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .xx oo. .xx
    //      case  2055: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // xox oo. .xx
    //      case  2056: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // oox oo. .xx
    //      case  2057: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .ox oo. .xx
    //      case  2058: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.x oo. .xx
    //      case  2059: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.x oo. .xx
    //      case  2060: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // ..x oo. .xx
    //      case  2061: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // xxo oo. .xx
    //      case  2062: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // oxo oo. .xx
    //      case  2063: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .xo oo. .xx
    //      case  2064: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // xoo oo. .xx
    //      case  2065: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. .xx
    //      case  2066: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // .oo oo. .xx
    //      case  2067: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // x.o oo. .xx
    //      case  2068: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // o.o oo. .xx
    //      case  2069: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // ..o oo. .xx
    //      case  2070: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xx. oo. .xx
    //      case  2071: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ox. oo. .xx
    //      case  2072: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .x. oo. .xx
    //      case  2073: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xo. oo. .xx
    //      case  2074: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // oo. oo. .xx
    //      case  2075: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // .o. oo. .xx
    //      case  2076: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // x.. oo. .xx
    //      case  2077: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.. oo. .xx
    //      case  2078: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // ... oo. .xx
    //      case  2079: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. .xx
    //      case  2080: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // oxx .o. .xx
    //      case  2081: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // .xx .o. .xx
    //      case  2082: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // xox .o. .xx
    //      case  2083: Assert::IsTrue(v == PositionValue(-  152                         )); break;  // oox .o. .xx
    //      case  2084: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // .ox .o. .xx
    //      case  2085: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.x .o. .xx
    //      case  2086: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // o.x .o. .xx
    //      case  2087: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // ..x .o. .xx
    //      case  2088: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // xxo .o. .xx
    //      case  2089: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // oxo .o. .xx
    //      case  2090: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // .xo .o. .xx
    //      case  2091: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xoo .o. .xx
    //      case  2092: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. .xx
    //      case  2093: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .oo .o. .xx
    //      case  2094: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.o .o. .xx
    //      case  2095: Assert::IsTrue(v == PositionValue(-  124                         )); break;  // o.o .o. .xx
    //      case  2096: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // ..o .o. .xx
    //      case  2097: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // xx. .o. .xx
    //      case  2098: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // ox. .o. .xx
    //      case  2099: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // .x. .o. .xx
    //      case  2100: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // xo. .o. .xx
    //      case  2101: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // oo. .o. .xx
    //      case  2102: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // .o. .o. .xx
    //      case  2103: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.. .o. .xx
    //      case  2104: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // o.. .o. .xx
    //      case  2105: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // ... .o. .xx
    //      case  2106: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. .xx
    //      case  2107: Assert::IsTrue(v == PositionValue(+  499                         )); break;  // oxx x.. .xx
    //      case  2108: Assert::IsTrue(v == PositionValue(+  551                         )); break;  // .xx x.. .xx
    //      case  2109: Assert::IsTrue(v == PositionValue(+  426                         )); break;  // xox x.. .xx
    //      case  2110: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // oox x.. .xx
    //      case  2111: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // .ox x.. .xx
    //      case  2112: Assert::IsTrue(v == PositionValue(+  471                         )); break;  // x.x x.. .xx
    //      case  2113: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // o.x x.. .xx
    //      case  2114: Assert::IsTrue(v == PositionValue(+  341                         )); break;  // ..x x.. .xx
    //      case  2115: Assert::IsTrue(v == PositionValue(+  586                         )); break;  // xxo x.. .xx
    //      case  2116: Assert::IsTrue(v == PositionValue(+  335                         )); break;  // oxo x.. .xx
    //      case  2117: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // .xo x.. .xx
    //      case  2118: Assert::IsTrue(v == PositionValue(+  262                         )); break;  // xoo x.. .xx
    //      case  2119: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. .xx
    //      case  2120: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .oo x.. .xx
    //      case  2121: Assert::IsTrue(v == PositionValue(+  385                         )); break;  // x.o x.. .xx
    //      case  2122: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // o.o x.. .xx
    //      case  2123: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // ..o x.. .xx
    //      case  2124: Assert::IsTrue(v == PositionValue(+  638                         )); break;  // xx. x.. .xx
    //      case  2125: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // ox. x.. .xx
    //      case  2126: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .x. x.. .xx
    //      case  2127: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // xo. x.. .xx
    //      case  2128: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oo. x.. .xx
    //      case  2129: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .o. x.. .xx
    //      case  2130: Assert::IsTrue(v == PositionValue(+  428                         )); break;  // x.. x.. .xx
    //      case  2131: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // o.. x.. .xx
    //      case  2132: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // ... x.. .xx
    //      case  2133: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. .xx
    //      case  2134: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // oxx o.. .xx
    //      case  2135: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // .xx o.. .xx
    //      case  2136: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // xox o.. .xx
    //      case  2137: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // oox o.. .xx
    //      case  2138: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // .ox o.. .xx
    //      case  2139: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // x.x o.. .xx
    //      case  2140: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // o.x o.. .xx
    //      case  2141: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // ..x o.. .xx
    //      case  2142: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xxo o.. .xx
    //      case  2143: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // oxo o.. .xx
    //      case  2144: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // .xo o.. .xx
    //      case  2145: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // xoo o.. .xx
    //      case  2146: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. .xx
    //      case  2147: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .oo o.. .xx
    //      case  2148: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // x.o o.. .xx
    //      case  2149: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.o o.. .xx
    //      case  2150: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // ..o o.. .xx
    //      case  2151: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // xx. o.. .xx
    //      case  2152: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ox. o.. .xx
    //      case  2153: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .x. o.. .xx
    //      case  2154: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // xo. o.. .xx
    //      case  2155: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // oo. o.. .xx
    //      case  2156: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // .o. o.. .xx
    //      case  2157: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // x.. o.. .xx
    //      case  2158: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.. o.. .xx
    //      case  2159: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // ... o.. .xx
    //      case  2160: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... .xx
    //      case  2161: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // oxx ... .xx
    //      case  2162: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // .xx ... .xx
    //      case  2163: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // xox ... .xx
    //      case  2164: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // oox ... .xx
    //      case  2165: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .ox ... .xx
    //      case  2166: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // x.x ... .xx
    //      case  2167: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // o.x ... .xx
    //      case  2168: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // ..x ... .xx
    //      case  2169: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // xxo ... .xx
    //      case  2170: Assert::IsTrue(v == PositionValue(+  134                         )); break;  // oxo ... .xx
    //      case  2171: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // .xo ... .xx
    //      case  2172: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // xoo ... .xx
    //      case  2173: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... .xx
    //      case  2174: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .oo ... .xx
    //      case  2175: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // x.o ... .xx
    //      case  2176: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // o.o ... .xx
    //      case  2177: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // ..o ... .xx
    //      case  2178: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // xx. ... .xx
    //      case  2179: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // ox. ... .xx
    //      case  2180: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .x. ... .xx
    //      case  2181: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xo. ... .xx
    //      case  2182: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oo. ... .xx
    //      case  2183: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .o. ... .xx
    //      case  2184: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // x.. ... .xx
    //      case  2185: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // o.. ... .xx
    //      case  2186: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // ... ... .xx
    //      case  2187: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx xox
    //      case  2188: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx xox
    //      case  2189: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx xox
    //      case  2190: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx xox
    //      case  2191: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx xox
    //      case  2192: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx xox
    //      case  2193: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx xox
    //      case  2194: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx xox
    //      case  2195: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx xox
    //      case  2196: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx xox
    //      case  2197: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx xox
    //      case  2198: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx xox
    //      case  2199: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx xox
    //      case  2200: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx xox
    //      case  2201: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx xox
    //      case  2202: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx xox
    //      case  2203: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx xox
    //      case  2204: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx xox
    //      case  2205: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx xox
    //      case  2206: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx xox
    //      case  2207: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx xox
    //      case  2208: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx xox
    //      case  2209: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx xox
    //      case  2210: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx xox
    //      case  2211: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx xox
    //      case  2212: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx xox
    //      case  2213: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx xox
    //      case  2214: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx xox
    //      case  2215: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx xox
    //      case  2216: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx xox
    //      case  2217: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx xox
    //      case  2218: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxx xox
    //      case  2219: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx xox
    //      case  2220: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx xox
    //      case  2221: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxx xox
    //      case  2222: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx xox
    //      case  2223: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx xox
    //      case  2224: Assert::IsTrue(v == PositionValue(+  360                         )); break;  // oxo oxx xox
    //      case  2225: Assert::IsTrue(v == PositionValue(+  490                         )); break;  // .xo oxx xox
    //      case  2226: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxx xox
    //      case  2227: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx xox
    //      case  2228: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // .oo oxx xox
    //      case  2229: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxx xox
    //      case  2230: Assert::IsTrue(v == PositionValue(+  159                         )); break;  // o.o oxx xox
    //      case  2231: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // ..o oxx xox
    //      case  2232: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx xox
    //      case  2233: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // ox. oxx xox
    //      case  2234: Assert::IsTrue(v == PositionValue(+  551                         )); break;  // .x. oxx xox
    //      case  2235: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxx xox
    //      case  2236: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // oo. oxx xox
    //      case  2237: Assert::IsTrue(v == PositionValue(+  227                         )); break;  // .o. oxx xox
    //      case  2238: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxx xox
    //      case  2239: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // o.. oxx xox
    //      case  2240: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // ... oxx xox
    //      case  2241: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx xox
    //      case  2242: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx xox
    //      case  2243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx xox
    //      case  2244: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx xox
    //      case  2245: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx xox
    //      case  2246: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx xox
    //      case  2247: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx xox
    //      case  2248: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx xox
    //      case  2249: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx xox
    //      case  2250: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx xox
    //      case  2251: Assert::IsTrue(v == PositionValue(+  570                         )); break;  // oxo .xx xox
    //      case  2252: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // .xo .xx xox
    //      case  2253: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xx xox
    //      case  2254: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx xox
    //      case  2255: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // .oo .xx xox
    //      case  2256: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xx xox
    //      case  2257: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // o.o .xx xox
    //      case  2258: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // ..o .xx xox
    //      case  2259: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx xox
    //      case  2260: Assert::IsTrue(v == PositionValue(+  631                         )); break;  // ox. .xx xox
    //      case  2261: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // .x. .xx xox
    //      case  2262: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xx xox
    //      case  2263: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // oo. .xx xox
    //      case  2264: Assert::IsTrue(v == PositionValue(+  437                         )); break;  // .o. .xx xox
    //      case  2265: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xx xox
    //      case  2266: Assert::IsTrue(v == PositionValue(+  430                         )); break;  // o.. .xx xox
    //      case  2267: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // ... .xx xox
    //      case  2268: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox xox
    //      case  2269: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xox xox
    //      case  2270: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xox xox
    //      case  2271: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox xox
    //      case  2272: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox xox
    //      case  2273: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xox xox
    //      case  2274: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox xox
    //      case  2275: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xox xox
    //      case  2276: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xox xox
    //      case  2277: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xox xox
    //      case  2278: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // oxo xox xox
    //      case  2279: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .xo xox xox
    //      case  2280: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xox xox
    //      case  2281: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox xox
    //      case  2282: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox xox
    //      case  2283: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xox xox
    //      case  2284: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // o.o xox xox
    //      case  2285: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ..o xox xox
    //      case  2286: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xox xox
    //      case  2287: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // ox. xox xox
    //      case  2288: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // .x. xox xox
    //      case  2289: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xox xox
    //      case  2290: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox xox
    //      case  2291: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xox xox
    //      case  2292: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xox xox
    //      case  2293: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // o.. xox xox
    //      case  2294: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // ... xox xox
    //      case  2295: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox xox
    //      case  2296: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oox xox
    //      case  2297: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oox xox
    //      case  2298: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oox xox
    //      case  2299: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox xox
    //      case  2300: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oox xox
    //      case  2301: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oox xox
    //      case  2302: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oox xox
    //      case  2303: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oox xox
    //      case  2304: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xxo oox xox
    //      case  2305: Assert::IsTrue(v == PositionValue(-  360                         )); break;  // oxo oox xox
    //      case  2306: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // .xo oox xox
    //      case  2307: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox xox
    //      case  2308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox xox
    //      case  2309: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox xox
    //      case  2310: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // x.o oox xox
    //      case  2311: Assert::IsTrue(v == PositionValue(-  492                         )); break;  // o.o oox xox
    //      case  2312: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // ..o oox xox
    //      case  2313: Assert::IsTrue(v == PositionValue(+   99                         )); break;  // xx. oox xox
    //      case  2314: Assert::IsTrue(v == PositionValue(-  230                         )); break;  // ox. oox xox
    //      case  2315: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // .x. oox xox
    //      case  2316: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oox xox
    //      case  2317: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox xox
    //      case  2318: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oox xox
    //      case  2319: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // x.. oox xox
    //      case  2320: Assert::IsTrue(v == PositionValue(-  362                         )); break;  // o.. oox xox
    //      case  2321: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // ... oox xox
    //      case  2322: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox xox
    //      case  2323: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .ox xox
    //      case  2324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .ox xox
    //      case  2325: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .ox xox
    //      case  2326: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox xox
    //      case  2327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .ox xox
    //      case  2328: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .ox xox
    //      case  2329: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .ox xox
    //      case  2330: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .ox xox
    //      case  2331: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // xxo .ox xox
    //      case  2332: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // oxo .ox xox
    //      case  2333: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .xo .ox xox
    //      case  2334: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox xox
    //      case  2335: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox xox
    //      case  2336: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox xox
    //      case  2337: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // x.o .ox xox
    //      case  2338: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.o .ox xox
    //      case  2339: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // ..o .ox xox
    //      case  2340: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // xx. .ox xox
    //      case  2341: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // ox. .ox xox
    //      case  2342: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .x. .ox xox
    //      case  2343: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .ox xox
    //      case  2344: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox xox
    //      case  2345: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .ox xox
    //      case  2346: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.. .ox xox
    //      case  2347: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // o.. .ox xox
    //      case  2348: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // ... .ox xox
    //      case  2349: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x xox
    //      case  2350: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx x.x xox
    //      case  2351: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx x.x xox
    //      case  2352: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x xox
    //      case  2353: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox x.x xox
    //      case  2354: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox x.x xox
    //      case  2355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x xox
    //      case  2356: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x x.x xox
    //      case  2357: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x x.x xox
    //      case  2358: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.x xox
    //      case  2359: Assert::IsTrue(v == PositionValue(+  402                         )); break;  // oxo x.x xox
    //      case  2360: Assert::IsTrue(v == PositionValue(+  454                         )); break;  // .xo x.x xox
    //      case  2361: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.x xox
    //      case  2362: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x xox
    //      case  2363: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // .oo x.x xox
    //      case  2364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.x xox
    //      case  2365: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // o.o x.x xox
    //      case  2366: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // ..o x.x xox
    //      case  2367: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.x xox
    //      case  2368: Assert::IsTrue(v == PositionValue(+  454                         )); break;  // ox. x.x xox
    //      case  2369: Assert::IsTrue(v == PositionValue(+  506                         )); break;  // .x. x.x xox
    //      case  2370: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.x xox
    //      case  2371: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // oo. x.x xox
    //      case  2372: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // .o. x.x xox
    //      case  2373: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.x xox
    //      case  2374: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // o.. x.x xox
    //      case  2375: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // ... x.x xox
    //      case  2376: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x xox
    //      case  2377: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx o.x xox
    //      case  2378: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx o.x xox
    //      case  2379: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox o.x xox
    //      case  2380: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox o.x xox
    //      case  2381: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox o.x xox
    //      case  2382: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x o.x xox
    //      case  2383: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x o.x xox
    //      case  2384: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x o.x xox
    //      case  2385: Assert::IsTrue(v == PositionValue(+  242                         )); break;  // xxo o.x xox
    //      case  2386: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oxo o.x xox
    //      case  2387: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // .xo o.x xox
    //      case  2388: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // xoo o.x xox
    //      case  2389: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x xox
    //      case  2390: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // .oo o.x xox
    //      case  2391: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.o o.x xox
    //      case  2392: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.o o.x xox
    //      case  2393: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ..o o.x xox
    //      case  2394: Assert::IsTrue(v == PositionValue(+  303                         )); break;  // xx. o.x xox
    //      case  2395: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // ox. o.x xox
    //      case  2396: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .x. o.x xox
    //      case  2397: Assert::IsTrue(v == PositionValue(-   30                         )); break;  // xo. o.x xox
    //      case  2398: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // oo. o.x xox
    //      case  2399: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // .o. o.x xox
    //      case  2400: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // x.. o.x xox
    //      case  2401: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // o.. o.x xox
    //      case  2402: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // ... o.x xox
    //      case  2403: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x xox
    //      case  2404: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ..x xox
    //      case  2405: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ..x xox
    //      case  2406: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ..x xox
    //      case  2407: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ..x xox
    //      case  2408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ..x xox
    //      case  2409: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ..x xox
    //      case  2410: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ..x xox
    //      case  2411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ..x xox
    //      case  2412: Assert::IsTrue(v == PositionValue(+  365                         )); break;  // xxo ..x xox
    //      case  2413: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oxo ..x xox
    //      case  2414: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // .xo ..x xox
    //      case  2415: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xoo ..x xox
    //      case  2416: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x xox
    //      case  2417: Assert::IsTrue(v == PositionValue(-   11                         )); break;  // .oo ..x xox
    //      case  2418: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // x.o ..x xox
    //      case  2419: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // o.o ..x xox
    //      case  2420: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // ..o ..x xox
    //      case  2421: Assert::IsTrue(v == PositionValue(+  426                         )); break;  // xx. ..x xox
    //      case  2422: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // ox. ..x xox
    //      case  2423: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // .x. ..x xox
    //      case  2424: Assert::IsTrue(v == PositionValue(+  171                         )); break;  // xo. ..x xox
    //      case  2425: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // oo. ..x xox
    //      case  2426: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // .o. ..x xox
    //      case  2427: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // x.. ..x xox
    //      case  2428: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // o.. ..x xox
    //      case  2429: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // ... ..x xox
    //      case  2430: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo xox
    //      case  2431: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo xox
    //      case  2432: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo xox
    //      case  2433: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo xox
    //      case  2434: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxo xox
    //      case  2435: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxo xox
    //      case  2436: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo xox
    //      case  2437: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxo xox
    //      case  2438: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxo xox
    //      case  2439: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo xox
    //      case  2440: Assert::IsTrue(v == PositionValue(+  360                         )); break;  // oxo xxo xox
    //      case  2441: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .xo xxo xox
    //      case  2442: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo xox
    //      case  2443: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo xox
    //      case  2444: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .oo xxo xox
    //      case  2445: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo xox
    //      case  2446: Assert::IsTrue(v == PositionValue(+  159                         )); break;  // o.o xxo xox
    //      case  2447: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // ..o xxo xox
    //      case  2448: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo xox
    //      case  2449: Assert::IsTrue(v == PositionValue(+  490                         )); break;  // ox. xxo xox
    //      case  2450: Assert::IsTrue(v == PositionValue(+  551                         )); break;  // .x. xxo xox
    //      case  2451: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo xox
    //      case  2452: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // oo. xxo xox
    //      case  2453: Assert::IsTrue(v == PositionValue(+  227                         )); break;  // .o. xxo xox
    //      case  2454: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo xox
    //      case  2455: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // o.. xxo xox
    //      case  2456: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // ... xxo xox
    //      case  2457: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo xox
    //      case  2458: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxo xox
    //      case  2459: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo xox
    //      case  2460: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo xox
    //      case  2461: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxo xox
    //      case  2462: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxo xox
    //      case  2463: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo xox
    //      case  2464: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxo xox
    //      case  2465: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxo xox
    //      case  2466: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo xox
    //      case  2467: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // oxo oxo xox
    //      case  2468: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .xo oxo xox
    //      case  2469: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxo xox
    //      case  2470: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo xox
    //      case  2471: Assert::IsTrue(v == PositionValue(-  401                         )); break;  // .oo oxo xox
    //      case  2472: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxo xox
    //      case  2473: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // o.o oxo xox
    //      case  2474: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // ..o oxo xox
    //      case  2475: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo xox
    //      case  2476: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // ox. oxo xox
    //      case  2477: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // .x. oxo xox
    //      case  2478: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxo xox
    //      case  2479: Assert::IsTrue(v == PositionValue(-  401                         )); break;  // oo. oxo xox
    //      case  2480: Assert::IsTrue(v == PositionValue(-  184                         )); break;  // .o. oxo xox
    //      case  2481: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxo xox
    //      case  2482: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // o.. oxo xox
    //      case  2483: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // ... oxo xox
    //      case  2484: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo xox
    //      case  2485: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo xox
    //      case  2486: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo xox
    //      case  2487: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo xox
    //      case  2488: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xo xox
    //      case  2489: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xo xox
    //      case  2490: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo xox
    //      case  2491: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xo xox
    //      case  2492: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xo xox
    //      case  2493: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo xox
    //      case  2494: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // oxo .xo xox
    //      case  2495: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .xo .xo xox
    //      case  2496: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xo xox
    //      case  2497: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo xox
    //      case  2498: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // .oo .xo xox
    //      case  2499: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xo xox
    //      case  2500: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // o.o .xo xox
    //      case  2501: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // ..o .xo xox
    //      case  2502: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo xox
    //      case  2503: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // ox. .xo xox
    //      case  2504: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // .x. .xo xox
    //      case  2505: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xo xox
    //      case  2506: Assert::IsTrue(v == PositionValue(-  122                         )); break;  // oo. .xo xox
    //      case  2507: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // .o. .xo xox
    //      case  2508: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xo xox
    //      case  2509: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // o.. .xo xox
    //      case  2510: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // ... .xo xox
    //      case  2511: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo xox
    //      case  2512: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oxx xoo xox
    //      case  2513: Assert::IsTrue(v == PositionValue(+   99                         )); break;  // .xx xoo xox
    //      case  2514: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xoo xox
    //      case  2515: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo xox
    //      case  2516: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xoo xox
    //      case  2517: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xoo xox
    //      case  2518: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // o.x xoo xox
    //      case  2519: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // ..x xoo xox
    //      case  2520: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xoo xox
    //      case  2521: Assert::IsTrue(v == PositionValue(-  360                         )); break;  // oxo xoo xox
    //      case  2522: Assert::IsTrue(v == PositionValue(-  230                         )); break;  // .xo xoo xox
    //      case  2523: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xoo xox
    //      case  2524: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo xox
    //      case  2525: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo xox
    //      case  2526: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xoo xox
    //      case  2527: Assert::IsTrue(v == PositionValue(-  492                         )); break;  // o.o xoo xox
    //      case  2528: Assert::IsTrue(v == PositionValue(-  362                         )); break;  // ..o xoo xox
    //      case  2529: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xoo xox
    //      case  2530: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // ox. xoo xox
    //      case  2531: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // .x. xoo xox
    //      case  2532: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xoo xox
    //      case  2533: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo xox
    //      case  2534: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xoo xox
    //      case  2535: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xoo xox
    //      case  2536: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // o.. xoo xox
    //      case  2537: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // ... xoo xox
    //      case  2538: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo xox
    //      case  2539: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo xox
    //      case  2540: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo xox
    //      case  2541: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo xox
    //      case  2542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo xox
    //      case  2543: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo xox
    //      case  2544: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo xox
    //      case  2545: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo xox
    //      case  2546: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo xox
    //      case  2547: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo xox
    //      case  2548: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo xox
    //      case  2549: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo xox
    //      case  2550: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo xox
    //      case  2551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo xox
    //      case  2552: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo xox
    //      case  2553: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo xox
    //      case  2554: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo xox
    //      case  2555: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo xox
    //      case  2556: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo xox
    //      case  2557: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo xox
    //      case  2558: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo xox
    //      case  2559: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo xox
    //      case  2560: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo xox
    //      case  2561: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo xox
    //      case  2562: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo xox
    //      case  2563: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo xox
    //      case  2564: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo xox
    //      case  2565: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo xox
    //      case  2566: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oxx .oo xox
    //      case  2567: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // .xx .oo xox
    //      case  2568: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .oo xox
    //      case  2569: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo xox
    //      case  2570: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .oo xox
    //      case  2571: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // x.x .oo xox
    //      case  2572: Assert::IsTrue(v == PositionValue(-  382                         )); break;  // o.x .oo xox
    //      case  2573: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // ..x .oo xox
    //      case  2574: Assert::IsTrue(v == PositionValue(-  328                         )); break;  // xxo .oo xox
    //      case  2575: Assert::IsTrue(v == PositionValue(-  570                         )); break;  // oxo .oo xox
    //      case  2576: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // .xo .oo xox
    //      case  2577: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo xox
    //      case  2578: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo xox
    //      case  2579: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo xox
    //      case  2580: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // x.o .oo xox
    //      case  2581: Assert::IsTrue(v == PositionValue(-  624                         )); break;  // o.o .oo xox
    //      case  2582: Assert::IsTrue(v == PositionValue(-  503                         )); break;  // ..o .oo xox
    //      case  2583: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // xx. .oo xox
    //      case  2584: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // ox. .oo xox
    //      case  2585: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .x. .oo xox
    //      case  2586: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .oo xox
    //      case  2587: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo xox
    //      case  2588: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .oo xox
    //      case  2589: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // x.. .oo xox
    //      case  2590: Assert::IsTrue(v == PositionValue(-  425                         )); break;  // o.. .oo xox
    //      case  2591: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // ... .oo xox
    //      case  2592: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o xox
    //      case  2593: Assert::IsTrue(v == PositionValue(+  242                         )); break;  // oxx x.o xox
    //      case  2594: Assert::IsTrue(v == PositionValue(+  303                         )); break;  // .xx x.o xox
    //      case  2595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.o xox
    //      case  2596: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // oox x.o xox
    //      case  2597: Assert::IsTrue(v == PositionValue(-   30                         )); break;  // .ox x.o xox
    //      case  2598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.o xox
    //      case  2599: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // o.x x.o xox
    //      case  2600: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // ..x x.o xox
    //      case  2601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.o xox
    //      case  2602: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oxo x.o xox
    //      case  2603: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // .xo x.o xox
    //      case  2604: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.o xox
    //      case  2605: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o xox
    //      case  2606: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // .oo x.o xox
    //      case  2607: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.o xox
    //      case  2608: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.o x.o xox
    //      case  2609: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // ..o x.o xox
    //      case  2610: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.o xox
    //      case  2611: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // ox. x.o xox
    //      case  2612: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .x. x.o xox
    //      case  2613: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.o xox
    //      case  2614: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // oo. x.o xox
    //      case  2615: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // .o. x.o xox
    //      case  2616: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.o xox
    //      case  2617: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // o.. x.o xox
    //      case  2618: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // ... x.o xox
    //      case  2619: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o xox
    //      case  2620: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // oxx o.o xox
    //      case  2621: Assert::IsTrue(v == PositionValue(-   30                         )); break;  // .xx o.o xox
    //      case  2622: Assert::IsTrue(v == PositionValue(-  320                         )); break;  // xox o.o xox
    //      case  2623: Assert::IsTrue(v == PositionValue(-  562                         )); break;  // oox o.o xox
    //      case  2624: Assert::IsTrue(v == PositionValue(-  363                         )); break;  // .ox o.o xox
    //      case  2625: Assert::IsTrue(v == PositionValue(-  119                         )); break;  // x.x o.o xox
    //      case  2626: Assert::IsTrue(v == PositionValue(-  283                         )); break;  // o.x o.o xox
    //      case  2627: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // ..x o.o xox
    //      case  2628: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // xxo o.o xox
    //      case  2629: Assert::IsTrue(v == PositionValue(-  402                         )); break;  // oxo o.o xox
    //      case  2630: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // .xo o.o xox
    //      case  2631: Assert::IsTrue(v == PositionValue(-  562                         )); break;  // xoo o.o xox
    //      case  2632: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o xox
    //      case  2633: Assert::IsTrue(v == PositionValue(-  614                         )); break;  // .oo o.o xox
    //      case  2634: Assert::IsTrue(v == PositionValue(-  283                         )); break;  // x.o o.o xox
    //      case  2635: Assert::IsTrue(v == PositionValue(-  447                         )); break;  // o.o o.o xox
    //      case  2636: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // ..o o.o xox
    //      case  2637: Assert::IsTrue(v == PositionValue(-   30                         )); break;  // xx. o.o xox
    //      case  2638: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // ox. o.o xox
    //      case  2639: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // .x. o.o xox
    //      case  2640: Assert::IsTrue(v == PositionValue(-  363                         )); break;  // xo. o.o xox
    //      case  2641: Assert::IsTrue(v == PositionValue(-  614                         )); break;  // oo. o.o xox
    //      case  2642: Assert::IsTrue(v == PositionValue(-  406                         )); break;  // .o. o.o xox
    //      case  2643: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // x.. o.o xox
    //      case  2644: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // o.. o.o xox
    //      case  2645: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // ... o.o xox
    //      case  2646: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o xox
    //      case  2647: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // oxx ..o xox
    //      case  2648: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // .xx ..o xox
    //      case  2649: Assert::IsTrue(v == PositionValue(-  119                         )); break;  // xox ..o xox
    //      case  2650: Assert::IsTrue(v == PositionValue(-  283                         )); break;  // oox ..o xox
    //      case  2651: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // .ox ..o xox
    //      case  2652: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // x.x ..o xox
    //      case  2653: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // o.x ..o xox
    //      case  2654: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // ..x ..o xox
    //      case  2655: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // xxo ..o xox
    //      case  2656: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oxo ..o xox
    //      case  2657: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // .xo ..o xox
    //      case  2658: Assert::IsTrue(v == PositionValue(-  361                         )); break;  // xoo ..o xox
    //      case  2659: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o xox
    //      case  2660: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // .oo ..o xox
    //      case  2661: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // x.o ..o xox
    //      case  2662: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // o.o ..o xox
    //      case  2663: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // ..o ..o xox
    //      case  2664: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // xx. ..o xox
    //      case  2665: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // ox. ..o xox
    //      case  2666: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // .x. ..o xox
    //      case  2667: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // xo. ..o xox
    //      case  2668: Assert::IsTrue(v == PositionValue(-  335                         )); break;  // oo. ..o xox
    //      case  2669: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // .o. ..o xox
    //      case  2670: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // x.. ..o xox
    //      case  2671: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // o.. ..o xox
    //      case  2672: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // ... ..o xox
    //      case  2673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. xox
    //      case  2674: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. xox
    //      case  2675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. xox
    //      case  2676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. xox
    //      case  2677: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xx. xox
    //      case  2678: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xx. xox
    //      case  2679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. xox
    //      case  2680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xx. xox
    //      case  2681: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xx. xox
    //      case  2682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. xox
    //      case  2683: Assert::IsTrue(v == PositionValue(+  570                         )); break;  // oxo xx. xox
    //      case  2684: Assert::IsTrue(v == PositionValue(+  631                         )); break;  // .xo xx. xox
    //      case  2685: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. xox
    //      case  2686: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. xox
    //      case  2687: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // .oo xx. xox
    //      case  2688: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. xox
    //      case  2689: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // o.o xx. xox
    //      case  2690: Assert::IsTrue(v == PositionValue(+  430                         )); break;  // ..o xx. xox
    //      case  2691: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. xox
    //      case  2692: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // ox. xx. xox
    //      case  2693: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // .x. xx. xox
    //      case  2694: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. xox
    //      case  2695: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // oo. xx. xox
    //      case  2696: Assert::IsTrue(v == PositionValue(+  437                         )); break;  // .o. xx. xox
    //      case  2697: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. xox
    //      case  2698: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // o.. xx. xox
    //      case  2699: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // ... xx. xox
    //      case  2700: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. xox
    //      case  2701: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ox. xox
    //      case  2702: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. xox
    //      case  2703: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. xox
    //      case  2704: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ox. xox
    //      case  2705: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ox. xox
    //      case  2706: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. xox
    //      case  2707: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ox. xox
    //      case  2708: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ox. xox
    //      case  2709: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. xox
    //      case  2710: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // oxo ox. xox
    //      case  2711: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // .xo ox. xox
    //      case  2712: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo ox. xox
    //      case  2713: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. xox
    //      case  2714: Assert::IsTrue(v == PositionValue(-  122                         )); break;  // .oo ox. xox
    //      case  2715: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o ox. xox
    //      case  2716: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // o.o ox. xox
    //      case  2717: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // ..o ox. xox
    //      case  2718: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. xox
    //      case  2719: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ox. ox. xox
    //      case  2720: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // .x. ox. xox
    //      case  2721: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. ox. xox
    //      case  2722: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // oo. ox. xox
    //      case  2723: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // .o. ox. xox
    //      case  2724: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. ox. xox
    //      case  2725: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // o.. ox. xox
    //      case  2726: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // ... ox. xox
    //      case  2727: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. xox
    //      case  2728: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. xox
    //      case  2729: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. xox
    //      case  2730: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. xox
    //      case  2731: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .x. xox
    //      case  2732: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .x. xox
    //      case  2733: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. xox
    //      case  2734: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .x. xox
    //      case  2735: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .x. xox
    //      case  2736: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. xox
    //      case  2737: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // oxo .x. xox
    //      case  2738: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // .xo .x. xox
    //      case  2739: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .x. xox
    //      case  2740: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. xox
    //      case  2741: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // .oo .x. xox
    //      case  2742: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .x. xox
    //      case  2743: Assert::IsTrue(v == PositionValue(+  159                         )); break;  // o.o .x. xox
    //      case  2744: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // ..o .x. xox
    //      case  2745: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. xox
    //      case  2746: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // ox. .x. xox
    //      case  2747: Assert::IsTrue(v == PositionValue(+  386                         )); break;  // .x. .x. xox
    //      case  2748: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .x. xox
    //      case  2749: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // oo. .x. xox
    //      case  2750: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // .o. .x. xox
    //      case  2751: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .x. xox
    //      case  2752: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // o.. .x. xox
    //      case  2753: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // ... .x. xox
    //      case  2754: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. xox
    //      case  2755: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // oxx xo. xox
    //      case  2756: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // .xx xo. xox
    //      case  2757: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xo. xox
    //      case  2758: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. xox
    //      case  2759: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xo. xox
    //      case  2760: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xo. xox
    //      case  2761: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // o.x xo. xox
    //      case  2762: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // ..x xo. xox
    //      case  2763: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xo. xox
    //      case  2764: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // oxo xo. xox
    //      case  2765: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // .xo xo. xox
    //      case  2766: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xo. xox
    //      case  2767: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. xox
    //      case  2768: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. xox
    //      case  2769: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xo. xox
    //      case  2770: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.o xo. xox
    //      case  2771: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // ..o xo. xox
    //      case  2772: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xo. xox
    //      case  2773: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ox. xo. xox
    //      case  2774: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .x. xo. xox
    //      case  2775: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xo. xox
    //      case  2776: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. xox
    //      case  2777: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xo. xox
    //      case  2778: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xo. xox
    //      case  2779: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // o.. xo. xox
    //      case  2780: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // ... xo. xox
    //      case  2781: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. xox
    //      case  2782: Assert::IsTrue(v == PositionValue(-  328                         )); break;  // oxx oo. xox
    //      case  2783: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // .xx oo. xox
    //      case  2784: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oo. xox
    //      case  2785: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. xox
    //      case  2786: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oo. xox
    //      case  2787: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // x.x oo. xox
    //      case  2788: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // o.x oo. xox
    //      case  2789: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // ..x oo. xox
    //      case  2790: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xxo oo. xox
    //      case  2791: Assert::IsTrue(v == PositionValue(-  570                         )); break;  // oxo oo. xox
    //      case  2792: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // .xo oo. xox
    //      case  2793: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. xox
    //      case  2794: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. xox
    //      case  2795: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. xox
    //      case  2796: Assert::IsTrue(v == PositionValue(-  382                         )); break;  // x.o oo. xox
    //      case  2797: Assert::IsTrue(v == PositionValue(-  624                         )); break;  // o.o oo. xox
    //      case  2798: Assert::IsTrue(v == PositionValue(-  425                         )); break;  // ..o oo. xox
    //      case  2799: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // xx. oo. xox
    //      case  2800: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // ox. oo. xox
    //      case  2801: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .x. oo. xox
    //      case  2802: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oo. xox
    //      case  2803: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. xox
    //      case  2804: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oo. xox
    //      case  2805: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // x.. oo. xox
    //      case  2806: Assert::IsTrue(v == PositionValue(-  503                         )); break;  // o.. oo. xox
    //      case  2807: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // ... oo. xox
    //      case  2808: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. xox
    //      case  2809: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oxx .o. xox
    //      case  2810: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .xx .o. xox
    //      case  2811: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .o. xox
    //      case  2812: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. xox
    //      case  2813: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .o. xox
    //      case  2814: Assert::IsTrue(v == PositionValue(-    8                         )); break;  // x.x .o. xox
    //      case  2815: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // o.x .o. xox
    //      case  2816: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // ..x .o. xox
    //      case  2817: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xxo .o. xox
    //      case  2818: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // oxo .o. xox
    //      case  2819: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // .xo .o. xox
    //      case  2820: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. xox
    //      case  2821: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. xox
    //      case  2822: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. xox
    //      case  2823: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // x.o .o. xox
    //      case  2824: Assert::IsTrue(v == PositionValue(-  336                         )); break;  // o.o .o. xox
    //      case  2825: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // ..o .o. xox
    //      case  2826: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // xx. .o. xox
    //      case  2827: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // ox. .o. xox
    //      case  2828: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .x. .o. xox
    //      case  2829: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .o. xox
    //      case  2830: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. xox
    //      case  2831: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .o. xox
    //      case  2832: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // x.. .o. xox
    //      case  2833: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // o.. .o. xox
    //      case  2834: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // ... .o. xox
    //      case  2835: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. xox
    //      case  2836: Assert::IsTrue(v == PositionValue(+  365                         )); break;  // oxx x.. xox
    //      case  2837: Assert::IsTrue(v == PositionValue(+  426                         )); break;  // .xx x.. xox
    //      case  2838: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.. xox
    //      case  2839: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // oox x.. xox
    //      case  2840: Assert::IsTrue(v == PositionValue(+  171                         )); break;  // .ox x.. xox
    //      case  2841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.. xox
    //      case  2842: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // o.x x.. xox
    //      case  2843: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // ..x x.. xox
    //      case  2844: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.. xox
    //      case  2845: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oxo x.. xox
    //      case  2846: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .xo x.. xox
    //      case  2847: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.. xox
    //      case  2848: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. xox
    //      case  2849: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .oo x.. xox
    //      case  2850: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.. xox
    //      case  2851: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // o.o x.. xox
    //      case  2852: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // ..o x.. xox
    //      case  2853: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.. xox
    //      case  2854: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // ox. x.. xox
    //      case  2855: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // .x. x.. xox
    //      case  2856: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.. xox
    //      case  2857: Assert::IsTrue(v == PositionValue(-   11                         )); break;  // oo. x.. xox
    //      case  2858: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // .o. x.. xox
    //      case  2859: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.. xox
    //      case  2860: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // o.. x.. xox
    //      case  2861: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // ... x.. xox
    //      case  2862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. xox
    //      case  2863: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // oxx o.. xox
    //      case  2864: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // .xx o.. xox
    //      case  2865: Assert::IsTrue(v == PositionValue(-  119                         )); break;  // xox o.. xox
    //      case  2866: Assert::IsTrue(v == PositionValue(-  361                         )); break;  // oox o.. xox
    //      case  2867: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // .ox o.. xox
    //      case  2868: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // x.x o.. xox
    //      case  2869: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // o.x o.. xox
    //      case  2870: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // ..x o.. xox
    //      case  2871: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xxo o.. xox
    //      case  2872: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oxo o.. xox
    //      case  2873: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .xo o.. xox
    //      case  2874: Assert::IsTrue(v == PositionValue(-  283                         )); break;  // xoo o.. xox
    //      case  2875: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. xox
    //      case  2876: Assert::IsTrue(v == PositionValue(-  335                         )); break;  // .oo o.. xox
    //      case  2877: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // x.o o.. xox
    //      case  2878: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // o.o o.. xox
    //      case  2879: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // ..o o.. xox
    //      case  2880: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // xx. o.. xox
    //      case  2881: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // ox. o.. xox
    //      case  2882: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // .x. o.. xox
    //      case  2883: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // xo. o.. xox
    //      case  2884: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // oo. o.. xox
    //      case  2885: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // .o. o.. xox
    //      case  2886: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // x.. o.. xox
    //      case  2887: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // o.. o.. xox
    //      case  2888: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // ... o.. xox
    //      case  2889: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... xox
    //      case  2890: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // oxx ... xox
    //      case  2891: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // .xx ... xox
    //      case  2892: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // xox ... xox
    //      case  2893: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // oox ... xox
    //      case  2894: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // .ox ... xox
    //      case  2895: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // x.x ... xox
    //      case  2896: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // o.x ... xox
    //      case  2897: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // ..x ... xox
    //      case  2898: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // xxo ... xox
    //      case  2899: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oxo ... xox
    //      case  2900: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .xo ... xox
    //      case  2901: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // xoo ... xox
    //      case  2902: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... xox
    //      case  2903: Assert::IsTrue(v == PositionValue(-  134                         )); break;  // .oo ... xox
    //      case  2904: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.o ... xox
    //      case  2905: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // o.o ... xox
    //      case  2906: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ..o ... xox
    //      case  2907: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // xx. ... xox
    //      case  2908: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ox. ... xox
    //      case  2909: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // .x. ... xox
    //      case  2910: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // xo. ... xox
    //      case  2911: Assert::IsTrue(v == PositionValue(-  134                         )); break;  // oo. ... xox
    //      case  2912: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // .o. ... xox
    //      case  2913: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // x.. ... xox
    //      case  2914: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // o.. ... xox
    //      case  2915: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // ... ... xox
    //      case  2916: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx oox
    //      case  2917: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx oox
    //      case  2918: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx oox
    //      case  2919: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx oox
    //      case  2920: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx oox
    //      case  2921: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx oox
    //      case  2922: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx oox
    //      case  2923: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx oox
    //      case  2924: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx oox
    //      case  2925: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx oox
    //      case  2926: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx oox
    //      case  2927: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx oox
    //      case  2928: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx oox
    //      case  2929: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx oox
    //      case  2930: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx oox
    //      case  2931: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx oox
    //      case  2932: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx oox
    //      case  2933: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx oox
    //      case  2934: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx oox
    //      case  2935: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx oox
    //      case  2936: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx oox
    //      case  2937: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx oox
    //      case  2938: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx oox
    //      case  2939: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx oox
    //      case  2940: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx oox
    //      case  2941: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx oox
    //      case  2942: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx oox
    //      case  2943: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx oox
    //      case  2944: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxx oox
    //      case  2945: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx oox
    //      case  2946: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx oox
    //      case  2947: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxx oox
    //      case  2948: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx oox
    //      case  2949: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx oox
    //      case  2950: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxx oox
    //      case  2951: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx oox
    //      case  2952: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx oox
    //      case  2953: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxx oox
    //      case  2954: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // .xo oxx oox
    //      case  2955: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxx oox
    //      case  2956: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx oox
    //      case  2957: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .oo oxx oox
    //      case  2958: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxx oox
    //      case  2959: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxx oox
    //      case  2960: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ..o oxx oox
    //      case  2961: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx oox
    //      case  2962: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxx oox
    //      case  2963: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .x. oxx oox
    //      case  2964: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxx oox
    //      case  2965: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxx oox
    //      case  2966: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // .o. oxx oox
    //      case  2967: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxx oox
    //      case  2968: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxx oox
    //      case  2969: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // ... oxx oox
    //      case  2970: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx oox
    //      case  2971: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx oox
    //      case  2972: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx oox
    //      case  2973: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx oox
    //      case  2974: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx oox
    //      case  2975: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx oox
    //      case  2976: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx oox
    //      case  2977: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx oox
    //      case  2978: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx oox
    //      case  2979: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx oox
    //      case  2980: Assert::IsTrue(v == PositionValue(+  328                         )); break;  // oxo .xx oox
    //      case  2981: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // .xo .xx oox
    //      case  2982: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xx oox
    //      case  2983: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx oox
    //      case  2984: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // .oo .xx oox
    //      case  2985: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xx oox
    //      case  2986: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // o.o .xx oox
    //      case  2987: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // ..o .xx oox
    //      case  2988: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx oox
    //      case  2989: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // ox. .xx oox
    //      case  2990: Assert::IsTrue(v == PositionValue(+  432                         )); break;  // .x. .xx oox
    //      case  2991: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xx oox
    //      case  2992: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // oo. .xx oox
    //      case  2993: Assert::IsTrue(v == PositionValue(+  186                         )); break;  // .o. .xx oox
    //      case  2994: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xx oox
    //      case  2995: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // o.. .xx oox
    //      case  2996: Assert::IsTrue(v == PositionValue(+  231                         )); break;  // ... .xx oox
    //      case  2997: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox oox
    //      case  2998: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xox oox
    //      case  2999: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xox oox
    //      case  3000: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xox oox
    //      case  3001: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox oox
    //      case  3002: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xox oox
    //      case  3003: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox oox
    //      case  3004: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xox oox
    //      case  3005: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xox oox
    //      case  3006: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xox oox
    //      case  3007: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox oox
    //      case  3008: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xox oox
    //      case  3009: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xox oox
    //      case  3010: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox oox
    //      case  3011: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox oox
    //      case  3012: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xox oox
    //      case  3013: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox oox
    //      case  3014: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xox oox
    //      case  3015: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xx. xox oox
    //      case  3016: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // ox. xox oox
    //      case  3017: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // .x. xox oox
    //      case  3018: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xox oox
    //      case  3019: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox oox
    //      case  3020: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xox oox
    //      case  3021: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // x.. xox oox
    //      case  3022: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // o.. xox oox
    //      case  3023: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ... xox oox
    //      case  3024: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox oox
    //      case  3025: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox oox
    //      case  3026: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oox oox
    //      case  3027: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oox oox
    //      case  3028: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox oox
    //      case  3029: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oox oox
    //      case  3030: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oox oox
    //      case  3031: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox oox
    //      case  3032: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oox oox
    //      case  3033: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oox oox
    //      case  3034: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox oox
    //      case  3035: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oox oox
    //      case  3036: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox oox
    //      case  3037: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox oox
    //      case  3038: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox oox
    //      case  3039: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oox oox
    //      case  3040: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox oox
    //      case  3041: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oox oox
    //      case  3042: Assert::IsTrue(v == PositionValue(-  230                         )); break;  // xx. oox oox
    //      case  3043: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox oox
    //      case  3044: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // .x. oox oox
    //      case  3045: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oox oox
    //      case  3046: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox oox
    //      case  3047: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oox oox
    //      case  3048: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // x.. oox oox
    //      case  3049: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox oox
    //      case  3050: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // ... oox oox
    //      case  3051: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox oox
    //      case  3052: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .ox oox
    //      case  3053: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .ox oox
    //      case  3054: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .ox oox
    //      case  3055: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox oox
    //      case  3056: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .ox oox
    //      case  3057: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .ox oox
    //      case  3058: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .ox oox
    //      case  3059: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .ox oox
    //      case  3060: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .ox oox
    //      case  3061: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox oox
    //      case  3062: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .ox oox
    //      case  3063: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox oox
    //      case  3064: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox oox
    //      case  3065: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox oox
    //      case  3066: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .ox oox
    //      case  3067: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox oox
    //      case  3068: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .ox oox
    //      case  3069: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // xx. .ox oox
    //      case  3070: Assert::IsTrue(v == PositionValue(-  202                         )); break;  // ox. .ox oox
    //      case  3071: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .x. .ox oox
    //      case  3072: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .ox oox
    //      case  3073: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox oox
    //      case  3074: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .ox oox
    //      case  3075: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // x.. .ox oox
    //      case  3076: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // o.. .ox oox
    //      case  3077: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ... .ox oox
    //      case  3078: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x oox
    //      case  3079: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx x.x oox
    //      case  3080: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx x.x oox
    //      case  3081: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x oox
    //      case  3082: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox x.x oox
    //      case  3083: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox x.x oox
    //      case  3084: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x oox
    //      case  3085: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x x.x oox
    //      case  3086: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x x.x oox
    //      case  3087: Assert::IsTrue(v == PositionValue(+  402                         )); break;  // xxo x.x oox
    //      case  3088: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // oxo x.x oox
    //      case  3089: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // .xo x.x oox
    //      case  3090: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xoo x.x oox
    //      case  3091: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x oox
    //      case  3092: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .oo x.x oox
    //      case  3093: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.o x.x oox
    //      case  3094: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.o x.x oox
    //      case  3095: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ..o x.x oox
    //      case  3096: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // xx. x.x oox
    //      case  3097: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // ox. x.x oox
    //      case  3098: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // .x. x.x oox
    //      case  3099: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xo. x.x oox
    //      case  3100: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oo. x.x oox
    //      case  3101: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // .o. x.x oox
    //      case  3102: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // x.. x.x oox
    //      case  3103: Assert::IsTrue(v == PositionValue(+   11                         )); break;  // o.. x.x oox
    //      case  3104: Assert::IsTrue(v == PositionValue(+   54                         )); break;  // ... x.x oox
    //      case  3105: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x oox
    //      case  3106: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.x oox
    //      case  3107: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx o.x oox
    //      case  3108: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox o.x oox
    //      case  3109: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.x oox
    //      case  3110: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox o.x oox
    //      case  3111: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x o.x oox
    //      case  3112: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.x oox
    //      case  3113: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x o.x oox
    //      case  3114: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xxo o.x oox
    //      case  3115: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.x oox
    //      case  3116: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .xo o.x oox
    //      case  3117: Assert::IsTrue(v == PositionValue(-  402                         )); break;  // xoo o.x oox
    //      case  3118: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x oox
    //      case  3119: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // .oo o.x oox
    //      case  3120: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // x.o o.x oox
    //      case  3121: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.x oox
    //      case  3122: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // ..o o.x oox
    //      case  3123: Assert::IsTrue(v == PositionValue(+   61                         )); break;  // xx. o.x oox
    //      case  3124: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.x oox
    //      case  3125: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // .x. o.x oox
    //      case  3126: Assert::IsTrue(v == PositionValue(-  272                         )); break;  // xo. o.x oox
    //      case  3127: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.x oox
    //      case  3128: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // .o. o.x oox
    //      case  3129: Assert::IsTrue(v == PositionValue(-  149                         )); break;  // x.. o.x oox
    //      case  3130: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.x oox
    //      case  3131: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // ... o.x oox
    //      case  3132: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x oox
    //      case  3133: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ..x oox
    //      case  3134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ..x oox
    //      case  3135: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ..x oox
    //      case  3136: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ..x oox
    //      case  3137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ..x oox
    //      case  3138: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ..x oox
    //      case  3139: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ..x oox
    //      case  3140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ..x oox
    //      case  3141: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xxo ..x oox
    //      case  3142: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // oxo ..x oox
    //      case  3143: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .xo ..x oox
    //      case  3144: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xoo ..x oox
    //      case  3145: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x oox
    //      case  3146: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .oo ..x oox
    //      case  3147: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o ..x oox
    //      case  3148: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.o ..x oox
    //      case  3149: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ..o ..x oox
    //      case  3150: Assert::IsTrue(v == PositionValue(+  262                         )); break;  // xx. ..x oox
    //      case  3151: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // ox. ..x oox
    //      case  3152: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // .x. ..x oox
    //      case  3153: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // xo. ..x oox
    //      case  3154: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // oo. ..x oox
    //      case  3155: Assert::IsTrue(v == PositionValue(-   36                         )); break;  // .o. ..x oox
    //      case  3156: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // x.. ..x oox
    //      case  3157: Assert::IsTrue(v == PositionValue(-   34                         )); break;  // o.. ..x oox
    //      case  3158: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // ... ..x oox
    //      case  3159: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo oox
    //      case  3160: Assert::IsTrue(v == PositionValue(+  360                         )); break;  // oxx xxo oox
    //      case  3161: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .xx xxo oox
    //      case  3162: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo oox
    //      case  3163: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // oox xxo oox
    //      case  3164: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .ox xxo oox
    //      case  3165: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo oox
    //      case  3166: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // o.x xxo oox
    //      case  3167: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ..x xxo oox
    //      case  3168: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo oox
    //      case  3169: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oxo xxo oox
    //      case  3170: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // .xo xxo oox
    //      case  3171: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo oox
    //      case  3172: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo oox
    //      case  3173: Assert::IsTrue(v == PositionValue(-  319                         )); break;  // .oo xxo oox
    //      case  3174: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo oox
    //      case  3175: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // o.o xxo oox
    //      case  3176: Assert::IsTrue(v == PositionValue(-  109                         )); break;  // ..o xxo oox
    //      case  3177: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo oox
    //      case  3178: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // ox. xxo oox
    //      case  3179: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .x. xxo oox
    //      case  3180: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo oox
    //      case  3181: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oo. xxo oox
    //      case  3182: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // .o. xxo oox
    //      case  3183: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo oox
    //      case  3184: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.. xxo oox
    //      case  3185: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // ... xxo oox
    //      case  3186: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo oox
    //      case  3187: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxo oox
    //      case  3188: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .xx oxo oox
    //      case  3189: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo oox
    //      case  3190: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxo oox
    //      case  3191: Assert::IsTrue(v == PositionValue(-  401                         )); break;  // .ox oxo oox
    //      case  3192: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo oox
    //      case  3193: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxo oox
    //      case  3194: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // ..x oxo oox
    //      case  3195: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo oox
    //      case  3196: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo oox
    //      case  3197: Assert::IsTrue(v == PositionValue(-  319                         )); break;  // .xo oxo oox
    //      case  3198: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxo oox
    //      case  3199: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo oox
    //      case  3200: Assert::IsTrue(v == PositionValue(-  730                         )); break;  // .oo oxo oox
    //      case  3201: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxo oox
    //      case  3202: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo oox
    //      case  3203: Assert::IsTrue(v == PositionValue(-  442                         )); break;  // ..o oxo oox
    //      case  3204: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo oox
    //      case  3205: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxo oox
    //      case  3206: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // .x. oxo oox
    //      case  3207: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxo oox
    //      case  3208: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxo oox
    //      case  3209: Assert::IsTrue(v == PositionValue(-  522                         )); break;  // .o. oxo oox
    //      case  3210: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxo oox
    //      case  3211: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxo oox
    //      case  3212: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // ... oxo oox
    //      case  3213: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo oox
    //      case  3214: Assert::IsTrue(v == PositionValue(+  159                         )); break;  // oxx .xo oox
    //      case  3215: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .xx .xo oox
    //      case  3216: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo oox
    //      case  3217: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // oox .xo oox
    //      case  3218: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // .ox .xo oox
    //      case  3219: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo oox
    //      case  3220: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // o.x .xo oox
    //      case  3221: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // ..x .xo oox
    //      case  3222: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo oox
    //      case  3223: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // oxo .xo oox
    //      case  3224: Assert::IsTrue(v == PositionValue(-  109                         )); break;  // .xo .xo oox
    //      case  3225: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xo oox
    //      case  3226: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo oox
    //      case  3227: Assert::IsTrue(v == PositionValue(-  442                         )); break;  // .oo .xo oox
    //      case  3228: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xo oox
    //      case  3229: Assert::IsTrue(v == PositionValue(-  284                         )); break;  // o.o .xo oox
    //      case  3230: Assert::IsTrue(v == PositionValue(-  232                         )); break;  // ..o .xo oox
    //      case  3231: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo oox
    //      case  3232: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ox. .xo oox
    //      case  3233: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // .x. .xo oox
    //      case  3234: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xo oox
    //      case  3235: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // oo. .xo oox
    //      case  3236: Assert::IsTrue(v == PositionValue(-  234                         )); break;  // .o. .xo oox
    //      case  3237: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xo oox
    //      case  3238: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // o.. .xo oox
    //      case  3239: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // ... .xo oox
    //      case  3240: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo oox
    //      case  3241: Assert::IsTrue(v == PositionValue(-  360                         )); break;  // oxx xoo oox
    //      case  3242: Assert::IsTrue(v == PositionValue(-  230                         )); break;  // .xx xoo oox
    //      case  3243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xoo oox
    //      case  3244: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo oox
    //      case  3245: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xoo oox
    //      case  3246: Assert::IsTrue(v == PositionValue(-  328                         )); break;  // x.x xoo oox
    //      case  3247: Assert::IsTrue(v == PositionValue(-  570                         )); break;  // o.x xoo oox
    //      case  3248: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // ..x xoo oox
    //      case  3249: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xoo oox
    //      case  3250: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo oox
    //      case  3251: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo oox
    //      case  3252: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo oox
    //      case  3253: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo oox
    //      case  3254: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo oox
    //      case  3255: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xoo oox
    //      case  3256: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo oox
    //      case  3257: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo oox
    //      case  3258: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xx. xoo oox
    //      case  3259: Assert::IsTrue(v == PositionValue(-  490                         )); break;  // ox. xoo oox
    //      case  3260: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // .x. xoo oox
    //      case  3261: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xoo oox
    //      case  3262: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo oox
    //      case  3263: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xoo oox
    //      case  3264: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // x.. xoo oox
    //      case  3265: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // o.. xoo oox
    //      case  3266: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // ... xoo oox
    //      case  3267: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo oox
    //      case  3268: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo oox
    //      case  3269: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo oox
    //      case  3270: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo oox
    //      case  3271: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo oox
    //      case  3272: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo oox
    //      case  3273: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo oox
    //      case  3274: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo oox
    //      case  3275: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo oox
    //      case  3276: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo oox
    //      case  3277: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo oox
    //      case  3278: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo oox
    //      case  3279: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo oox
    //      case  3280: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo oox
    //      case  3281: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo oox
    //      case  3282: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo oox
    //      case  3283: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo oox
    //      case  3284: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo oox
    //      case  3285: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo oox
    //      case  3286: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo oox
    //      case  3287: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo oox
    //      case  3288: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo oox
    //      case  3289: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo oox
    //      case  3290: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo oox
    //      case  3291: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo oox
    //      case  3292: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo oox
    //      case  3293: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo oox
    //      case  3294: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo oox
    //      case  3295: Assert::IsTrue(v == PositionValue(-  492                         )); break;  // oxx .oo oox
    //      case  3296: Assert::IsTrue(v == PositionValue(-  362                         )); break;  // .xx .oo oox
    //      case  3297: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .oo oox
    //      case  3298: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo oox
    //      case  3299: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .oo oox
    //      case  3300: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // x.x .oo oox
    //      case  3301: Assert::IsTrue(v == PositionValue(-  624                         )); break;  // o.x .oo oox
    //      case  3302: Assert::IsTrue(v == PositionValue(-  503                         )); break;  // ..x .oo oox
    //      case  3303: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo oox
    //      case  3304: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo oox
    //      case  3305: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo oox
    //      case  3306: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo oox
    //      case  3307: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo oox
    //      case  3308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo oox
    //      case  3309: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo oox
    //      case  3310: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo oox
    //      case  3311: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo oox
    //      case  3312: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // xx. .oo oox
    //      case  3313: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // ox. .oo oox
    //      case  3314: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .x. .oo oox
    //      case  3315: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .oo oox
    //      case  3316: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo oox
    //      case  3317: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .oo oox
    //      case  3318: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // x.. .oo oox
    //      case  3319: Assert::IsTrue(v == PositionValue(-  676                         )); break;  // o.. .oo oox
    //      case  3320: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // ... .oo oox
    //      case  3321: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o oox
    //      case  3322: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oxx x.o oox
    //      case  3323: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // .xx x.o oox
    //      case  3324: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // xox x.o oox
    //      case  3325: Assert::IsTrue(v == PositionValue(-  402                         )); break;  // oox x.o oox
    //      case  3326: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // .ox x.o oox
    //      case  3327: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // x.x x.o oox
    //      case  3328: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // o.x x.o oox
    //      case  3329: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // ..x x.o oox
    //      case  3330: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xxo x.o oox
    //      case  3331: Assert::IsTrue(v == PositionValue(-  242                         )); break;  // oxo x.o oox
    //      case  3332: Assert::IsTrue(v == PositionValue(-  199                         )); break;  // .xo x.o oox
    //      case  3333: Assert::IsTrue(v == PositionValue(-  402                         )); break;  // xoo x.o oox
    //      case  3334: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o oox
    //      case  3335: Assert::IsTrue(v == PositionValue(-  532                         )); break;  // .oo x.o oox
    //      case  3336: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // x.o x.o oox
    //      case  3337: Assert::IsTrue(v == PositionValue(-  365                         )); break;  // o.o x.o oox
    //      case  3338: Assert::IsTrue(v == PositionValue(-  322                         )); break;  // ..o x.o oox
    //      case  3339: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xx. x.o oox
    //      case  3340: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // ox. x.o oox
    //      case  3341: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // .x. x.o oox
    //      case  3342: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // xo. x.o oox
    //      case  3343: Assert::IsTrue(v == PositionValue(-  454                         )); break;  // oo. x.o oox
    //      case  3344: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // .o. x.o oox
    //      case  3345: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // x.. x.o oox
    //      case  3346: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // o.. x.o oox
    //      case  3347: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // ... x.o oox
    //      case  3348: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o oox
    //      case  3349: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.o oox
    //      case  3350: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // .xx o.o oox
    //      case  3351: Assert::IsTrue(v == PositionValue(-  562                         )); break;  // xox o.o oox
    //      case  3352: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.o oox
    //      case  3353: Assert::IsTrue(v == PositionValue(-  614                         )); break;  // .ox o.o oox
    //      case  3354: Assert::IsTrue(v == PositionValue(-  361                         )); break;  // x.x o.o oox
    //      case  3355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.o oox
    //      case  3356: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // ..x o.o oox
    //      case  3357: Assert::IsTrue(v == PositionValue(-  402                         )); break;  // xxo o.o oox
    //      case  3358: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o oox
    //      case  3359: Assert::IsTrue(v == PositionValue(-  532                         )); break;  // .xo o.o oox
    //      case  3360: Assert::IsTrue(v == PositionValue(-  804                         )); break;  // xoo o.o oox
    //      case  3361: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o oox
    //      case  3362: Assert::IsTrue(v == PositionValue(-  865                         )); break;  // .oo o.o oox
    //      case  3363: Assert::IsTrue(v == PositionValue(-  525                         )); break;  // x.o o.o oox
    //      case  3364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o oox
    //      case  3365: Assert::IsTrue(v == PositionValue(-  577                         )); break;  // ..o o.o oox
    //      case  3366: Assert::IsTrue(v == PositionValue(-  272                         )); break;  // xx. o.o oox
    //      case  3367: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.o oox
    //      case  3368: Assert::IsTrue(v == PositionValue(-  411                         )); break;  // .x. o.o oox
    //      case  3369: Assert::IsTrue(v == PositionValue(-  605                         )); break;  // xo. o.o oox
    //      case  3370: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.o oox
    //      case  3371: Assert::IsTrue(v == PositionValue(-  657                         )); break;  // .o. o.o oox
    //      case  3372: Assert::IsTrue(v == PositionValue(-  404                         )); break;  // x.. o.o oox
    //      case  3373: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.o oox
    //      case  3374: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // ... o.o oox
    //      case  3375: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o oox
    //      case  3376: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // oxx ..o oox
    //      case  3377: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // .xx ..o oox
    //      case  3378: Assert::IsTrue(v == PositionValue(-  283                         )); break;  // xox ..o oox
    //      case  3379: Assert::IsTrue(v == PositionValue(-  447                         )); break;  // oox ..o oox
    //      case  3380: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // .ox ..o oox
    //      case  3381: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // x.x ..o oox
    //      case  3382: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // o.x ..o oox
    //      case  3383: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // ..x ..o oox
    //      case  3384: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xxo ..o oox
    //      case  3385: Assert::IsTrue(v == PositionValue(-  365                         )); break;  // oxo ..o oox
    //      case  3386: Assert::IsTrue(v == PositionValue(-  322                         )); break;  // .xo ..o oox
    //      case  3387: Assert::IsTrue(v == PositionValue(-  525                         )); break;  // xoo ..o oox
    //      case  3388: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o oox
    //      case  3389: Assert::IsTrue(v == PositionValue(-  577                         )); break;  // .oo ..o oox
    //      case  3390: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // x.o ..o oox
    //      case  3391: Assert::IsTrue(v == PositionValue(-  410                         )); break;  // o.o ..o oox
    //      case  3392: Assert::IsTrue(v == PositionValue(-  367                         )); break;  // ..o ..o oox
    //      case  3393: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // xx. ..o oox
    //      case  3394: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // ox. ..o oox
    //      case  3395: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // .x. ..o oox
    //      case  3396: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // xo. ..o oox
    //      case  3397: Assert::IsTrue(v == PositionValue(-  499                         )); break;  // oo. ..o oox
    //      case  3398: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // .o. ..o oox
    //      case  3399: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // x.. ..o oox
    //      case  3400: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // o.. ..o oox
    //      case  3401: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // ... ..o oox
    //      case  3402: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. oox
    //      case  3403: Assert::IsTrue(v == PositionValue(+  492                         )); break;  // oxx xx. oox
    //      case  3404: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // .xx xx. oox
    //      case  3405: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. oox
    //      case  3406: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // oox xx. oox
    //      case  3407: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .ox xx. oox
    //      case  3408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. oox
    //      case  3409: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // o.x xx. oox
    //      case  3410: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // ..x xx. oox
    //      case  3411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. oox
    //      case  3412: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // oxo xx. oox
    //      case  3413: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // .xo xx. oox
    //      case  3414: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. oox
    //      case  3415: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. oox
    //      case  3416: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // .oo xx. oox
    //      case  3417: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. oox
    //      case  3418: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // o.o xx. oox
    //      case  3419: Assert::IsTrue(v == PositionValue(+  101                         )); break;  // ..o xx. oox
    //      case  3420: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. oox
    //      case  3421: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // ox. xx. oox
    //      case  3422: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // .x. xx. oox
    //      case  3423: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. oox
    //      case  3424: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oo. xx. oox
    //      case  3425: Assert::IsTrue(v == PositionValue(+   99                         )); break;  // .o. xx. oox
    //      case  3426: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. oox
    //      case  3427: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // o.. xx. oox
    //      case  3428: Assert::IsTrue(v == PositionValue(+  144                         )); break;  // ... xx. oox
    //      case  3429: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. oox
    //      case  3430: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ox. oox
    //      case  3431: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .xx ox. oox
    //      case  3432: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. oox
    //      case  3433: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ox. oox
    //      case  3434: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // .ox ox. oox
    //      case  3435: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. oox
    //      case  3436: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ox. oox
    //      case  3437: Assert::IsTrue(v == PositionValue(-   77                         )); break;  // ..x ox. oox
    //      case  3438: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. oox
    //      case  3439: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ox. oox
    //      case  3440: Assert::IsTrue(v == PositionValue(-  118                         )); break;  // .xo ox. oox
    //      case  3441: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo ox. oox
    //      case  3442: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. oox
    //      case  3443: Assert::IsTrue(v == PositionValue(-  451                         )); break;  // .oo ox. oox
    //      case  3444: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o ox. oox
    //      case  3445: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ox. oox
    //      case  3446: Assert::IsTrue(v == PositionValue(-  241                         )); break;  // ..o ox. oox
    //      case  3447: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. oox
    //      case  3448: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ox. oox
    //      case  3449: Assert::IsTrue(v == PositionValue(-   75                         )); break;  // .x. ox. oox
    //      case  3450: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. ox. oox
    //      case  3451: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ox. oox
    //      case  3452: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // .o. ox. oox
    //      case  3453: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. ox. oox
    //      case  3454: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ox. oox
    //      case  3455: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // ... ox. oox
    //      case  3456: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. oox
    //      case  3457: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // oxx .x. oox
    //      case  3458: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // .xx .x. oox
    //      case  3459: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. oox
    //      case  3460: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // oox .x. oox
    //      case  3461: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // .ox .x. oox
    //      case  3462: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. oox
    //      case  3463: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // o.x .x. oox
    //      case  3464: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ..x .x. oox
    //      case  3465: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. oox
    //      case  3466: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oxo .x. oox
    //      case  3467: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // .xo .x. oox
    //      case  3468: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .x. oox
    //      case  3469: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. oox
    //      case  3470: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .oo .x. oox
    //      case  3471: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .x. oox
    //      case  3472: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // o.o .x. oox
    //      case  3473: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // ..o .x. oox
    //      case  3474: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. oox
    //      case  3475: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // ox. .x. oox
    //      case  3476: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // .x. .x. oox
    //      case  3477: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .x. oox
    //      case  3478: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // oo. .x. oox
    //      case  3479: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // .o. .x. oox
    //      case  3480: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .x. oox
    //      case  3481: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.. .x. oox
    //      case  3482: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // ... .x. oox
    //      case  3483: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. oox
    //      case  3484: Assert::IsTrue(v == PositionValue(-  159                         )); break;  // oxx xo. oox
    //      case  3485: Assert::IsTrue(v == PositionValue(-   29                         )); break;  // .xx xo. oox
    //      case  3486: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xo. oox
    //      case  3487: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. oox
    //      case  3488: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xo. oox
    //      case  3489: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // x.x xo. oox
    //      case  3490: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // o.x xo. oox
    //      case  3491: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // ..x xo. oox
    //      case  3492: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xo. oox
    //      case  3493: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. oox
    //      case  3494: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xo. oox
    //      case  3495: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xo. oox
    //      case  3496: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. oox
    //      case  3497: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. oox
    //      case  3498: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xo. oox
    //      case  3499: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. oox
    //      case  3500: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xo. oox
    //      case  3501: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xx. xo. oox
    //      case  3502: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // ox. xo. oox
    //      case  3503: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .x. xo. oox
    //      case  3504: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xo. oox
    //      case  3505: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. oox
    //      case  3506: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xo. oox
    //      case  3507: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // x.. xo. oox
    //      case  3508: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // o.. xo. oox
    //      case  3509: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // ... xo. oox
    //      case  3510: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. oox
    //      case  3511: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. oox
    //      case  3512: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // .xx oo. oox
    //      case  3513: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oo. oox
    //      case  3514: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. oox
    //      case  3515: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oo. oox
    //      case  3516: Assert::IsTrue(v == PositionValue(-  538                         )); break;  // x.x oo. oox
    //      case  3517: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. oox
    //      case  3518: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // ..x oo. oox
    //      case  3519: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oo. oox
    //      case  3520: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. oox
    //      case  3521: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oo. oox
    //      case  3522: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. oox
    //      case  3523: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. oox
    //      case  3524: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. oox
    //      case  3525: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oo. oox
    //      case  3526: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. oox
    //      case  3527: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oo. oox
    //      case  3528: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // xx. oo. oox
    //      case  3529: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. oox
    //      case  3530: Assert::IsTrue(v == PositionValue(-  588                         )); break;  // .x. oo. oox
    //      case  3531: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oo. oox
    //      case  3532: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. oox
    //      case  3533: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oo. oox
    //      case  3534: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // x.. oo. oox
    //      case  3535: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. oox
    //      case  3536: Assert::IsTrue(v == PositionValue(-  642                         )); break;  // ... oo. oox
    //      case  3537: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. oox
    //      case  3538: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // oxx .o. oox
    //      case  3539: Assert::IsTrue(v == PositionValue(-  152                         )); break;  // .xx .o. oox
    //      case  3540: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .o. oox
    //      case  3541: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. oox
    //      case  3542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .o. oox
    //      case  3543: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // x.x .o. oox
    //      case  3544: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // o.x .o. oox
    //      case  3545: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // ..x .o. oox
    //      case  3546: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .o. oox
    //      case  3547: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. oox
    //      case  3548: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .o. oox
    //      case  3549: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. oox
    //      case  3550: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. oox
    //      case  3551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. oox
    //      case  3552: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .o. oox
    //      case  3553: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. oox
    //      case  3554: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .o. oox
    //      case  3555: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xx. .o. oox
    //      case  3556: Assert::IsTrue(v == PositionValue(-  412                         )); break;  // ox. .o. oox
    //      case  3557: Assert::IsTrue(v == PositionValue(-  291                         )); break;  // .x. .o. oox
    //      case  3558: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .o. oox
    //      case  3559: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. oox
    //      case  3560: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .o. oox
    //      case  3561: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // x.. .o. oox
    //      case  3562: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // o.. .o. oox
    //      case  3563: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // ... .o. oox
    //      case  3564: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. oox
    //      case  3565: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oxx x.. oox
    //      case  3566: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .xx x.. oox
    //      case  3567: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xox x.. oox
    //      case  3568: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oox x.. oox
    //      case  3569: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .ox x.. oox
    //      case  3570: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.x x.. oox
    //      case  3571: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // o.x x.. oox
    //      case  3572: Assert::IsTrue(v == PositionValue(-   35                         )); break;  // ..x x.. oox
    //      case  3573: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xxo x.. oox
    //      case  3574: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // oxo x.. oox
    //      case  3575: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .xo x.. oox
    //      case  3576: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xoo x.. oox
    //      case  3577: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. oox
    //      case  3578: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .oo x.. oox
    //      case  3579: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o x.. oox
    //      case  3580: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // o.o x.. oox
    //      case  3581: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // ..o x.. oox
    //      case  3582: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xx. x.. oox
    //      case  3583: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ox. x.. oox
    //      case  3584: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .x. x.. oox
    //      case  3585: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xo. x.. oox
    //      case  3586: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oo. x.. oox
    //      case  3587: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .o. x.. oox
    //      case  3588: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.. x.. oox
    //      case  3589: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // o.. x.. oox
    //      case  3590: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // ... x.. oox
    //      case  3591: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. oox
    //      case  3592: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.. oox
    //      case  3593: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // .xx o.. oox
    //      case  3594: Assert::IsTrue(v == PositionValue(-  361                         )); break;  // xox o.. oox
    //      case  3595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.. oox
    //      case  3596: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // .ox o.. oox
    //      case  3597: Assert::IsTrue(v == PositionValue(-  238                         )); break;  // x.x o.. oox
    //      case  3598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.. oox
    //      case  3599: Assert::IsTrue(v == PositionValue(-  290                         )); break;  // ..x o.. oox
    //      case  3600: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xxo o.. oox
    //      case  3601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.. oox
    //      case  3602: Assert::IsTrue(v == PositionValue(-  331                         )); break;  // .xo o.. oox
    //      case  3603: Assert::IsTrue(v == PositionValue(-  525                         )); break;  // xoo o.. oox
    //      case  3604: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. oox
    //      case  3605: Assert::IsTrue(v == PositionValue(-  586                         )); break;  // .oo o.. oox
    //      case  3606: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // x.o o.. oox
    //      case  3607: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.. oox
    //      case  3608: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // ..o o.. oox
    //      case  3609: Assert::IsTrue(v == PositionValue(-  149                         )); break;  // xx. o.. oox
    //      case  3610: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.. oox
    //      case  3611: Assert::IsTrue(v == PositionValue(-  288                         )); break;  // .x. o.. oox
    //      case  3612: Assert::IsTrue(v == PositionValue(-  404                         )); break;  // xo. o.. oox
    //      case  3613: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.. oox
    //      case  3614: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // .o. o.. oox
    //      case  3615: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // x.. o.. oox
    //      case  3616: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.. oox
    //      case  3617: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // ... o.. oox
    //      case  3618: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... oox
    //      case  3619: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oxx ... oox
    //      case  3620: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // .xx ... oox
    //      case  3621: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // xox ... oox
    //      case  3622: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // oox ... oox
    //      case  3623: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // .ox ... oox
    //      case  3624: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // x.x ... oox
    //      case  3625: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.x ... oox
    //      case  3626: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // ..x ... oox
    //      case  3627: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xxo ... oox
    //      case  3628: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // oxo ... oox
    //      case  3629: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // .xo ... oox
    //      case  3630: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // xoo ... oox
    //      case  3631: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... oox
    //      case  3632: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // .oo ... oox
    //      case  3633: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // x.o ... oox
    //      case  3634: Assert::IsTrue(v == PositionValue(-  209                         )); break;  // o.o ... oox
    //      case  3635: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // ..o ... oox
    //      case  3636: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // xx. ... oox
    //      case  3637: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // ox. ... oox
    //      case  3638: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // .x. ... oox
    //      case  3639: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // xo. ... oox
    //      case  3640: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // oo. ... oox
    //      case  3641: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .o. ... oox
    //      case  3642: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // x.. ... oox
    //      case  3643: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // o.. ... oox
    //      case  3644: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // ... ... oox
    //      case  3645: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx .ox
    //      case  3646: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx .ox
    //      case  3647: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx .ox
    //      case  3648: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx .ox
    //      case  3649: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx .ox
    //      case  3650: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx .ox
    //      case  3651: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx .ox
    //      case  3652: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx .ox
    //      case  3653: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx .ox
    //      case  3654: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx .ox
    //      case  3655: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx .ox
    //      case  3656: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx .ox
    //      case  3657: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx .ox
    //      case  3658: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx .ox
    //      case  3659: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx .ox
    //      case  3660: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx .ox
    //      case  3661: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx .ox
    //      case  3662: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx .ox
    //      case  3663: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx .ox
    //      case  3664: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx .ox
    //      case  3665: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx .ox
    //      case  3666: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx .ox
    //      case  3667: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx .ox
    //      case  3668: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx .ox
    //      case  3669: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx .ox
    //      case  3670: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx .ox
    //      case  3671: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx .ox
    //      case  3672: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx .ox
    //      case  3673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx .ox
    //      case  3674: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx .ox
    //      case  3675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx .ox
    //      case  3676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxx .ox
    //      case  3677: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx .ox
    //      case  3678: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx .ox
    //      case  3679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxx .ox
    //      case  3680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx .ox
    //      case  3681: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx .ox
    //      case  3682: Assert::IsTrue(v == PositionValue(+  230                         )); break;  // oxo oxx .ox
    //      case  3683: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // .xo oxx .ox
    //      case  3684: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxx .ox
    //      case  3685: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx .ox
    //      case  3686: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // .oo oxx .ox
    //      case  3687: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxx .ox
    //      case  3688: Assert::IsTrue(v == PositionValue(+   29                         )); break;  // o.o oxx .ox
    //      case  3689: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // ..o oxx .ox
    //      case  3690: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx .ox
    //      case  3691: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // ox. oxx .ox
    //      case  3692: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .x. oxx .ox
    //      case  3693: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxx .ox
    //      case  3694: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // oo. oxx .ox
    //      case  3695: Assert::IsTrue(v == PositionValue(+   97                         )); break;  // .o. oxx .ox
    //      case  3696: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxx .ox
    //      case  3697: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // o.. oxx .ox
    //      case  3698: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // ... oxx .ox
    //      case  3699: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx .ox
    //      case  3700: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx .ox
    //      case  3701: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx .ox
    //      case  3702: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx .ox
    //      case  3703: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx .ox
    //      case  3704: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx .ox
    //      case  3705: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx .ox
    //      case  3706: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx .ox
    //      case  3707: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx .ox
    //      case  3708: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx .ox
    //      case  3709: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // oxo .xx .ox
    //      case  3710: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .xo .xx .ox
    //      case  3711: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xx .ox
    //      case  3712: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx .ox
    //      case  3713: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .oo .xx .ox
    //      case  3714: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xx .ox
    //      case  3715: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // o.o .xx .ox
    //      case  3716: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // ..o .xx .ox
    //      case  3717: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx .ox
    //      case  3718: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // ox. .xx .ox
    //      case  3719: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // .x. .xx .ox
    //      case  3720: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xx .ox
    //      case  3721: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // oo. .xx .ox
    //      case  3722: Assert::IsTrue(v == PositionValue(+  307                         )); break;  // .o. .xx .ox
    //      case  3723: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xx .ox
    //      case  3724: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // o.. .xx .ox
    //      case  3725: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // ... .xx .ox
    //      case  3726: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox .ox
    //      case  3727: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xox .ox
    //      case  3728: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xox .ox
    //      case  3729: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xox .ox
    //      case  3730: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox .ox
    //      case  3731: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xox .ox
    //      case  3732: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox .ox
    //      case  3733: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xox .ox
    //      case  3734: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xox .ox
    //      case  3735: Assert::IsTrue(v == PositionValue(+  319                         )); break;  // xxo xox .ox
    //      case  3736: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // oxo xox .ox
    //      case  3737: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // .xo xox .ox
    //      case  3738: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xox .ox
    //      case  3739: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox .ox
    //      case  3740: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox .ox
    //      case  3741: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // x.o xox .ox
    //      case  3742: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // o.o xox .ox
    //      case  3743: Assert::IsTrue(v == PositionValue(-   99                         )); break;  // ..o xox .ox
    //      case  3744: Assert::IsTrue(v == PositionValue(+  467                         )); break;  // xx. xox .ox
    //      case  3745: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // ox. xox .ox
    //      case  3746: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .x. xox .ox
    //      case  3747: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xox .ox
    //      case  3748: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox .ox
    //      case  3749: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xox .ox
    //      case  3750: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.. xox .ox
    //      case  3751: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.. xox .ox
    //      case  3752: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ... xox .ox
    //      case  3753: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox .ox
    //      case  3754: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oox .ox
    //      case  3755: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oox .ox
    //      case  3756: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oox .ox
    //      case  3757: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox .ox
    //      case  3758: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oox .ox
    //      case  3759: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oox .ox
    //      case  3760: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oox .ox
    //      case  3761: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oox .ox
    //      case  3762: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // xxo oox .ox
    //      case  3763: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // oxo oox .ox
    //      case  3764: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .xo oox .ox
    //      case  3765: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox .ox
    //      case  3766: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox .ox
    //      case  3767: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox .ox
    //      case  3768: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // x.o oox .ox
    //      case  3769: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // o.o oox .ox
    //      case  3770: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // ..o oox .ox
    //      case  3771: Assert::IsTrue(v == PositionValue(+   56                         )); break;  // xx. oox .ox
    //      case  3772: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // ox. oox .ox
    //      case  3773: Assert::IsTrue(v == PositionValue(-   74                         )); break;  // .x. oox .ox
    //      case  3774: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oox .ox
    //      case  3775: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox .ox
    //      case  3776: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oox .ox
    //      case  3777: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // x.. oox .ox
    //      case  3778: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // o.. oox .ox
    //      case  3779: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // ... oox .ox
    //      case  3780: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox .ox
    //      case  3781: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .ox .ox
    //      case  3782: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .ox .ox
    //      case  3783: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .ox .ox
    //      case  3784: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox .ox
    //      case  3785: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .ox .ox
    //      case  3786: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .ox .ox
    //      case  3787: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .ox .ox
    //      case  3788: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .ox .ox
    //      case  3789: Assert::IsTrue(v == PositionValue(+  109                         )); break;  // xxo .ox .ox
    //      case  3790: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // oxo .ox .ox
    //      case  3791: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // .xo .ox .ox
    //      case  3792: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox .ox
    //      case  3793: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox .ox
    //      case  3794: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox .ox
    //      case  3795: Assert::IsTrue(v == PositionValue(-  101                         )); break;  // x.o .ox .ox
    //      case  3796: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // o.o .ox .ox
    //      case  3797: Assert::IsTrue(v == PositionValue(-  144                         )); break;  // ..o .ox .ox
    //      case  3798: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // xx. .ox .ox
    //      case  3799: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // ox. .ox .ox
    //      case  3800: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // .x. .ox .ox
    //      case  3801: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .ox .ox
    //      case  3802: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox .ox
    //      case  3803: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .ox .ox
    //      case  3804: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // x.. .ox .ox
    //      case  3805: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // o.. .ox .ox
    //      case  3806: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // ... .ox .ox
    //      case  3807: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x .ox
    //      case  3808: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx x.x .ox
    //      case  3809: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx x.x .ox
    //      case  3810: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x .ox
    //      case  3811: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox x.x .ox
    //      case  3812: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox x.x .ox
    //      case  3813: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x .ox
    //      case  3814: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x x.x .ox
    //      case  3815: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x x.x .ox
    //      case  3816: Assert::IsTrue(v == PositionValue(+  532                         )); break;  // xxo x.x .ox
    //      case  3817: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // oxo x.x .ox
    //      case  3818: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // .xo x.x .ox
    //      case  3819: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xoo x.x .ox
    //      case  3820: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x .ox
    //      case  3821: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // .oo x.x .ox
    //      case  3822: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // x.o x.x .ox
    //      case  3823: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // o.o x.x .ox
    //      case  3824: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ..o x.x .ox
    //      case  3825: Assert::IsTrue(v == PositionValue(+  593                         )); break;  // xx. x.x .ox
    //      case  3826: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // ox. x.x .ox
    //      case  3827: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // .x. x.x .ox
    //      case  3828: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // xo. x.x .ox
    //      case  3829: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oo. x.x .ox
    //      case  3830: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .o. x.x .ox
    //      case  3831: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // x.. x.x .ox
    //      case  3832: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // o.. x.x .ox
    //      case  3833: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // ... x.x .ox
    //      case  3834: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x .ox
    //      case  3835: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx o.x .ox
    //      case  3836: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx o.x .ox
    //      case  3837: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox o.x .ox
    //      case  3838: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox o.x .ox
    //      case  3839: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox o.x .ox
    //      case  3840: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x o.x .ox
    //      case  3841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x o.x .ox
    //      case  3842: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x o.x .ox
    //      case  3843: Assert::IsTrue(v == PositionValue(+  199                         )); break;  // xxo o.x .ox
    //      case  3844: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // oxo o.x .ox
    //      case  3845: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // .xo o.x .ox
    //      case  3846: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // xoo o.x .ox
    //      case  3847: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x .ox
    //      case  3848: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // .oo o.x .ox
    //      case  3849: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.o o.x .ox
    //      case  3850: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // o.o o.x .ox
    //      case  3851: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ..o o.x .ox
    //      case  3852: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // xx. o.x .ox
    //      case  3853: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ox. o.x .ox
    //      case  3854: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .x. o.x .ox
    //      case  3855: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // xo. o.x .ox
    //      case  3856: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // oo. o.x .ox
    //      case  3857: Assert::IsTrue(v == PositionValue(-  116                         )); break;  // .o. o.x .ox
    //      case  3858: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // x.. o.x .ox
    //      case  3859: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.. o.x .ox
    //      case  3860: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // ... o.x .ox
    //      case  3861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x .ox
    //      case  3862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ..x .ox
    //      case  3863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ..x .ox
    //      case  3864: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ..x .ox
    //      case  3865: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ..x .ox
    //      case  3866: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ..x .ox
    //      case  3867: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ..x .ox
    //      case  3868: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ..x .ox
    //      case  3869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ..x .ox
    //      case  3870: Assert::IsTrue(v == PositionValue(+  322                         )); break;  // xxo ..x .ox
    //      case  3871: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // oxo ..x .ox
    //      case  3872: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // .xo ..x .ox
    //      case  3873: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xoo ..x .ox
    //      case  3874: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x .ox
    //      case  3875: Assert::IsTrue(v == PositionValue(-   54                         )); break;  // .oo ..x .ox
    //      case  3876: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // x.o ..x .ox
    //      case  3877: Assert::IsTrue(v == PositionValue(+   35                         )); break;  // o.o ..x .ox
    //      case  3878: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // ..o ..x .ox
    //      case  3879: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // xx. ..x .ox
    //      case  3880: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // ox. ..x .ox
    //      case  3881: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .x. ..x .ox
    //      case  3882: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // xo. ..x .ox
    //      case  3883: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // oo. ..x .ox
    //      case  3884: Assert::IsTrue(v == PositionValue(+   85                         )); break;  // .o. ..x .ox
    //      case  3885: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // x.. ..x .ox
    //      case  3886: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // o.. ..x .ox
    //      case  3887: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // ... ..x .ox
    //      case  3888: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo .ox
    //      case  3889: Assert::IsTrue(v == PositionValue(+  490                         )); break;  // oxx xxo .ox
    //      case  3890: Assert::IsTrue(v == PositionValue(+  551                         )); break;  // .xx xxo .ox
    //      case  3891: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo .ox
    //      case  3892: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // oox xxo .ox
    //      case  3893: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // .ox xxo .ox
    //      case  3894: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo .ox
    //      case  3895: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // o.x xxo .ox
    //      case  3896: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // ..x xxo .ox
    //      case  3897: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo .ox
    //      case  3898: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // oxo xxo .ox
    //      case  3899: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .xo xxo .ox
    //      case  3900: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo .ox
    //      case  3901: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo .ox
    //      case  3902: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // .oo xxo .ox
    //      case  3903: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo .ox
    //      case  3904: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.o xxo .ox
    //      case  3905: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // ..o xxo .ox
    //      case  3906: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo .ox
    //      case  3907: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // ox. xxo .ox
    //      case  3908: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // .x. xxo .ox
    //      case  3909: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo .ox
    //      case  3910: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // oo. xxo .ox
    //      case  3911: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .o. xxo .ox
    //      case  3912: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo .ox
    //      case  3913: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // o.. xxo .ox
    //      case  3914: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ... xxo .ox
    //      case  3915: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo .ox
    //      case  3916: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // oxx oxo .ox
    //      case  3917: Assert::IsTrue(v == PositionValue(+  227                         )); break;  // .xx oxo .ox
    //      case  3918: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo .ox
    //      case  3919: Assert::IsTrue(v == PositionValue(-  401                         )); break;  // oox oxo .ox
    //      case  3920: Assert::IsTrue(v == PositionValue(-  184                         )); break;  // .ox oxo .ox
    //      case  3921: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo .ox
    //      case  3922: Assert::IsTrue(v == PositionValue(-  122                         )); break;  // o.x oxo .ox
    //      case  3923: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // ..x oxo .ox
    //      case  3924: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo .ox
    //      case  3925: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oxo oxo .ox
    //      case  3926: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // .xo oxo .ox
    //      case  3927: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxo .ox
    //      case  3928: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo .ox
    //      case  3929: Assert::IsTrue(v == PositionValue(-  522                         )); break;  // .oo oxo .ox
    //      case  3930: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxo .ox
    //      case  3931: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // o.o oxo .ox
    //      case  3932: Assert::IsTrue(v == PositionValue(-  234                         )); break;  // ..o oxo .ox
    //      case  3933: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo .ox
    //      case  3934: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // ox. oxo .ox
    //      case  3935: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .x. oxo .ox
    //      case  3936: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxo .ox
    //      case  3937: Assert::IsTrue(v == PositionValue(-  540                         )); break;  // oo. oxo .ox
    //      case  3938: Assert::IsTrue(v == PositionValue(-  314                         )); break;  // .o. oxo .ox
    //      case  3939: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxo .ox
    //      case  3940: Assert::IsTrue(v == PositionValue(-  252                         )); break;  // o.. oxo .ox
    //      case  3941: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // ... oxo .ox
    //      case  3942: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo .ox
    //      case  3943: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // oxx .xo .ox
    //      case  3944: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // .xx .xo .ox
    //      case  3945: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo .ox
    //      case  3946: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // oox .xo .ox
    //      case  3947: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // .ox .xo .ox
    //      case  3948: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo .ox
    //      case  3949: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // o.x .xo .ox
    //      case  3950: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // ..x .xo .ox
    //      case  3951: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo .ox
    //      case  3952: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oxo .xo .ox
    //      case  3953: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // .xo .xo .ox
    //      case  3954: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xo .ox
    //      case  3955: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo .ox
    //      case  3956: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // .oo .xo .ox
    //      case  3957: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xo .ox
    //      case  3958: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // o.o .xo .ox
    //      case  3959: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // ..o .xo .ox
    //      case  3960: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo .ox
    //      case  3961: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // ox. .xo .ox
    //      case  3962: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .x. .xo .ox
    //      case  3963: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xo .ox
    //      case  3964: Assert::IsTrue(v == PositionValue(-  252                         )); break;  // oo. .xo .ox
    //      case  3965: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // .o. .xo .ox
    //      case  3966: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xo .ox
    //      case  3967: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // o.. .xo .ox
    //      case  3968: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // ... .xo .ox
    //      case  3969: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo .ox
    //      case  3970: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // oxx xoo .ox
    //      case  3971: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // .xx xoo .ox
    //      case  3972: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xoo .ox
    //      case  3973: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo .ox
    //      case  3974: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xoo .ox
    //      case  3975: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // x.x xoo .ox
    //      case  3976: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // o.x xoo .ox
    //      case  3977: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // ..x xoo .ox
    //      case  3978: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xxo xoo .ox
    //      case  3979: Assert::IsTrue(v == PositionValue(-  490                         )); break;  // oxo xoo .ox
    //      case  3980: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // .xo xoo .ox
    //      case  3981: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo .ox
    //      case  3982: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo .ox
    //      case  3983: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo .ox
    //      case  3984: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // x.o xoo .ox
    //      case  3985: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // o.o xoo .ox
    //      case  3986: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // ..o xoo .ox
    //      case  3987: Assert::IsTrue(v == PositionValue(+   56                         )); break;  // xx. xoo .ox
    //      case  3988: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // ox. xoo .ox
    //      case  3989: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // .x. xoo .ox
    //      case  3990: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xoo .ox
    //      case  3991: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo .ox
    //      case  3992: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xoo .ox
    //      case  3993: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // x.. xoo .ox
    //      case  3994: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // o.. xoo .ox
    //      case  3995: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // ... xoo .ox
    //      case  3996: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo .ox
    //      case  3997: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo .ox
    //      case  3998: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo .ox
    //      case  3999: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo .ox
    //      case  4000: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo .ox
    //      case  4001: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo .ox
    //      case  4002: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo .ox
    //      case  4003: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo .ox
    //      case  4004: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo .ox
    //      case  4005: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo .ox
    //      case  4006: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo .ox
    //      case  4007: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo .ox
    //      case  4008: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo .ox
    //      case  4009: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo .ox
    //      case  4010: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo .ox
    //      case  4011: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo .ox
    //      case  4012: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo .ox
    //      case  4013: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo .ox
    //      case  4014: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo .ox
    //      case  4015: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo .ox
    //      case  4016: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo .ox
    //      case  4017: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo .ox
    //      case  4018: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo .ox
    //      case  4019: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo .ox
    //      case  4020: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo .ox
    //      case  4021: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo .ox
    //      case  4022: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo .ox
    //      case  4023: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo .ox
    //      case  4024: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // oxx .oo .ox
    //      case  4025: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .xx .oo .ox
    //      case  4026: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .oo .ox
    //      case  4027: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo .ox
    //      case  4028: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .oo .ox
    //      case  4029: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // x.x .oo .ox
    //      case  4030: Assert::IsTrue(v == PositionValue(-  425                         )); break;  // o.x .oo .ox
    //      case  4031: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // ..x .oo .ox
    //      case  4032: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // xxo .oo .ox
    //      case  4033: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // oxo .oo .ox
    //      case  4034: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .xo .oo .ox
    //      case  4035: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo .ox
    //      case  4036: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo .ox
    //      case  4037: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo .ox
    //      case  4038: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // x.o .oo .ox
    //      case  4039: Assert::IsTrue(v == PositionValue(-  676                         )); break;  // o.o .oo .ox
    //      case  4040: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // ..o .oo .ox
    //      case  4041: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xx. .oo .ox
    //      case  4042: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // ox. .oo .ox
    //      case  4043: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .x. .oo .ox
    //      case  4044: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .oo .ox
    //      case  4045: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo .ox
    //      case  4046: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .oo .ox
    //      case  4047: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // x.. .oo .ox
    //      case  4048: Assert::IsTrue(v == PositionValue(-  468                         )); break;  // o.. .oo .ox
    //      case  4049: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // ... .oo .ox
    //      case  4050: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o .ox
    //      case  4051: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // oxx x.o .ox
    //      case  4052: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .xx x.o .ox
    //      case  4053: Assert::IsTrue(v == PositionValue(-   30                         )); break;  // xox x.o .ox
    //      case  4054: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // oox x.o .ox
    //      case  4055: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // .ox x.o .ox
    //      case  4056: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // x.x x.o .ox
    //      case  4057: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // o.x x.o .ox
    //      case  4058: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // ..x x.o .ox
    //      case  4059: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xxo x.o .ox
    //      case  4060: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oxo x.o .ox
    //      case  4061: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // .xo x.o .ox
    //      case  4062: Assert::IsTrue(v == PositionValue(-  272                         )); break;  // xoo x.o .ox
    //      case  4063: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o .ox
    //      case  4064: Assert::IsTrue(v == PositionValue(-  411                         )); break;  // .oo x.o .ox
    //      case  4065: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // x.o x.o .ox
    //      case  4066: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // o.o x.o .ox
    //      case  4067: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // ..o x.o .ox
    //      case  4068: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // xx. x.o .ox
    //      case  4069: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ox. x.o .ox
    //      case  4070: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .x. x.o .ox
    //      case  4071: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // xo. x.o .ox
    //      case  4072: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // oo. x.o .ox
    //      case  4073: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // .o. x.o .ox
    //      case  4074: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // x.. x.o .ox
    //      case  4075: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.. x.o .ox
    //      case  4076: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // ... x.o .ox
    //      case  4077: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o .ox
    //      case  4078: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // oxx o.o .ox
    //      case  4079: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // .xx o.o .ox
    //      case  4080: Assert::IsTrue(v == PositionValue(-  363                         )); break;  // xox o.o .ox
    //      case  4081: Assert::IsTrue(v == PositionValue(-  614                         )); break;  // oox o.o .ox
    //      case  4082: Assert::IsTrue(v == PositionValue(-  406                         )); break;  // .ox o.o .ox
    //      case  4083: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // x.x o.o .ox
    //      case  4084: Assert::IsTrue(v == PositionValue(-  335                         )); break;  // o.x o.o .ox
    //      case  4085: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // ..x o.o .ox
    //      case  4086: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // xxo o.o .ox
    //      case  4087: Assert::IsTrue(v == PositionValue(-  454                         )); break;  // oxo o.o .ox
    //      case  4088: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // .xo o.o .ox
    //      case  4089: Assert::IsTrue(v == PositionValue(-  605                         )); break;  // xoo o.o .ox
    //      case  4090: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o .ox
    //      case  4091: Assert::IsTrue(v == PositionValue(-  657                         )); break;  // .oo o.o .ox
    //      case  4092: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // x.o o.o .ox
    //      case  4093: Assert::IsTrue(v == PositionValue(-  499                         )); break;  // o.o o.o .ox
    //      case  4094: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // ..o o.o .ox
    //      case  4095: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // xx. o.o .ox
    //      case  4096: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // ox. o.o .ox
    //      case  4097: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // .x. o.o .ox
    //      case  4098: Assert::IsTrue(v == PositionValue(-  406                         )); break;  // xo. o.o .ox
    //      case  4099: Assert::IsTrue(v == PositionValue(-  666                         )); break;  // oo. o.o .ox
    //      case  4100: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // .o. o.o .ox
    //      case  4101: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // x.. o.o .ox
    //      case  4102: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // o.. o.o .ox
    //      case  4103: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // ... o.o .ox
    //      case  4104: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o .ox
    //      case  4105: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // oxx ..o .ox
    //      case  4106: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // .xx ..o .ox
    //      case  4107: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // xox ..o .ox
    //      case  4108: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // oox ..o .ox
    //      case  4109: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // .ox ..o .ox
    //      case  4110: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // x.x ..o .ox
    //      case  4111: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // o.x ..o .ox
    //      case  4112: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // ..x ..o .ox
    //      case  4113: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xxo ..o .ox
    //      case  4114: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // oxo ..o .ox
    //      case  4115: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // .xo ..o .ox
    //      case  4116: Assert::IsTrue(v == PositionValue(-  404                         )); break;  // xoo ..o .ox
    //      case  4117: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o .ox
    //      case  4118: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // .oo ..o .ox
    //      case  4119: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // x.o ..o .ox
    //      case  4120: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // o.o ..o .ox
    //      case  4121: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // ..o ..o .ox
    //      case  4122: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // xx. ..o .ox
    //      case  4123: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // ox. ..o .ox
    //      case  4124: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .x. ..o .ox
    //      case  4125: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // xo. ..o .ox
    //      case  4126: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // oo. ..o .ox
    //      case  4127: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // .o. ..o .ox
    //      case  4128: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // x.. ..o .ox
    //      case  4129: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // o.. ..o .ox
    //      case  4130: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // ... ..o .ox
    //      case  4131: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. .ox
    //      case  4132: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // oxx xx. .ox
    //      case  4133: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // .xx xx. .ox
    //      case  4134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. .ox
    //      case  4135: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // oox xx. .ox
    //      case  4136: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // .ox xx. .ox
    //      case  4137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. .ox
    //      case  4138: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // o.x xx. .ox
    //      case  4139: Assert::IsTrue(v == PositionValue(+  395                         )); break;  // ..x xx. .ox
    //      case  4140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. .ox
    //      case  4141: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // oxo xx. .ox
    //      case  4142: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // .xo xx. .ox
    //      case  4143: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. .ox
    //      case  4144: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. .ox
    //      case  4145: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .oo xx. .ox
    //      case  4146: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. .ox
    //      case  4147: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // o.o xx. .ox
    //      case  4148: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // ..o xx. .ox
    //      case  4149: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. .ox
    //      case  4150: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // ox. xx. .ox
    //      case  4151: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // .x. xx. .ox
    //      case  4152: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. .ox
    //      case  4153: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // oo. xx. .ox
    //      case  4154: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .o. xx. .ox
    //      case  4155: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. .ox
    //      case  4156: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // o.. xx. .ox
    //      case  4157: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // ... xx. .ox
    //      case  4158: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. .ox
    //      case  4159: Assert::IsTrue(v == PositionValue(+  202                         )); break;  // oxx ox. .ox
    //      case  4160: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // .xx ox. .ox
    //      case  4161: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. .ox
    //      case  4162: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // oox ox. .ox
    //      case  4163: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // .ox ox. .ox
    //      case  4164: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. .ox
    //      case  4165: Assert::IsTrue(v == PositionValue(+    1                         )); break;  // o.x ox. .ox
    //      case  4166: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // ..x ox. .ox
    //      case  4167: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. .ox
    //      case  4168: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // oxo ox. .ox
    //      case  4169: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .xo ox. .ox
    //      case  4170: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo ox. .ox
    //      case  4171: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. .ox
    //      case  4172: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // .oo ox. .ox
    //      case  4173: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o ox. .ox
    //      case  4174: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // o.o ox. .ox
    //      case  4175: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // ..o ox. .ox
    //      case  4176: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. .ox
    //      case  4177: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // ox. ox. .ox
    //      case  4178: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .x. ox. .ox
    //      case  4179: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. ox. .ox
    //      case  4180: Assert::IsTrue(v == PositionValue(-  339                         )); break;  // oo. ox. .ox
    //      case  4181: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // .o. ox. .ox
    //      case  4182: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. ox. .ox
    //      case  4183: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // o.. ox. .ox
    //      case  4184: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // ... ox. .ox
    //      case  4185: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. .ox
    //      case  4186: Assert::IsTrue(v == PositionValue(+  412                         )); break;  // oxx .x. .ox
    //      case  4187: Assert::IsTrue(v == PositionValue(+  473                         )); break;  // .xx .x. .ox
    //      case  4188: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. .ox
    //      case  4189: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // oox .x. .ox
    //      case  4190: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // .ox .x. .ox
    //      case  4191: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. .ox
    //      case  4192: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // o.x .x. .ox
    //      case  4193: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // ..x .x. .ox
    //      case  4194: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. .ox
    //      case  4195: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // oxo .x. .ox
    //      case  4196: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .xo .x. .ox
    //      case  4197: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .x. .ox
    //      case  4198: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. .ox
    //      case  4199: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // .oo .x. .ox
    //      case  4200: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .x. .ox
    //      case  4201: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // o.o .x. .ox
    //      case  4202: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // ..o .x. .ox
    //      case  4203: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. .ox
    //      case  4204: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // ox. .x. .ox
    //      case  4205: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // .x. .x. .ox
    //      case  4206: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .x. .ox
    //      case  4207: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // oo. .x. .ox
    //      case  4208: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // .o. .x. .ox
    //      case  4209: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .x. .ox
    //      case  4210: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // o.. .x. .ox
    //      case  4211: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ... .x. .ox
    //      case  4212: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. .ox
    //      case  4213: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oxx xo. .ox
    //      case  4214: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .xx xo. .ox
    //      case  4215: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xo. .ox
    //      case  4216: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. .ox
    //      case  4217: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xo. .ox
    //      case  4218: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.x xo. .ox
    //      case  4219: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.x xo. .ox
    //      case  4220: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // ..x xo. .ox
    //      case  4221: Assert::IsTrue(v == PositionValue(+  118                         )); break;  // xxo xo. .ox
    //      case  4222: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // oxo xo. .ox
    //      case  4223: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .xo xo. .ox
    //      case  4224: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xo. .ox
    //      case  4225: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. .ox
    //      case  4226: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. .ox
    //      case  4227: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // x.o xo. .ox
    //      case  4228: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // o.o xo. .ox
    //      case  4229: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // ..o xo. .ox
    //      case  4230: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // xx. xo. .ox
    //      case  4231: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ox. xo. .ox
    //      case  4232: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .x. xo. .ox
    //      case  4233: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xo. .ox
    //      case  4234: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. .ox
    //      case  4235: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xo. .ox
    //      case  4236: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // x.. xo. .ox
    //      case  4237: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.. xo. .ox
    //      case  4238: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // ... xo. .ox
    //      case  4239: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. .ox
    //      case  4240: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // oxx oo. .ox
    //      case  4241: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .xx oo. .ox
    //      case  4242: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oo. .ox
    //      case  4243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. .ox
    //      case  4244: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oo. .ox
    //      case  4245: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // x.x oo. .ox
    //      case  4246: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // o.x oo. .ox
    //      case  4247: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // ..x oo. .ox
    //      case  4248: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // xxo oo. .ox
    //      case  4249: Assert::IsTrue(v == PositionValue(-  631                         )); break;  // oxo oo. .ox
    //      case  4250: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // .xo oo. .ox
    //      case  4251: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. .ox
    //      case  4252: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. .ox
    //      case  4253: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. .ox
    //      case  4254: Assert::IsTrue(v == PositionValue(-  434                         )); break;  // x.o oo. .ox
    //      case  4255: Assert::IsTrue(v == PositionValue(-  685                         )); break;  // o.o oo. .ox
    //      case  4256: Assert::IsTrue(v == PositionValue(-  477                         )); break;  // ..o oo. .ox
    //      case  4257: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xx. oo. .ox
    //      case  4258: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // ox. oo. .ox
    //      case  4259: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .x. oo. .ox
    //      case  4260: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oo. .ox
    //      case  4261: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. .ox
    //      case  4262: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oo. .ox
    //      case  4263: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // x.. oo. .ox
    //      case  4264: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // o.. oo. .ox
    //      case  4265: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // ... oo. .ox
    //      case  4266: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. .ox
    //      case  4267: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // oxx .o. .ox
    //      case  4268: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // .xx .o. .ox
    //      case  4269: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .o. .ox
    //      case  4270: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. .ox
    //      case  4271: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .o. .ox
    //      case  4272: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // x.x .o. .ox
    //      case  4273: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // o.x .o. .ox
    //      case  4274: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // ..x .o. .ox
    //      case  4275: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // xxo .o. .ox
    //      case  4276: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // oxo .o. .ox
    //      case  4277: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .xo .o. .ox
    //      case  4278: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. .ox
    //      case  4279: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. .ox
    //      case  4280: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. .ox
    //      case  4281: Assert::IsTrue(v == PositionValue(-  224                         )); break;  // x.o .o. .ox
    //      case  4282: Assert::IsTrue(v == PositionValue(-  388                         )); break;  // o.o .o. .ox
    //      case  4283: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // ..o .o. .ox
    //      case  4284: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // xx. .o. .ox
    //      case  4285: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // ox. .o. .ox
    //      case  4286: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // .x. .o. .ox
    //      case  4287: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .o. .ox
    //      case  4288: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. .ox
    //      case  4289: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .o. .ox
    //      case  4290: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // x.. .o. .ox
    //      case  4291: Assert::IsTrue(v == PositionValue(-  258                         )); break;  // o.. .o. .ox
    //      case  4292: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // ... .o. .ox
    //      case  4293: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. .ox
    //      case  4294: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // oxx x.. .ox
    //      case  4295: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // .xx x.. .ox
    //      case  4296: Assert::IsTrue(v == PositionValue(+  171                         )); break;  // xox x.. .ox
    //      case  4297: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // oox x.. .ox
    //      case  4298: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // .ox x.. .ox
    //      case  4299: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // x.x x.. .ox
    //      case  4300: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // o.x x.. .ox
    //      case  4301: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // ..x x.. .ox
    //      case  4302: Assert::IsTrue(v == PositionValue(+  331                         )); break;  // xxo x.. .ox
    //      case  4303: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // oxo x.. .ox
    //      case  4304: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .xo x.. .ox
    //      case  4305: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // xoo x.. .ox
    //      case  4306: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. .ox
    //      case  4307: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // .oo x.. .ox
    //      case  4308: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // x.o x.. .ox
    //      case  4309: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.o x.. .ox
    //      case  4310: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..o x.. .ox
    //      case  4311: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // xx. x.. .ox
    //      case  4312: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ox. x.. .ox
    //      case  4313: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // .x. x.. .ox
    //      case  4314: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // xo. x.. .ox
    //      case  4315: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // oo. x.. .ox
    //      case  4316: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .o. x.. .ox
    //      case  4317: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // x.. x.. .ox
    //      case  4318: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.. x.. .ox
    //      case  4319: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ... x.. .ox
    //      case  4320: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. .ox
    //      case  4321: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // oxx o.. .ox
    //      case  4322: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // .xx o.. .ox
    //      case  4323: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // xox o.. .ox
    //      case  4324: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // oox o.. .ox
    //      case  4325: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // .ox o.. .ox
    //      case  4326: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // x.x o.. .ox
    //      case  4327: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // o.x o.. .ox
    //      case  4328: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // ..x o.. .ox
    //      case  4329: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xxo o.. .ox
    //      case  4330: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oxo o.. .ox
    //      case  4331: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .xo o.. .ox
    //      case  4332: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // xoo o.. .ox
    //      case  4333: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. .ox
    //      case  4334: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // .oo o.. .ox
    //      case  4335: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // x.o o.. .ox
    //      case  4336: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // o.o o.. .ox
    //      case  4337: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ..o o.. .ox
    //      case  4338: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // xx. o.. .ox
    //      case  4339: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // ox. o.. .ox
    //      case  4340: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .x. o.. .ox
    //      case  4341: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // xo. o.. .ox
    //      case  4342: Assert::IsTrue(v == PositionValue(-  465                         )); break;  // oo. o.. .ox
    //      case  4343: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // .o. o.. .ox
    //      case  4344: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // x.. o.. .ox
    //      case  4345: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // o.. o.. .ox
    //      case  4346: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // ... o.. .ox
    //      case  4347: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... .ox
    //      case  4348: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // oxx ... .ox
    //      case  4349: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .xx ... .ox
    //      case  4350: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // xox ... .ox
    //      case  4351: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // oox ... .ox
    //      case  4352: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // .ox ... .ox
    //      case  4353: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // x.x ... .ox
    //      case  4354: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // o.x ... .ox
    //      case  4355: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // ..x ... .ox
    //      case  4356: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xxo ... .ox
    //      case  4357: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // oxo ... .ox
    //      case  4358: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xo ... .ox
    //      case  4359: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // xoo ... .ox
    //      case  4360: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... .ox
    //      case  4361: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // .oo ... .ox
    //      case  4362: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.o ... .ox
    //      case  4363: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // o.o ... .ox
    //      case  4364: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ..o ... .ox
    //      case  4365: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xx. ... .ox
    //      case  4366: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ox. ... .ox
    //      case  4367: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .x. ... .ox
    //      case  4368: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // xo. ... .ox
    //      case  4369: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // oo. ... .ox
    //      case  4370: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // .o. ... .ox
    //      case  4371: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.. ... .ox
    //      case  4372: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // o.. ... .ox
    //      case  4373: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ... ... .ox
    //      case  4374: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx x.x
    //      case  4375: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx x.x
    //      case  4376: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx x.x
    //      case  4377: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx x.x
    //      case  4378: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx x.x
    //      case  4379: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx x.x
    //      case  4380: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx x.x
    //      case  4381: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx x.x
    //      case  4382: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx x.x
    //      case  4383: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx x.x
    //      case  4384: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx x.x
    //      case  4385: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx x.x
    //      case  4386: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx x.x
    //      case  4387: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx x.x
    //      case  4388: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx x.x
    //      case  4389: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx x.x
    //      case  4390: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx x.x
    //      case  4391: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx x.x
    //      case  4392: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx x.x
    //      case  4393: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx x.x
    //      case  4394: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx x.x
    //      case  4395: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx x.x
    //      case  4396: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx x.x
    //      case  4397: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx x.x
    //      case  4398: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx x.x
    //      case  4399: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx x.x
    //      case  4400: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx x.x
    //      case  4401: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx x.x
    //      case  4402: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx x.x
    //      case  4403: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx x.x
    //      case  4404: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx x.x
    //      case  4405: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxx x.x
    //      case  4406: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx x.x
    //      case  4407: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx x.x
    //      case  4408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxx x.x
    //      case  4409: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx x.x
    //      case  4410: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx x.x
    //      case  4411: Assert::IsTrue(v == PositionValue(+  492                         )); break;  // oxo oxx x.x
    //      case  4412: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // .xo oxx x.x
    //      case  4413: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxx x.x
    //      case  4414: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx x.x
    //      case  4415: Assert::IsTrue(v == PositionValue(+  202                         )); break;  // .oo oxx x.x
    //      case  4416: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxx x.x
    //      case  4417: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // o.o oxx x.x
    //      case  4418: Assert::IsTrue(v == PositionValue(+  412                         )); break;  // ..o oxx x.x
    //      case  4419: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx x.x
    //      case  4420: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // ox. oxx x.x
    //      case  4421: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // .x. oxx x.x
    //      case  4422: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxx x.x
    //      case  4423: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // oo. oxx x.x
    //      case  4424: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // .o. oxx x.x
    //      case  4425: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxx x.x
    //      case  4426: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // o.. oxx x.x
    //      case  4427: Assert::IsTrue(v == PositionValue(+  473                         )); break;  // ... oxx x.x
    //      case  4428: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx x.x
    //      case  4429: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx x.x
    //      case  4430: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx x.x
    //      case  4431: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx x.x
    //      case  4432: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx x.x
    //      case  4433: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx x.x
    //      case  4434: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx x.x
    //      case  4435: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx x.x
    //      case  4436: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx x.x
    //      case  4437: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx x.x
    //      case  4438: Assert::IsTrue(v == PositionValue(+  624                         )); break;  // oxo .xx x.x
    //      case  4439: Assert::IsTrue(v == PositionValue(+  676                         )); break;  // .xo .xx x.x
    //      case  4440: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xx x.x
    //      case  4441: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx x.x
    //      case  4442: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // .oo .xx x.x
    //      case  4443: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xx x.x
    //      case  4444: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // o.o .xx x.x
    //      case  4445: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // ..o .xx x.x
    //      case  4446: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx x.x
    //      case  4447: Assert::IsTrue(v == PositionValue(+  685                         )); break;  // ox. .xx x.x
    //      case  4448: Assert::IsTrue(v == PositionValue(+  737                         )); break;  // .x. .xx x.x
    //      case  4449: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xx x.x
    //      case  4450: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // oo. .xx x.x
    //      case  4451: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // .o. .xx x.x
    //      case  4452: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xx x.x
    //      case  4453: Assert::IsTrue(v == PositionValue(+  475                         )); break;  // o.. .xx x.x
    //      case  4454: Assert::IsTrue(v == PositionValue(+  527                         )); break;  // ... .xx x.x
    //      case  4455: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox x.x
    //      case  4456: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xox x.x
    //      case  4457: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xox x.x
    //      case  4458: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox x.x
    //      case  4459: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xox x.x
    //      case  4460: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xox x.x
    //      case  4461: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox x.x
    //      case  4462: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xox x.x
    //      case  4463: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xox x.x
    //      case  4464: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xox x.x
    //      case  4465: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // oxo xox x.x
    //      case  4466: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // .xo xox x.x
    //      case  4467: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xox x.x
    //      case  4468: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox x.x
    //      case  4469: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // .oo xox x.x
    //      case  4470: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xox x.x
    //      case  4471: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // o.o xox x.x
    //      case  4472: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // ..o xox x.x
    //      case  4473: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xox x.x
    //      case  4474: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // ox. xox x.x
    //      case  4475: Assert::IsTrue(v == PositionValue(+  503                         )); break;  // .x. xox x.x
    //      case  4476: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xox x.x
    //      case  4477: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // oo. xox x.x
    //      case  4478: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .o. xox x.x
    //      case  4479: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xox x.x
    //      case  4480: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // o.. xox x.x
    //      case  4481: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // ... xox x.x
    //      case  4482: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox x.x
    //      case  4483: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oox x.x
    //      case  4484: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oox x.x
    //      case  4485: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oox x.x
    //      case  4486: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oox x.x
    //      case  4487: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oox x.x
    //      case  4488: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oox x.x
    //      case  4489: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oox x.x
    //      case  4490: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oox x.x
    //      case  4491: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // xxo oox x.x
    //      case  4492: Assert::IsTrue(v == PositionValue(-  159                         )); break;  // oxo oox x.x
    //      case  4493: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .xo oox x.x
    //      case  4494: Assert::IsTrue(v == PositionValue(-  328                         )); break;  // xoo oox x.x
    //      case  4495: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox x.x
    //      case  4496: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // .oo oox x.x
    //      case  4497: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // x.o oox x.x
    //      case  4498: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // o.o oox x.x
    //      case  4499: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // ..o oox x.x
    //      case  4500: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // xx. oox x.x
    //      case  4501: Assert::IsTrue(v == PositionValue(-   29                         )); break;  // ox. oox x.x
    //      case  4502: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .x. oox x.x
    //      case  4503: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // xo. oox x.x
    //      case  4504: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // oo. oox x.x
    //      case  4505: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .o. oox x.x
    //      case  4506: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // x.. oox x.x
    //      case  4507: Assert::IsTrue(v == PositionValue(-  152                         )); break;  // o.. oox x.x
    //      case  4508: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // ... oox x.x
    //      case  4509: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox x.x
    //      case  4510: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .ox x.x
    //      case  4511: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .ox x.x
    //      case  4512: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .ox x.x
    //      case  4513: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .ox x.x
    //      case  4514: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .ox x.x
    //      case  4515: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .ox x.x
    //      case  4516: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .ox x.x
    //      case  4517: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .ox x.x
    //      case  4518: Assert::IsTrue(v == PositionValue(+  284                         )); break;  // xxo .ox x.x
    //      case  4519: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // oxo .ox x.x
    //      case  4520: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .xo .ox x.x
    //      case  4521: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // xoo .ox x.x
    //      case  4522: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox x.x
    //      case  4523: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // .oo .ox x.x
    //      case  4524: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // x.o .ox x.x
    //      case  4525: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.o .ox x.x
    //      case  4526: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ..o .ox x.x
    //      case  4527: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // xx. .ox x.x
    //      case  4528: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // ox. .ox x.x
    //      case  4529: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .x. .ox x.x
    //      case  4530: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xo. .ox x.x
    //      case  4531: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oo. .ox x.x
    //      case  4532: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // .o. .ox x.x
    //      case  4533: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.. .ox x.x
    //      case  4534: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // o.. .ox x.x
    //      case  4535: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // ... .ox x.x
    //      case  4536: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x x.x
    //      case  4537: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx x.x x.x
    //      case  4538: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx x.x x.x
    //      case  4539: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x x.x
    //      case  4540: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox x.x x.x
    //      case  4541: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox x.x x.x
    //      case  4542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x x.x
    //      case  4543: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x x.x x.x
    //      case  4544: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x x.x x.x
    //      case  4545: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.x x.x
    //      case  4546: Assert::IsTrue(v == PositionValue(+  447                         )); break;  // oxo x.x x.x
    //      case  4547: Assert::IsTrue(v == PositionValue(+  499                         )); break;  // .xo x.x x.x
    //      case  4548: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.x x.x
    //      case  4549: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x x.x
    //      case  4550: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // .oo x.x x.x
    //      case  4551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.x x.x
    //      case  4552: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // o.o x.x x.x
    //      case  4553: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // ..o x.x x.x
    //      case  4554: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.x x.x
    //      case  4555: Assert::IsTrue(v == PositionValue(+  499                         )); break;  // ox. x.x x.x
    //      case  4556: Assert::IsTrue(v == PositionValue(+  551                         )); break;  // .x. x.x x.x
    //      case  4557: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.x x.x
    //      case  4558: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // oo. x.x x.x
    //      case  4559: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // .o. x.x x.x
    //      case  4560: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.x x.x
    //      case  4561: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // o.. x.x x.x
    //      case  4562: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // ... x.x x.x
    //      case  4563: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x x.x
    //      case  4564: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx o.x x.x
    //      case  4565: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx o.x x.x
    //      case  4566: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox o.x x.x
    //      case  4567: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox o.x x.x
    //      case  4568: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox o.x x.x
    //      case  4569: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x o.x x.x
    //      case  4570: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x o.x x.x
    //      case  4571: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x o.x x.x
    //      case  4572: Assert::IsTrue(v == PositionValue(+  365                         )); break;  // xxo o.x x.x
    //      case  4573: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oxo o.x x.x
    //      case  4574: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // .xo o.x x.x
    //      case  4575: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // xoo o.x x.x
    //      case  4576: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x x.x
    //      case  4577: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // .oo o.x x.x
    //      case  4578: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // x.o o.x x.x
    //      case  4579: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.o o.x x.x
    //      case  4580: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // ..o o.x x.x
    //      case  4581: Assert::IsTrue(v == PositionValue(+  426                         )); break;  // xx. o.x x.x
    //      case  4582: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // ox. o.x x.x
    //      case  4583: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // .x. o.x x.x
    //      case  4584: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // xo. o.x x.x
    //      case  4585: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // oo. o.x x.x
    //      case  4586: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // .o. o.x x.x
    //      case  4587: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // x.. o.x x.x
    //      case  4588: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // o.. o.x x.x
    //      case  4589: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // ... o.x x.x
    //      case  4590: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x x.x
    //      case  4591: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ..x x.x
    //      case  4592: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ..x x.x
    //      case  4593: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ..x x.x
    //      case  4594: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ..x x.x
    //      case  4595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ..x x.x
    //      case  4596: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ..x x.x
    //      case  4597: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ..x x.x
    //      case  4598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ..x x.x
    //      case  4599: Assert::IsTrue(v == PositionValue(+  410                         )); break;  // xxo ..x x.x
    //      case  4600: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // oxo ..x x.x
    //      case  4601: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // .xo ..x x.x
    //      case  4602: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // xoo ..x x.x
    //      case  4603: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x x.x
    //      case  4604: Assert::IsTrue(v == PositionValue(+   34                         )); break;  // .oo ..x x.x
    //      case  4605: Assert::IsTrue(v == PositionValue(+  209                         )); break;  // x.o ..x x.x
    //      case  4606: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // o.o ..x x.x
    //      case  4607: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // ..o ..x x.x
    //      case  4608: Assert::IsTrue(v == PositionValue(+  471                         )); break;  // xx. ..x x.x
    //      case  4609: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // ox. ..x x.x
    //      case  4610: Assert::IsTrue(v == PositionValue(+  341                         )); break;  // .x. ..x x.x
    //      case  4611: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // xo. ..x x.x
    //      case  4612: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // oo. ..x x.x
    //      case  4613: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .o. ..x x.x
    //      case  4614: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // x.. ..x x.x
    //      case  4615: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // o.. ..x x.x
    //      case  4616: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // ... ..x x.x
    //      case  4617: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo x.x
    //      case  4618: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo x.x
    //      case  4619: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo x.x
    //      case  4620: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo x.x
    //      case  4621: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxo x.x
    //      case  4622: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxo x.x
    //      case  4623: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo x.x
    //      case  4624: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxo x.x
    //      case  4625: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxo x.x
    //      case  4626: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo x.x
    //      case  4627: Assert::IsTrue(v == PositionValue(+  492                         )); break;  // oxo xxo x.x
    //      case  4628: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // .xo xxo x.x
    //      case  4629: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo x.x
    //      case  4630: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo x.x
    //      case  4631: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .oo xxo x.x
    //      case  4632: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo x.x
    //      case  4633: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // o.o xxo x.x
    //      case  4634: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // ..o xxo x.x
    //      case  4635: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo x.x
    //      case  4636: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // ox. xxo x.x
    //      case  4637: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // .x. xxo x.x
    //      case  4638: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo x.x
    //      case  4639: Assert::IsTrue(v == PositionValue(+  202                         )); break;  // oo. xxo x.x
    //      case  4640: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // .o. xxo x.x
    //      case  4641: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo x.x
    //      case  4642: Assert::IsTrue(v == PositionValue(+  412                         )); break;  // o.. xxo x.x
    //      case  4643: Assert::IsTrue(v == PositionValue(+  473                         )); break;  // ... xxo x.x
    //      case  4644: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo x.x
    //      case  4645: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxo x.x
    //      case  4646: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo x.x
    //      case  4647: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo x.x
    //      case  4648: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxo x.x
    //      case  4649: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxo x.x
    //      case  4650: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo x.x
    //      case  4651: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxo x.x
    //      case  4652: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxo x.x
    //      case  4653: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo x.x
    //      case  4654: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // oxo oxo x.x
    //      case  4655: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .xo oxo x.x
    //      case  4656: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxo x.x
    //      case  4657: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo x.x
    //      case  4658: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // .oo oxo x.x
    //      case  4659: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxo x.x
    //      case  4660: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // o.o oxo x.x
    //      case  4661: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // ..o oxo x.x
    //      case  4662: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo x.x
    //      case  4663: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // ox. oxo x.x
    //      case  4664: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // .x. oxo x.x
    //      case  4665: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxo x.x
    //      case  4666: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // oo. oxo x.x
    //      case  4667: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // .o. oxo x.x
    //      case  4668: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxo x.x
    //      case  4669: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // o.. oxo x.x
    //      case  4670: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // ... oxo x.x
    //      case  4671: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo x.x
    //      case  4672: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo x.x
    //      case  4673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo x.x
    //      case  4674: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo x.x
    //      case  4675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xo x.x
    //      case  4676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xo x.x
    //      case  4677: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo x.x
    //      case  4678: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xo x.x
    //      case  4679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xo x.x
    //      case  4680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo x.x
    //      case  4681: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // oxo .xo x.x
    //      case  4682: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // .xo .xo x.x
    //      case  4683: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xo x.x
    //      case  4684: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo x.x
    //      case  4685: Assert::IsTrue(v == PositionValue(-   77                         )); break;  // .oo .xo x.x
    //      case  4686: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xo x.x
    //      case  4687: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // o.o .xo x.x
    //      case  4688: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ..o .xo x.x
    //      case  4689: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo x.x
    //      case  4690: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // ox. .xo x.x
    //      case  4691: Assert::IsTrue(v == PositionValue(+  395                         )); break;  // .x. .xo x.x
    //      case  4692: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xo x.x
    //      case  4693: Assert::IsTrue(v == PositionValue(+    1                         )); break;  // oo. .xo x.x
    //      case  4694: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // .o. .xo x.x
    //      case  4695: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xo x.x
    //      case  4696: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // o.. .xo x.x
    //      case  4697: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // ... .xo x.x
    //      case  4698: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo x.x
    //      case  4699: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // oxx xoo x.x
    //      case  4700: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // .xx xoo x.x
    //      case  4701: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xoo x.x
    //      case  4702: Assert::IsTrue(v == PositionValue(-  328                         )); break;  // oox xoo x.x
    //      case  4703: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // .ox xoo x.x
    //      case  4704: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xoo x.x
    //      case  4705: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.x xoo x.x
    //      case  4706: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // ..x xoo x.x
    //      case  4707: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xoo x.x
    //      case  4708: Assert::IsTrue(v == PositionValue(-  159                         )); break;  // oxo xoo x.x
    //      case  4709: Assert::IsTrue(v == PositionValue(-   29                         )); break;  // .xo xoo x.x
    //      case  4710: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xoo x.x
    //      case  4711: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo x.x
    //      case  4712: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // .oo xoo x.x
    //      case  4713: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xoo x.x
    //      case  4714: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // o.o xoo x.x
    //      case  4715: Assert::IsTrue(v == PositionValue(-  152                         )); break;  // ..o xoo x.x
    //      case  4716: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xoo x.x
    //      case  4717: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ox. xoo x.x
    //      case  4718: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .x. xoo x.x
    //      case  4719: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xoo x.x
    //      case  4720: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // oo. xoo x.x
    //      case  4721: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .o. xoo x.x
    //      case  4722: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xoo x.x
    //      case  4723: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // o.. xoo x.x
    //      case  4724: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // ... xoo x.x
    //      case  4725: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo x.x
    //      case  4726: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo x.x
    //      case  4727: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo x.x
    //      case  4728: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo x.x
    //      case  4729: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo x.x
    //      case  4730: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo x.x
    //      case  4731: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo x.x
    //      case  4732: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo x.x
    //      case  4733: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo x.x
    //      case  4734: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo x.x
    //      case  4735: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo x.x
    //      case  4736: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo x.x
    //      case  4737: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo x.x
    //      case  4738: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo x.x
    //      case  4739: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo x.x
    //      case  4740: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo x.x
    //      case  4741: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo x.x
    //      case  4742: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo x.x
    //      case  4743: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo x.x
    //      case  4744: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo x.x
    //      case  4745: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo x.x
    //      case  4746: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo x.x
    //      case  4747: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo x.x
    //      case  4748: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo x.x
    //      case  4749: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo x.x
    //      case  4750: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo x.x
    //      case  4751: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo x.x
    //      case  4752: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo x.x
    //      case  4753: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // oxx .oo x.x
    //      case  4754: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .xx .oo x.x
    //      case  4755: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // xox .oo x.x
    //      case  4756: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // oox .oo x.x
    //      case  4757: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // .ox .oo x.x
    //      case  4758: Assert::IsTrue(v == PositionValue(-    8                         )); break;  // x.x .oo x.x
    //      case  4759: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // o.x .oo x.x
    //      case  4760: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // ..x .oo x.x
    //      case  4761: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // xxo .oo x.x
    //      case  4762: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // oxo .oo x.x
    //      case  4763: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // .xo .oo x.x
    //      case  4764: Assert::IsTrue(v == PositionValue(-  538                         )); break;  // xoo .oo x.x
    //      case  4765: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo x.x
    //      case  4766: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // .oo .oo x.x
    //      case  4767: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // x.o .oo x.x
    //      case  4768: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // o.o .oo x.x
    //      case  4769: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // ..o .oo x.x
    //      case  4770: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xx. .oo x.x
    //      case  4771: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ox. .oo x.x
    //      case  4772: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // .x. .oo x.x
    //      case  4773: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // xo. .oo x.x
    //      case  4774: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // oo. .oo x.x
    //      case  4775: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // .o. .oo x.x
    //      case  4776: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // x.. .oo x.x
    //      case  4777: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // o.. .oo x.x
    //      case  4778: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // ... .oo x.x
    //      case  4779: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o x.x
    //      case  4780: Assert::IsTrue(v == PositionValue(+  365                         )); break;  // oxx x.o x.x
    //      case  4781: Assert::IsTrue(v == PositionValue(+  426                         )); break;  // .xx x.o x.x
    //      case  4782: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.o x.x
    //      case  4783: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // oox x.o x.x
    //      case  4784: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // .ox x.o x.x
    //      case  4785: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.o x.x
    //      case  4786: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // o.x x.o x.x
    //      case  4787: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // ..x x.o x.x
    //      case  4788: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.o x.x
    //      case  4789: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oxo x.o x.x
    //      case  4790: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .xo x.o x.x
    //      case  4791: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.o x.x
    //      case  4792: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o x.x
    //      case  4793: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // .oo x.o x.x
    //      case  4794: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.o x.x
    //      case  4795: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.o x.o x.x
    //      case  4796: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // ..o x.o x.x
    //      case  4797: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.o x.x
    //      case  4798: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // ox. x.o x.x
    //      case  4799: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // .x. x.o x.x
    //      case  4800: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.o x.x
    //      case  4801: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // oo. x.o x.x
    //      case  4802: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // .o. x.o x.x
    //      case  4803: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.o x.x
    //      case  4804: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // o.. x.o x.x
    //      case  4805: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // ... x.o x.x
    //      case  4806: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o x.x
    //      case  4807: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // oxx o.o x.x
    //      case  4808: Assert::IsTrue(v == PositionValue(+  171                         )); break;  // .xx o.o x.x
    //      case  4809: Assert::IsTrue(v == PositionValue(-  119                         )); break;  // xox o.o x.x
    //      case  4810: Assert::IsTrue(v == PositionValue(-  361                         )); break;  // oox o.o x.x
    //      case  4811: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // .ox o.o x.x
    //      case  4812: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // x.x o.o x.x
    //      case  4813: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // o.x o.o x.x
    //      case  4814: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // ..x o.o x.x
    //      case  4815: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xxo o.o x.x
    //      case  4816: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oxo o.o x.x
    //      case  4817: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .xo o.o x.x
    //      case  4818: Assert::IsTrue(v == PositionValue(-  361                         )); break;  // xoo o.o x.x
    //      case  4819: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o x.x
    //      case  4820: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // .oo o.o x.x
    //      case  4821: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // x.o o.o x.x
    //      case  4822: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // o.o o.o x.x
    //      case  4823: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // ..o o.o x.x
    //      case  4824: Assert::IsTrue(v == PositionValue(+  171                         )); break;  // xx. o.o x.x
    //      case  4825: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // ox. o.o x.x
    //      case  4826: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // .x. o.o x.x
    //      case  4827: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // xo. o.o x.x
    //      case  4828: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // oo. o.o x.x
    //      case  4829: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // .o. o.o x.x
    //      case  4830: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // x.. o.o x.x
    //      case  4831: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // o.. o.o x.x
    //      case  4832: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // ... o.o x.x
    //      case  4833: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o x.x
    //      case  4834: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // oxx ..o x.x
    //      case  4835: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // .xx ..o x.x
    //      case  4836: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // xox ..o x.x
    //      case  4837: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // oox ..o x.x
    //      case  4838: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // .ox ..o x.x
    //      case  4839: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // x.x ..o x.x
    //      case  4840: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // o.x ..o x.x
    //      case  4841: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // ..x ..o x.x
    //      case  4842: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // xxo ..o x.x
    //      case  4843: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // oxo ..o x.x
    //      case  4844: Assert::IsTrue(v == PositionValue(-   35                         )); break;  // .xo ..o x.x
    //      case  4845: Assert::IsTrue(v == PositionValue(-  238                         )); break;  // xoo ..o x.x
    //      case  4846: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o x.x
    //      case  4847: Assert::IsTrue(v == PositionValue(-  290                         )); break;  // .oo ..o x.x
    //      case  4848: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // x.o ..o x.x
    //      case  4849: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.o ..o x.x
    //      case  4850: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // ..o ..o x.x
    //      case  4851: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // xx. ..o x.x
    //      case  4852: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ox. ..o x.x
    //      case  4853: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // .x. ..o x.x
    //      case  4854: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // xo. ..o x.x
    //      case  4855: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // oo. ..o x.x
    //      case  4856: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // .o. ..o x.x
    //      case  4857: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // x.. ..o x.x
    //      case  4858: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // o.. ..o x.x
    //      case  4859: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // ... ..o x.x
    //      case  4860: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. x.x
    //      case  4861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. x.x
    //      case  4862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. x.x
    //      case  4863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. x.x
    //      case  4864: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xx. x.x
    //      case  4865: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xx. x.x
    //      case  4866: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. x.x
    //      case  4867: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xx. x.x
    //      case  4868: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xx. x.x
    //      case  4869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. x.x
    //      case  4870: Assert::IsTrue(v == PositionValue(+  624                         )); break;  // oxo xx. x.x
    //      case  4871: Assert::IsTrue(v == PositionValue(+  685                         )); break;  // .xo xx. x.x
    //      case  4872: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. x.x
    //      case  4873: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. x.x
    //      case  4874: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // .oo xx. x.x
    //      case  4875: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. x.x
    //      case  4876: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // o.o xx. x.x
    //      case  4877: Assert::IsTrue(v == PositionValue(+  475                         )); break;  // ..o xx. x.x
    //      case  4878: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. x.x
    //      case  4879: Assert::IsTrue(v == PositionValue(+  676                         )); break;  // ox. xx. x.x
    //      case  4880: Assert::IsTrue(v == PositionValue(+  737                         )); break;  // .x. xx. x.x
    //      case  4881: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. x.x
    //      case  4882: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // oo. xx. x.x
    //      case  4883: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // .o. xx. x.x
    //      case  4884: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. x.x
    //      case  4885: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // o.. xx. x.x
    //      case  4886: Assert::IsTrue(v == PositionValue(+  527                         )); break;  // ... xx. x.x
    //      case  4887: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. x.x
    //      case  4888: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ox. x.x
    //      case  4889: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. x.x
    //      case  4890: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. x.x
    //      case  4891: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ox. x.x
    //      case  4892: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ox. x.x
    //      case  4893: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. x.x
    //      case  4894: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ox. x.x
    //      case  4895: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ox. x.x
    //      case  4896: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. x.x
    //      case  4897: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // oxo ox. x.x
    //      case  4898: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // .xo ox. x.x
    //      case  4899: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo ox. x.x
    //      case  4900: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. x.x
    //      case  4901: Assert::IsTrue(v == PositionValue(+    1                         )); break;  // .oo ox. x.x
    //      case  4902: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o ox. x.x
    //      case  4903: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // o.o ox. x.x
    //      case  4904: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // ..o ox. x.x
    //      case  4905: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. x.x
    //      case  4906: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // ox. ox. x.x
    //      case  4907: Assert::IsTrue(v == PositionValue(+  395                         )); break;  // .x. ox. x.x
    //      case  4908: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. ox. x.x
    //      case  4909: Assert::IsTrue(v == PositionValue(-   77                         )); break;  // oo. ox. x.x
    //      case  4910: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // .o. ox. x.x
    //      case  4911: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. ox. x.x
    //      case  4912: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // o.. ox. x.x
    //      case  4913: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // ... ox. x.x
    //      case  4914: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. x.x
    //      case  4915: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. x.x
    //      case  4916: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. x.x
    //      case  4917: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. x.x
    //      case  4918: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .x. x.x
    //      case  4919: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .x. x.x
    //      case  4920: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. x.x
    //      case  4921: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .x. x.x
    //      case  4922: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .x. x.x
    //      case  4923: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. x.x
    //      case  4924: Assert::IsTrue(v == PositionValue(+  336                         )); break;  // oxo .x. x.x
    //      case  4925: Assert::IsTrue(v == PositionValue(+  388                         )); break;  // .xo .x. x.x
    //      case  4926: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .x. x.x
    //      case  4927: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. x.x
    //      case  4928: Assert::IsTrue(v == PositionValue(+  124                         )); break;  // .oo .x. x.x
    //      case  4929: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .x. x.x
    //      case  4930: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // o.o .x. x.x
    //      case  4931: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // ..o .x. x.x
    //      case  4932: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. x.x
    //      case  4933: Assert::IsTrue(v == PositionValue(+  388                         )); break;  // ox. .x. x.x
    //      case  4934: Assert::IsTrue(v == PositionValue(+  440                         )); break;  // .x. .x. x.x
    //      case  4935: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .x. x.x
    //      case  4936: Assert::IsTrue(v == PositionValue(+  124                         )); break;  // oo. .x. x.x
    //      case  4937: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // .o. .x. x.x
    //      case  4938: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .x. x.x
    //      case  4939: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // o.. .x. x.x
    //      case  4940: Assert::IsTrue(v == PositionValue(+  308                         )); break;  // ... .x. x.x
    //      case  4941: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. x.x
    //      case  4942: Assert::IsTrue(v == PositionValue(+  284                         )); break;  // oxx xo. x.x
    //      case  4943: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // .xx xo. x.x
    //      case  4944: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xo. x.x
    //      case  4945: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // oox xo. x.x
    //      case  4946: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .ox xo. x.x
    //      case  4947: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xo. x.x
    //      case  4948: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // o.x xo. x.x
    //      case  4949: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ..x xo. x.x
    //      case  4950: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xo. x.x
    //      case  4951: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // oxo xo. x.x
    //      case  4952: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // .xo xo. x.x
    //      case  4953: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xo. x.x
    //      case  4954: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. x.x
    //      case  4955: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .oo xo. x.x
    //      case  4956: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xo. x.x
    //      case  4957: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.o xo. x.x
    //      case  4958: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // ..o xo. x.x
    //      case  4959: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xo. x.x
    //      case  4960: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ox. xo. x.x
    //      case  4961: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .x. xo. x.x
    //      case  4962: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xo. x.x
    //      case  4963: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // oo. xo. x.x
    //      case  4964: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // .o. xo. x.x
    //      case  4965: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xo. x.x
    //      case  4966: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // o.. xo. x.x
    //      case  4967: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // ... xo. x.x
    //      case  4968: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. x.x
    //      case  4969: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // oxx oo. x.x
    //      case  4970: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .xx oo. x.x
    //      case  4971: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // xox oo. x.x
    //      case  4972: Assert::IsTrue(v == PositionValue(-  538                         )); break;  // oox oo. x.x
    //      case  4973: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // .ox oo. x.x
    //      case  4974: Assert::IsTrue(v == PositionValue(-    8                         )); break;  // x.x oo. x.x
    //      case  4975: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // o.x oo. x.x
    //      case  4976: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // ..x oo. x.x
    //      case  4977: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // xxo oo. x.x
    //      case  4978: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // oxo oo. x.x
    //      case  4979: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .xo oo. x.x
    //      case  4980: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // xoo oo. x.x
    //      case  4981: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. x.x
    //      case  4982: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // .oo oo. x.x
    //      case  4983: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // x.o oo. x.x
    //      case  4984: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // o.o oo. x.x
    //      case  4985: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // ..o oo. x.x
    //      case  4986: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xx. oo. x.x
    //      case  4987: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // ox. oo. x.x
    //      case  4988: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // .x. oo. x.x
    //      case  4989: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // xo. oo. x.x
    //      case  4990: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // oo. oo. x.x
    //      case  4991: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // .o. oo. x.x
    //      case  4992: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // x.. oo. x.x
    //      case  4993: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // o.. oo. x.x
    //      case  4994: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // ... oo. x.x
    //      case  4995: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. x.x
    //      case  4996: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // oxx .o. x.x
    //      case  4997: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .xx .o. x.x
    //      case  4998: Assert::IsTrue(v == PositionValue(-    8                         )); break;  // xox .o. x.x
    //      case  4999: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oox .o. x.x
    //      case  5000: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // .ox .o. x.x
    //      case  5001: Assert::IsTrue(v == PositionValue(+  124                         )); break;  // x.x .o. x.x
    //      case  5002: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.x .o. x.x
    //      case  5003: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // ..x .o. x.x
    //      case  5004: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // xxo .o. x.x
    //      case  5005: Assert::IsTrue(v == PositionValue(-  159                         )); break;  // oxo .o. x.x
    //      case  5006: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // .xo .o. x.x
    //      case  5007: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xoo .o. x.x
    //      case  5008: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. x.x
    //      case  5009: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // .oo .o. x.x
    //      case  5010: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // x.o .o. x.x
    //      case  5011: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // o.o .o. x.x
    //      case  5012: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // ..o .o. x.x
    //      case  5013: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // xx. .o. x.x
    //      case  5014: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ox. .o. x.x
    //      case  5015: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // .x. .o. x.x
    //      case  5016: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // xo. .o. x.x
    //      case  5017: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // oo. .o. x.x
    //      case  5018: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // .o. .o. x.x
    //      case  5019: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.. .o. x.x
    //      case  5020: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // o.. .o. x.x
    //      case  5021: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // ... .o. x.x
    //      case  5022: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. x.x
    //      case  5023: Assert::IsTrue(v == PositionValue(+  410                         )); break;  // oxx x.. x.x
    //      case  5024: Assert::IsTrue(v == PositionValue(+  471                         )); break;  // .xx x.. x.x
    //      case  5025: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.. x.x
    //      case  5026: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // oox x.. x.x
    //      case  5027: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // .ox x.. x.x
    //      case  5028: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.. x.x
    //      case  5029: Assert::IsTrue(v == PositionValue(+  209                         )); break;  // o.x x.. x.x
    //      case  5030: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // ..x x.. x.x
    //      case  5031: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.. x.x
    //      case  5032: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // oxo x.. x.x
    //      case  5033: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // .xo x.. x.x
    //      case  5034: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.. x.x
    //      case  5035: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. x.x
    //      case  5036: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .oo x.. x.x
    //      case  5037: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.. x.x
    //      case  5038: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // o.o x.. x.x
    //      case  5039: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // ..o x.. x.x
    //      case  5040: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.. x.x
    //      case  5041: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // ox. x.. x.x
    //      case  5042: Assert::IsTrue(v == PositionValue(+  341                         )); break;  // .x. x.. x.x
    //      case  5043: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.. x.x
    //      case  5044: Assert::IsTrue(v == PositionValue(+   34                         )); break;  // oo. x.. x.x
    //      case  5045: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .o. x.. x.x
    //      case  5046: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.. x.x
    //      case  5047: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // o.. x.. x.x
    //      case  5048: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // ... x.. x.x
    //      case  5049: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. x.x
    //      case  5050: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // oxx o.. x.x
    //      case  5051: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // .xx o.. x.x
    //      case  5052: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // xox o.. x.x
    //      case  5053: Assert::IsTrue(v == PositionValue(-  238                         )); break;  // oox o.. x.x
    //      case  5054: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // .ox o.. x.x
    //      case  5055: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // x.x o.. x.x
    //      case  5056: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // o.x o.. x.x
    //      case  5057: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // ..x o.. x.x
    //      case  5058: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // xxo o.. x.x
    //      case  5059: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // oxo o.. x.x
    //      case  5060: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .xo o.. x.x
    //      case  5061: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // xoo o.. x.x
    //      case  5062: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. x.x
    //      case  5063: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // .oo o.. x.x
    //      case  5064: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.o o.. x.x
    //      case  5065: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.o o.. x.x
    //      case  5066: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ..o o.. x.x
    //      case  5067: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // xx. o.. x.x
    //      case  5068: Assert::IsTrue(v == PositionValue(-   35                         )); break;  // ox. o.. x.x
    //      case  5069: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // .x. o.. x.x
    //      case  5070: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // xo. o.. x.x
    //      case  5071: Assert::IsTrue(v == PositionValue(-  290                         )); break;  // oo. o.. x.x
    //      case  5072: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // .o. o.. x.x
    //      case  5073: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // x.. o.. x.x
    //      case  5074: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // o.. o.. x.x
    //      case  5075: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // ... o.. x.x
    //      case  5076: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... x.x
    //      case  5077: Assert::IsTrue(v == PositionValue(+  209                         )); break;  // oxx ... x.x
    //      case  5078: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // .xx ... x.x
    //      case  5079: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // xox ... x.x
    //      case  5080: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // oox ... x.x
    //      case  5081: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // .ox ... x.x
    //      case  5082: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // x.x ... x.x
    //      case  5083: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // o.x ... x.x
    //      case  5084: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // ..x ... x.x
    //      case  5085: Assert::IsTrue(v == PositionValue(+  209                         )); break;  // xxo ... x.x
    //      case  5086: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // oxo ... x.x
    //      case  5087: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // .xo ... x.x
    //      case  5088: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // xoo ... x.x
    //      case  5089: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... x.x
    //      case  5090: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // .oo ... x.x
    //      case  5091: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.o ... x.x
    //      case  5092: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.o ... x.x
    //      case  5093: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ..o ... x.x
    //      case  5094: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // xx. ... x.x
    //      case  5095: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // ox. ... x.x
    //      case  5096: Assert::IsTrue(v == PositionValue(+  131                         )); break;  // .x. ... x.x
    //      case  5097: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // xo. ... x.x
    //      case  5098: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // oo. ... x.x
    //      case  5099: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // .o. ... x.x
    //      case  5100: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // x.. ... x.x
    //      case  5101: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // o.. ... x.x
    //      case  5102: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // ... ... x.x
    //      case  5103: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx o.x
    //      case  5104: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx o.x
    //      case  5105: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx o.x
    //      case  5106: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx o.x
    //      case  5107: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx o.x
    //      case  5108: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx o.x
    //      case  5109: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx o.x
    //      case  5110: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx o.x
    //      case  5111: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx o.x
    //      case  5112: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx o.x
    //      case  5113: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx o.x
    //      case  5114: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx o.x
    //      case  5115: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx o.x
    //      case  5116: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx o.x
    //      case  5117: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx o.x
    //      case  5118: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx o.x
    //      case  5119: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx o.x
    //      case  5120: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx o.x
    //      case  5121: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx o.x
    //      case  5122: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx o.x
    //      case  5123: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx o.x
    //      case  5124: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx o.x
    //      case  5125: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx o.x
    //      case  5126: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx o.x
    //      case  5127: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx o.x
    //      case  5128: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx o.x
    //      case  5129: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx o.x
    //      case  5130: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx o.x
    //      case  5131: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxx o.x
    //      case  5132: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx o.x
    //      case  5133: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx o.x
    //      case  5134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxx o.x
    //      case  5135: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx o.x
    //      case  5136: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx o.x
    //      case  5137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxx o.x
    //      case  5138: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx o.x
    //      case  5139: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx o.x
    //      case  5140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxx o.x
    //      case  5141: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // .xo oxx o.x
    //      case  5142: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxx o.x
    //      case  5143: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx o.x
    //      case  5144: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // .oo oxx o.x
    //      case  5145: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxx o.x
    //      case  5146: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxx o.x
    //      case  5147: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // ..o oxx o.x
    //      case  5148: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx o.x
    //      case  5149: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxx o.x
    //      case  5150: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // .x. oxx o.x
    //      case  5151: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxx o.x
    //      case  5152: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxx o.x
    //      case  5153: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .o. oxx o.x
    //      case  5154: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxx o.x
    //      case  5155: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxx o.x
    //      case  5156: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ... oxx o.x
    //      case  5157: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx o.x
    //      case  5158: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx o.x
    //      case  5159: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx o.x
    //      case  5160: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx o.x
    //      case  5161: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx o.x
    //      case  5162: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx o.x
    //      case  5163: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx o.x
    //      case  5164: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx o.x
    //      case  5165: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx o.x
    //      case  5166: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx o.x
    //      case  5167: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // oxo .xx o.x
    //      case  5168: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // .xo .xx o.x
    //      case  5169: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xx o.x
    //      case  5170: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx o.x
    //      case  5171: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .oo .xx o.x
    //      case  5172: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xx o.x
    //      case  5173: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // o.o .xx o.x
    //      case  5174: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // ..o .xx o.x
    //      case  5175: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx o.x
    //      case  5176: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // ox. .xx o.x
    //      case  5177: Assert::IsTrue(v == PositionValue(+  564                         )); break;  // .x. .xx o.x
    //      case  5178: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xx o.x
    //      case  5179: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // oo. .xx o.x
    //      case  5180: Assert::IsTrue(v == PositionValue(+  309                         )); break;  // .o. .xx o.x
    //      case  5181: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xx o.x
    //      case  5182: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // o.. .xx o.x
    //      case  5183: Assert::IsTrue(v == PositionValue(+  354                         )); break;  // ... .xx o.x
    //      case  5184: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox o.x
    //      case  5185: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xox o.x
    //      case  5186: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xox o.x
    //      case  5187: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox o.x
    //      case  5188: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xox o.x
    //      case  5189: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xox o.x
    //      case  5190: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox o.x
    //      case  5191: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xox o.x
    //      case  5192: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xox o.x
    //      case  5193: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xox o.x
    //      case  5194: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox o.x
    //      case  5195: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xox o.x
    //      case  5196: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xox o.x
    //      case  5197: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox o.x
    //      case  5198: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox o.x
    //      case  5199: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xox o.x
    //      case  5200: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox o.x
    //      case  5201: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xox o.x
    //      case  5202: Assert::IsTrue(v == PositionValue(+  451                         )); break;  // xx. xox o.x
    //      case  5203: Assert::IsTrue(v == PositionValue(+  122                         )); break;  // ox. xox o.x
    //      case  5204: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // .x. xox o.x
    //      case  5205: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // xo. xox o.x
    //      case  5206: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // oo. xox o.x
    //      case  5207: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .o. xox o.x
    //      case  5208: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // x.. xox o.x
    //      case  5209: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // o.. xox o.x
    //      case  5210: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // ... xox o.x
    //      case  5211: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox o.x
    //      case  5212: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox o.x
    //      case  5213: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oox o.x
    //      case  5214: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oox o.x
    //      case  5215: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox o.x
    //      case  5216: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oox o.x
    //      case  5217: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oox o.x
    //      case  5218: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox o.x
    //      case  5219: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oox o.x
    //      case  5220: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oox o.x
    //      case  5221: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox o.x
    //      case  5222: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oox o.x
    //      case  5223: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox o.x
    //      case  5224: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox o.x
    //      case  5225: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox o.x
    //      case  5226: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oox o.x
    //      case  5227: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox o.x
    //      case  5228: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oox o.x
    //      case  5229: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // xx. oox o.x
    //      case  5230: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox o.x
    //      case  5231: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .x. oox o.x
    //      case  5232: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // xo. oox o.x
    //      case  5233: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox o.x
    //      case  5234: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // .o. oox o.x
    //      case  5235: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // x.. oox o.x
    //      case  5236: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox o.x
    //      case  5237: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ... oox o.x
    //      case  5238: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox o.x
    //      case  5239: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .ox o.x
    //      case  5240: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .ox o.x
    //      case  5241: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .ox o.x
    //      case  5242: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .ox o.x
    //      case  5243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .ox o.x
    //      case  5244: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .ox o.x
    //      case  5245: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .ox o.x
    //      case  5246: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .ox o.x
    //      case  5247: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .ox o.x
    //      case  5248: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox o.x
    //      case  5249: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .ox o.x
    //      case  5250: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox o.x
    //      case  5251: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox o.x
    //      case  5252: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox o.x
    //      case  5253: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .ox o.x
    //      case  5254: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox o.x
    //      case  5255: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .ox o.x
    //      case  5256: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xx. .ox o.x
    //      case  5257: Assert::IsTrue(v == PositionValue(-    1                         )); break;  // ox. .ox o.x
    //      case  5258: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // .x. .ox o.x
    //      case  5259: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // xo. .ox o.x
    //      case  5260: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // oo. .ox o.x
    //      case  5261: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // .o. .ox o.x
    //      case  5262: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.. .ox o.x
    //      case  5263: Assert::IsTrue(v == PositionValue(-  124                         )); break;  // o.. .ox o.x
    //      case  5264: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // ... .ox o.x
    //      case  5265: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x o.x
    //      case  5266: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx x.x o.x
    //      case  5267: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx x.x o.x
    //      case  5268: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x o.x
    //      case  5269: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox x.x o.x
    //      case  5270: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox x.x o.x
    //      case  5271: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x o.x
    //      case  5272: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x x.x o.x
    //      case  5273: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x x.x o.x
    //      case  5274: Assert::IsTrue(v == PositionValue(+  525                         )); break;  // xxo x.x o.x
    //      case  5275: Assert::IsTrue(v == PositionValue(+  283                         )); break;  // oxo x.x o.x
    //      case  5276: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // .xo x.x o.x
    //      case  5277: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xoo x.x o.x
    //      case  5278: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x o.x
    //      case  5279: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // .oo x.x o.x
    //      case  5280: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // x.o x.x o.x
    //      case  5281: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // o.o x.x o.x
    //      case  5282: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ..o x.x o.x
    //      case  5283: Assert::IsTrue(v == PositionValue(+  586                         )); break;  // xx. x.x o.x
    //      case  5284: Assert::IsTrue(v == PositionValue(+  335                         )); break;  // ox. x.x o.x
    //      case  5285: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // .x. x.x o.x
    //      case  5286: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xo. x.x o.x
    //      case  5287: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // oo. x.x o.x
    //      case  5288: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // .o. x.x o.x
    //      case  5289: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // x.. x.x o.x
    //      case  5290: Assert::IsTrue(v == PositionValue(+  134                         )); break;  // o.. x.x o.x
    //      case  5291: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // ... x.x o.x
    //      case  5292: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x o.x
    //      case  5293: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.x o.x
    //      case  5294: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx o.x o.x
    //      case  5295: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox o.x o.x
    //      case  5296: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.x o.x
    //      case  5297: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox o.x o.x
    //      case  5298: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x o.x o.x
    //      case  5299: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.x o.x
    //      case  5300: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x o.x o.x
    //      case  5301: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xxo o.x o.x
    //      case  5302: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.x o.x
    //      case  5303: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // .xo o.x o.x
    //      case  5304: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xoo o.x o.x
    //      case  5305: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x o.x
    //      case  5306: Assert::IsTrue(v == PositionValue(-  262                         )); break;  // .oo o.x o.x
    //      case  5307: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o o.x o.x
    //      case  5308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.x o.x
    //      case  5309: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // ..o o.x o.x
    //      case  5310: Assert::IsTrue(v == PositionValue(+  262                         )); break;  // xx. o.x o.x
    //      case  5311: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.x o.x
    //      case  5312: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .x. o.x o.x
    //      case  5313: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // xo. o.x o.x
    //      case  5314: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.x o.x
    //      case  5315: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .o. o.x o.x
    //      case  5316: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // x.. o.x o.x
    //      case  5317: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.x o.x
    //      case  5318: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... o.x o.x
    //      case  5319: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x o.x
    //      case  5320: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ..x o.x
    //      case  5321: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ..x o.x
    //      case  5322: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ..x o.x
    //      case  5323: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ..x o.x
    //      case  5324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ..x o.x
    //      case  5325: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ..x o.x
    //      case  5326: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ..x o.x
    //      case  5327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ..x o.x
    //      case  5328: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // xxo ..x o.x
    //      case  5329: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // oxo ..x o.x
    //      case  5330: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // .xo ..x o.x
    //      case  5331: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xoo ..x o.x
    //      case  5332: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x o.x
    //      case  5333: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // .oo ..x o.x
    //      case  5334: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.o ..x o.x
    //      case  5335: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // o.o ..x o.x
    //      case  5336: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ..o ..x o.x
    //      case  5337: Assert::IsTrue(v == PositionValue(+  385                         )); break;  // xx. ..x o.x
    //      case  5338: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // ox. ..x o.x
    //      case  5339: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // .x. ..x o.x
    //      case  5340: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xo. ..x o.x
    //      case  5341: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // oo. ..x o.x
    //      case  5342: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // .o. ..x o.x
    //      case  5343: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // x.. ..x o.x
    //      case  5344: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // o.. ..x o.x
    //      case  5345: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // ... ..x o.x
    //      case  5346: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo o.x
    //      case  5347: Assert::IsTrue(v == PositionValue(+  570                         )); break;  // oxx xxo o.x
    //      case  5348: Assert::IsTrue(v == PositionValue(+  631                         )); break;  // .xx xxo o.x
    //      case  5349: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo o.x
    //      case  5350: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // oox xxo o.x
    //      case  5351: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // .ox xxo o.x
    //      case  5352: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo o.x
    //      case  5353: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // o.x xxo o.x
    //      case  5354: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // ..x xxo o.x
    //      case  5355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo o.x
    //      case  5356: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // oxo xxo o.x
    //      case  5357: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // .xo xxo o.x
    //      case  5358: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo o.x
    //      case  5359: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo o.x
    //      case  5360: Assert::IsTrue(v == PositionValue(-  118                         )); break;  // .oo xxo o.x
    //      case  5361: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo o.x
    //      case  5362: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // o.o xxo o.x
    //      case  5363: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ..o xxo o.x
    //      case  5364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo o.x
    //      case  5365: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // ox. xxo o.x
    //      case  5366: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // .x. xxo o.x
    //      case  5367: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo o.x
    //      case  5368: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // oo. xxo o.x
    //      case  5369: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .o. xxo o.x
    //      case  5370: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo o.x
    //      case  5371: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // o.. xxo o.x
    //      case  5372: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ... xxo o.x
    //      case  5373: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo o.x
    //      case  5374: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxo o.x
    //      case  5375: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // .xx oxo o.x
    //      case  5376: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo o.x
    //      case  5377: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxo o.x
    //      case  5378: Assert::IsTrue(v == PositionValue(-  122                         )); break;  // .ox oxo o.x
    //      case  5379: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo o.x
    //      case  5380: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxo o.x
    //      case  5381: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // ..x oxo o.x
    //      case  5382: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo o.x
    //      case  5383: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo o.x
    //      case  5384: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // .xo oxo o.x
    //      case  5385: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxo o.x
    //      case  5386: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo o.x
    //      case  5387: Assert::IsTrue(v == PositionValue(-  451                         )); break;  // .oo oxo o.x
    //      case  5388: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxo o.x
    //      case  5389: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo o.x
    //      case  5390: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // ..o oxo o.x
    //      case  5391: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo o.x
    //      case  5392: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxo o.x
    //      case  5393: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .x. oxo o.x
    //      case  5394: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxo o.x
    //      case  5395: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxo o.x
    //      case  5396: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // .o. oxo o.x
    //      case  5397: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxo o.x
    //      case  5398: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxo o.x
    //      case  5399: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // ... oxo o.x
    //      case  5400: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo o.x
    //      case  5401: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // oxx .xo o.x
    //      case  5402: Assert::IsTrue(v == PositionValue(+  430                         )); break;  // .xx .xo o.x
    //      case  5403: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo o.x
    //      case  5404: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // oox .xo o.x
    //      case  5405: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // .ox .xo o.x
    //      case  5406: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo o.x
    //      case  5407: Assert::IsTrue(v == PositionValue(+  159                         )); break;  // o.x .xo o.x
    //      case  5408: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // ..x .xo o.x
    //      case  5409: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo o.x
    //      case  5410: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // oxo .xo o.x
    //      case  5411: Assert::IsTrue(v == PositionValue(+  101                         )); break;  // .xo .xo o.x
    //      case  5412: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xo o.x
    //      case  5413: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo o.x
    //      case  5414: Assert::IsTrue(v == PositionValue(-  241                         )); break;  // .oo .xo o.x
    //      case  5415: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xo o.x
    //      case  5416: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // o.o .xo o.x
    //      case  5417: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // ..o .xo o.x
    //      case  5418: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo o.x
    //      case  5419: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // ox. .xo o.x
    //      case  5420: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // .x. .xo o.x
    //      case  5421: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xo o.x
    //      case  5422: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // oo. .xo o.x
    //      case  5423: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // .o. .xo o.x
    //      case  5424: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xo o.x
    //      case  5425: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // o.. .xo o.x
    //      case  5426: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // ... .xo o.x
    //      case  5427: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo o.x
    //      case  5428: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // oxx xoo o.x
    //      case  5429: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // .xx xoo o.x
    //      case  5430: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xox xoo o.x
    //      case  5431: Assert::IsTrue(v == PositionValue(-  570                         )); break;  // oox xoo o.x
    //      case  5432: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // .ox xoo o.x
    //      case  5433: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // x.x xoo o.x
    //      case  5434: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // o.x xoo o.x
    //      case  5435: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // ..x xoo o.x
    //      case  5436: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xoo o.x
    //      case  5437: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo o.x
    //      case  5438: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo o.x
    //      case  5439: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo o.x
    //      case  5440: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo o.x
    //      case  5441: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo o.x
    //      case  5442: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xoo o.x
    //      case  5443: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo o.x
    //      case  5444: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo o.x
    //      case  5445: Assert::IsTrue(v == PositionValue(+  118                         )); break;  // xx. xoo o.x
    //      case  5446: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // ox. xoo o.x
    //      case  5447: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .x. xoo o.x
    //      case  5448: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // xo. xoo o.x
    //      case  5449: Assert::IsTrue(v == PositionValue(-  631                         )); break;  // oo. xoo o.x
    //      case  5450: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // .o. xoo o.x
    //      case  5451: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // x.. xoo o.x
    //      case  5452: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // o.. xoo o.x
    //      case  5453: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ... xoo o.x
    //      case  5454: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo o.x
    //      case  5455: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo o.x
    //      case  5456: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo o.x
    //      case  5457: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo o.x
    //      case  5458: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo o.x
    //      case  5459: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo o.x
    //      case  5460: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo o.x
    //      case  5461: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo o.x
    //      case  5462: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo o.x
    //      case  5463: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo o.x
    //      case  5464: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo o.x
    //      case  5465: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo o.x
    //      case  5466: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo o.x
    //      case  5467: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo o.x
    //      case  5468: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo o.x
    //      case  5469: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo o.x
    //      case  5470: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo o.x
    //      case  5471: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo o.x
    //      case  5472: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo o.x
    //      case  5473: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo o.x
    //      case  5474: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo o.x
    //      case  5475: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo o.x
    //      case  5476: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo o.x
    //      case  5477: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo o.x
    //      case  5478: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo o.x
    //      case  5479: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo o.x
    //      case  5480: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo o.x
    //      case  5481: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo o.x
    //      case  5482: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // oxx .oo o.x
    //      case  5483: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // .xx .oo o.x
    //      case  5484: Assert::IsTrue(v == PositionValue(-  382                         )); break;  // xox .oo o.x
    //      case  5485: Assert::IsTrue(v == PositionValue(-  624                         )); break;  // oox .oo o.x
    //      case  5486: Assert::IsTrue(v == PositionValue(-  425                         )); break;  // .ox .oo o.x
    //      case  5487: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // x.x .oo o.x
    //      case  5488: Assert::IsTrue(v == PositionValue(-  336                         )); break;  // o.x .oo o.x
    //      case  5489: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // ..x .oo o.x
    //      case  5490: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo o.x
    //      case  5491: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo o.x
    //      case  5492: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo o.x
    //      case  5493: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo o.x
    //      case  5494: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo o.x
    //      case  5495: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo o.x
    //      case  5496: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo o.x
    //      case  5497: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo o.x
    //      case  5498: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo o.x
    //      case  5499: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // xx. .oo o.x
    //      case  5500: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // ox. .oo o.x
    //      case  5501: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // .x. .oo o.x
    //      case  5502: Assert::IsTrue(v == PositionValue(-  434                         )); break;  // xo. .oo o.x
    //      case  5503: Assert::IsTrue(v == PositionValue(-  685                         )); break;  // oo. .oo o.x
    //      case  5504: Assert::IsTrue(v == PositionValue(-  477                         )); break;  // .o. .oo o.x
    //      case  5505: Assert::IsTrue(v == PositionValue(-  224                         )); break;  // x.. .oo o.x
    //      case  5506: Assert::IsTrue(v == PositionValue(-  388                         )); break;  // o.. .oo o.x
    //      case  5507: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // ... .oo o.x
    //      case  5508: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o o.x
    //      case  5509: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oxx x.o o.x
    //      case  5510: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .xx x.o o.x
    //      case  5511: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xox x.o o.x
    //      case  5512: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oox x.o o.x
    //      case  5513: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .ox x.o o.x
    //      case  5514: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // x.x x.o o.x
    //      case  5515: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x x.o o.x
    //      case  5516: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ..x x.o o.x
    //      case  5517: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xxo x.o o.x
    //      case  5518: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // oxo x.o o.x
    //      case  5519: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .xo x.o o.x
    //      case  5520: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xoo x.o o.x
    //      case  5521: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o o.x
    //      case  5522: Assert::IsTrue(v == PositionValue(-  331                         )); break;  // .oo x.o o.x
    //      case  5523: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o x.o o.x
    //      case  5524: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // o.o x.o o.x
    //      case  5525: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // ..o x.o o.x
    //      case  5526: Assert::IsTrue(v == PositionValue(+  331                         )); break;  // xx. x.o o.x
    //      case  5527: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ox. x.o o.x
    //      case  5528: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .x. x.o o.x
    //      case  5529: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xo. x.o o.x
    //      case  5530: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oo. x.o o.x
    //      case  5531: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .o. x.o o.x
    //      case  5532: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // x.. x.o o.x
    //      case  5533: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.. x.o o.x
    //      case  5534: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... x.o o.x
    //      case  5535: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o o.x
    //      case  5536: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.o o.x
    //      case  5537: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .xx o.o o.x
    //      case  5538: Assert::IsTrue(v == PositionValue(-  283                         )); break;  // xox o.o o.x
    //      case  5539: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.o o.x
    //      case  5540: Assert::IsTrue(v == PositionValue(-  335                         )); break;  // .ox o.o o.x
    //      case  5541: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // x.x o.o o.x
    //      case  5542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.o o.x
    //      case  5543: Assert::IsTrue(v == PositionValue(-  134                         )); break;  // ..x o.o o.x
    //      case  5544: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xxo o.o o.x
    //      case  5545: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o o.x
    //      case  5546: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .xo o.o o.x
    //      case  5547: Assert::IsTrue(v == PositionValue(-  525                         )); break;  // xoo o.o o.x
    //      case  5548: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o o.x
    //      case  5549: Assert::IsTrue(v == PositionValue(-  586                         )); break;  // .oo o.o o.x
    //      case  5550: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // x.o o.o o.x
    //      case  5551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o o.x
    //      case  5552: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // ..o o.o o.x
    //      case  5553: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // xx. o.o o.x
    //      case  5554: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.o o.x
    //      case  5555: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // .x. o.o o.x
    //      case  5556: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // xo. o.o o.x
    //      case  5557: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.o o.x
    //      case  5558: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // .o. o.o o.x
    //      case  5559: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // x.. o.o o.x
    //      case  5560: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.o o.x
    //      case  5561: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // ... o.o o.x
    //      case  5562: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o o.x
    //      case  5563: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // oxx ..o o.x
    //      case  5564: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .xx ..o o.x
    //      case  5565: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // xox ..o o.x
    //      case  5566: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // oox ..o o.x
    //      case  5567: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // .ox ..o o.x
    //      case  5568: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.x ..o o.x
    //      case  5569: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // o.x ..o o.x
    //      case  5570: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ..x ..o o.x
    //      case  5571: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xxo ..o o.x
    //      case  5572: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // oxo ..o o.x
    //      case  5573: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // .xo ..o o.x
    //      case  5574: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // xoo ..o o.x
    //      case  5575: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o o.x
    //      case  5576: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // .oo ..o o.x
    //      case  5577: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // x.o ..o o.x
    //      case  5578: Assert::IsTrue(v == PositionValue(-  209                         )); break;  // o.o ..o o.x
    //      case  5579: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // ..o ..o o.x
    //      case  5580: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xx. ..o o.x
    //      case  5581: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ox. ..o o.x
    //      case  5582: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .x. ..o o.x
    //      case  5583: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // xo. ..o o.x
    //      case  5584: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // oo. ..o o.x
    //      case  5585: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .o. ..o o.x
    //      case  5586: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.. ..o o.x
    //      case  5587: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // o.. ..o o.x
    //      case  5588: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ... ..o o.x
    //      case  5589: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. o.x
    //      case  5590: Assert::IsTrue(v == PositionValue(+  624                         )); break;  // oxx xx. o.x
    //      case  5591: Assert::IsTrue(v == PositionValue(+  685                         )); break;  // .xx xx. o.x
    //      case  5592: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. o.x
    //      case  5593: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // oox xx. o.x
    //      case  5594: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // .ox xx. o.x
    //      case  5595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. o.x
    //      case  5596: Assert::IsTrue(v == PositionValue(+  336                         )); break;  // o.x xx. o.x
    //      case  5597: Assert::IsTrue(v == PositionValue(+  388                         )); break;  // ..x xx. o.x
    //      case  5598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. o.x
    //      case  5599: Assert::IsTrue(v == PositionValue(+  382                         )); break;  // oxo xx. o.x
    //      case  5600: Assert::IsTrue(v == PositionValue(+  434                         )); break;  // .xo xx. o.x
    //      case  5601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. o.x
    //      case  5602: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. o.x
    //      case  5603: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // .oo xx. o.x
    //      case  5604: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. o.x
    //      case  5605: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // o.o xx. o.x
    //      case  5606: Assert::IsTrue(v == PositionValue(+  224                         )); break;  // ..o xx. o.x
    //      case  5607: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. o.x
    //      case  5608: Assert::IsTrue(v == PositionValue(+  425                         )); break;  // ox. xx. o.x
    //      case  5609: Assert::IsTrue(v == PositionValue(+  477                         )); break;  // .x. xx. o.x
    //      case  5610: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. o.x
    //      case  5611: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // oo. xx. o.x
    //      case  5612: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // .o. xx. o.x
    //      case  5613: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. o.x
    //      case  5614: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // o.. xx. o.x
    //      case  5615: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // ... xx. o.x
    //      case  5616: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. o.x
    //      case  5617: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ox. o.x
    //      case  5618: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // .xx ox. o.x
    //      case  5619: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. o.x
    //      case  5620: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ox. o.x
    //      case  5621: Assert::IsTrue(v == PositionValue(+    1                         )); break;  // .ox ox. o.x
    //      case  5622: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. o.x
    //      case  5623: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ox. o.x
    //      case  5624: Assert::IsTrue(v == PositionValue(+  124                         )); break;  // ..x ox. o.x
    //      case  5625: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. o.x
    //      case  5626: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ox. o.x
    //      case  5627: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // .xo ox. o.x
    //      case  5628: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo ox. o.x
    //      case  5629: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. o.x
    //      case  5630: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .oo ox. o.x
    //      case  5631: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o ox. o.x
    //      case  5632: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ox. o.x
    //      case  5633: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ..o ox. o.x
    //      case  5634: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. o.x
    //      case  5635: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ox. o.x
    //      case  5636: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // .x. ox. o.x
    //      case  5637: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. ox. o.x
    //      case  5638: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ox. o.x
    //      case  5639: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // .o. ox. o.x
    //      case  5640: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. ox. o.x
    //      case  5641: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ox. o.x
    //      case  5642: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // ... ox. o.x
    //      case  5643: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. o.x
    //      case  5644: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // oxx .x. o.x
    //      case  5645: Assert::IsTrue(v == PositionValue(+  475                         )); break;  // .xx .x. o.x
    //      case  5646: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. o.x
    //      case  5647: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // oox .x. o.x
    //      case  5648: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // .ox .x. o.x
    //      case  5649: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. o.x
    //      case  5650: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // o.x .x. o.x
    //      case  5651: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // ..x .x. o.x
    //      case  5652: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. o.x
    //      case  5653: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // oxo .x. o.x
    //      case  5654: Assert::IsTrue(v == PositionValue(+  224                         )); break;  // .xo .x. o.x
    //      case  5655: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .x. o.x
    //      case  5656: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. o.x
    //      case  5657: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .oo .x. o.x
    //      case  5658: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .x. o.x
    //      case  5659: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // o.o .x. o.x
    //      case  5660: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ..o .x. o.x
    //      case  5661: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. o.x
    //      case  5662: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // ox. .x. o.x
    //      case  5663: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // .x. .x. o.x
    //      case  5664: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .x. o.x
    //      case  5665: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // oo. .x. o.x
    //      case  5666: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .o. .x. o.x
    //      case  5667: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .x. o.x
    //      case  5668: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // o.. .x. o.x
    //      case  5669: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // ... .x. o.x
    //      case  5670: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. o.x
    //      case  5671: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // oxx xo. o.x
    //      case  5672: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // .xx xo. o.x
    //      case  5673: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // xox xo. o.x
    //      case  5674: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // oox xo. o.x
    //      case  5675: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .ox xo. o.x
    //      case  5676: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // x.x xo. o.x
    //      case  5677: Assert::IsTrue(v == PositionValue(-  159                         )); break;  // o.x xo. o.x
    //      case  5678: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ..x xo. o.x
    //      case  5679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xo. o.x
    //      case  5680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. o.x
    //      case  5681: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xo. o.x
    //      case  5682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xo. o.x
    //      case  5683: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. o.x
    //      case  5684: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. o.x
    //      case  5685: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xo. o.x
    //      case  5686: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. o.x
    //      case  5687: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xo. o.x
    //      case  5688: Assert::IsTrue(v == PositionValue(+  241                         )); break;  // xx. xo. o.x
    //      case  5689: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ox. xo. o.x
    //      case  5690: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // .x. xo. o.x
    //      case  5691: Assert::IsTrue(v == PositionValue(-  101                         )); break;  // xo. xo. o.x
    //      case  5692: Assert::IsTrue(v == PositionValue(-  430                         )); break;  // oo. xo. o.x
    //      case  5693: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // .o. xo. o.x
    //      case  5694: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // x.. xo. o.x
    //      case  5695: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // o.. xo. o.x
    //      case  5696: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // ... xo. o.x
    //      case  5697: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. o.x
    //      case  5698: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. o.x
    //      case  5699: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .xx oo. o.x
    //      case  5700: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // xox oo. o.x
    //      case  5701: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. o.x
    //      case  5702: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // .ox oo. o.x
    //      case  5703: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // x.x oo. o.x
    //      case  5704: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. o.x
    //      case  5705: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // ..x oo. o.x
    //      case  5706: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oo. o.x
    //      case  5707: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. o.x
    //      case  5708: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oo. o.x
    //      case  5709: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. o.x
    //      case  5710: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. o.x
    //      case  5711: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. o.x
    //      case  5712: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oo. o.x
    //      case  5713: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. o.x
    //      case  5714: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oo. o.x
    //      case  5715: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // xx. oo. o.x
    //      case  5716: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. o.x
    //      case  5717: Assert::IsTrue(v == PositionValue(-  309                         )); break;  // .x. oo. o.x
    //      case  5718: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // xo. oo. o.x
    //      case  5719: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. o.x
    //      case  5720: Assert::IsTrue(v == PositionValue(-  564                         )); break;  // .o. oo. o.x
    //      case  5721: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // x.. oo. o.x
    //      case  5722: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. o.x
    //      case  5723: Assert::IsTrue(v == PositionValue(-  354                         )); break;  // ... oo. o.x
    //      case  5724: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. o.x
    //      case  5725: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // oxx .o. o.x
    //      case  5726: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // .xx .o. o.x
    //      case  5727: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // xox .o. o.x
    //      case  5728: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // oox .o. o.x
    //      case  5729: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // .ox .o. o.x
    //      case  5730: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // x.x .o. o.x
    //      case  5731: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // o.x .o. o.x
    //      case  5732: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // ..x .o. o.x
    //      case  5733: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .o. o.x
    //      case  5734: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. o.x
    //      case  5735: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .o. o.x
    //      case  5736: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. o.x
    //      case  5737: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. o.x
    //      case  5738: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. o.x
    //      case  5739: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .o. o.x
    //      case  5740: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. o.x
    //      case  5741: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .o. o.x
    //      case  5742: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xx. .o. o.x
    //      case  5743: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // ox. .o. o.x
    //      case  5744: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .x. .o. o.x
    //      case  5745: Assert::IsTrue(v == PositionValue(-  224                         )); break;  // xo. .o. o.x
    //      case  5746: Assert::IsTrue(v == PositionValue(-  475                         )); break;  // oo. .o. o.x
    //      case  5747: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // .o. .o. o.x
    //      case  5748: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // x.. .o. o.x
    //      case  5749: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // o.. .o. o.x
    //      case  5750: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // ... .o. o.x
    //      case  5751: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. o.x
    //      case  5752: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // oxx x.. o.x
    //      case  5753: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // .xx x.. o.x
    //      case  5754: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // xox x.. o.x
    //      case  5755: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // oox x.. o.x
    //      case  5756: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .ox x.. o.x
    //      case  5757: Assert::IsTrue(v == PositionValue(+  209                         )); break;  // x.x x.. o.x
    //      case  5758: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // o.x x.. o.x
    //      case  5759: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // ..x x.. o.x
    //      case  5760: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // xxo x.. o.x
    //      case  5761: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // oxo x.. o.x
    //      case  5762: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // .xo x.. o.x
    //      case  5763: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xoo x.. o.x
    //      case  5764: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. o.x
    //      case  5765: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .oo x.. o.x
    //      case  5766: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.o x.. o.x
    //      case  5767: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.o x.. o.x
    //      case  5768: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ..o x.. o.x
    //      case  5769: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // xx. x.. o.x
    //      case  5770: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ox. x.. o.x
    //      case  5771: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .x. x.. o.x
    //      case  5772: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xo. x.. o.x
    //      case  5773: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oo. x.. o.x
    //      case  5774: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .o. x.. o.x
    //      case  5775: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // x.. x.. o.x
    //      case  5776: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.. x.. o.x
    //      case  5777: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ... x.. o.x
    //      case  5778: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. o.x
    //      case  5779: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.. o.x
    //      case  5780: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .xx o.. o.x
    //      case  5781: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // xox o.. o.x
    //      case  5782: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.. o.x
    //      case  5783: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // .ox o.. o.x
    //      case  5784: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // x.x o.. o.x
    //      case  5785: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.. o.x
    //      case  5786: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // ..x o.. o.x
    //      case  5787: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xxo o.. o.x
    //      case  5788: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.. o.x
    //      case  5789: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .xo o.. o.x
    //      case  5790: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // xoo o.. o.x
    //      case  5791: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. o.x
    //      case  5792: Assert::IsTrue(v == PositionValue(-  385                         )); break;  // .oo o.. o.x
    //      case  5793: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // x.o o.. o.x
    //      case  5794: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.. o.x
    //      case  5795: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // ..o o.. o.x
    //      case  5796: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // xx. o.. o.x
    //      case  5797: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.. o.x
    //      case  5798: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // .x. o.. o.x
    //      case  5799: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // xo. o.. o.x
    //      case  5800: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.. o.x
    //      case  5801: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // .o. o.. o.x
    //      case  5802: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // x.. o.. o.x
    //      case  5803: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.. o.x
    //      case  5804: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // ... o.. o.x
    //      case  5805: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... o.x
    //      case  5806: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oxx ... o.x
    //      case  5807: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .xx ... o.x
    //      case  5808: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xox ... o.x
    //      case  5809: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // oox ... o.x
    //      case  5810: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .ox ... o.x
    //      case  5811: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.x ... o.x
    //      case  5812: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x ... o.x
    //      case  5813: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ..x ... o.x
    //      case  5814: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xxo ... o.x
    //      case  5815: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // oxo ... o.x
    //      case  5816: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .xo ... o.x
    //      case  5817: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xoo ... o.x
    //      case  5818: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... o.x
    //      case  5819: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .oo ... o.x
    //      case  5820: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o ... o.x
    //      case  5821: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.o ... o.x
    //      case  5822: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ..o ... o.x
    //      case  5823: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // xx. ... o.x
    //      case  5824: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ox. ... o.x
    //      case  5825: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .x. ... o.x
    //      case  5826: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xo. ... o.x
    //      case  5827: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // oo. ... o.x
    //      case  5828: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .o. ... o.x
    //      case  5829: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.. ... o.x
    //      case  5830: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.. ... o.x
    //      case  5831: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... ... o.x
    //      case  5832: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx ..x
    //      case  5833: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx ..x
    //      case  5834: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx ..x
    //      case  5835: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx ..x
    //      case  5836: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx ..x
    //      case  5837: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx ..x
    //      case  5838: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx ..x
    //      case  5839: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx ..x
    //      case  5840: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx ..x
    //      case  5841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx ..x
    //      case  5842: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx ..x
    //      case  5843: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx ..x
    //      case  5844: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx ..x
    //      case  5845: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx ..x
    //      case  5846: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx ..x
    //      case  5847: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx ..x
    //      case  5848: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx ..x
    //      case  5849: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx ..x
    //      case  5850: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx ..x
    //      case  5851: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx ..x
    //      case  5852: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx ..x
    //      case  5853: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx ..x
    //      case  5854: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx ..x
    //      case  5855: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx ..x
    //      case  5856: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx ..x
    //      case  5857: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx ..x
    //      case  5858: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx ..x
    //      case  5859: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx ..x
    //      case  5860: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx ..x
    //      case  5861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx ..x
    //      case  5862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx ..x
    //      case  5863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxx ..x
    //      case  5864: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx ..x
    //      case  5865: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx ..x
    //      case  5866: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxx ..x
    //      case  5867: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx ..x
    //      case  5868: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx ..x
    //      case  5869: Assert::IsTrue(v == PositionValue(+  362                         )); break;  // oxo oxx ..x
    //      case  5870: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .xo oxx ..x
    //      case  5871: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxx ..x
    //      case  5872: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx ..x
    //      case  5873: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .oo oxx ..x
    //      case  5874: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxx ..x
    //      case  5875: Assert::IsTrue(v == PositionValue(+  152                         )); break;  // o.o oxx ..x
    //      case  5876: Assert::IsTrue(v == PositionValue(+  291                         )); break;  // ..o oxx ..x
    //      case  5877: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx ..x
    //      case  5878: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // ox. oxx ..x
    //      case  5879: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // .x. oxx ..x
    //      case  5880: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxx ..x
    //      case  5881: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // oo. oxx ..x
    //      case  5882: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .o. oxx ..x
    //      case  5883: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxx ..x
    //      case  5884: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // o.. oxx ..x
    //      case  5885: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // ... oxx ..x
    //      case  5886: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx ..x
    //      case  5887: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx ..x
    //      case  5888: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx ..x
    //      case  5889: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx ..x
    //      case  5890: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx ..x
    //      case  5891: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx ..x
    //      case  5892: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx ..x
    //      case  5893: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx ..x
    //      case  5894: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx ..x
    //      case  5895: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx ..x
    //      case  5896: Assert::IsTrue(v == PositionValue(+  503                         )); break;  // oxo .xx ..x
    //      case  5897: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // .xo .xx ..x
    //      case  5898: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xx ..x
    //      case  5899: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx ..x
    //      case  5900: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .oo .xx ..x
    //      case  5901: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xx ..x
    //      case  5902: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // o.o .xx ..x
    //      case  5903: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // ..o .xx ..x
    //      case  5904: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx ..x
    //      case  5905: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // ox. .xx ..x
    //      case  5906: Assert::IsTrue(v == PositionValue(+  607                         )); break;  // .x. .xx ..x
    //      case  5907: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xx ..x
    //      case  5908: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // oo. .xx ..x
    //      case  5909: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // .o. .xx ..x
    //      case  5910: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xx ..x
    //      case  5911: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // o.. .xx ..x
    //      case  5912: Assert::IsTrue(v == PositionValue(+  397                         )); break;  // ... .xx ..x
    //      case  5913: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox ..x
    //      case  5914: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xox ..x
    //      case  5915: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xox ..x
    //      case  5916: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox ..x
    //      case  5917: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xox ..x
    //      case  5918: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xox ..x
    //      case  5919: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox ..x
    //      case  5920: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xox ..x
    //      case  5921: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xox ..x
    //      case  5922: Assert::IsTrue(v == PositionValue(+  442                         )); break;  // xxo xox ..x
    //      case  5923: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // oxo xox ..x
    //      case  5924: Assert::IsTrue(v == PositionValue(+  234                         )); break;  // .xo xox ..x
    //      case  5925: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // xoo xox ..x
    //      case  5926: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox ..x
    //      case  5927: Assert::IsTrue(v == PositionValue(-  186                         )); break;  // .oo xox ..x
    //      case  5928: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // x.o xox ..x
    //      case  5929: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // o.o xox ..x
    //      case  5930: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // ..o xox ..x
    //      case  5931: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // xx. xox ..x
    //      case  5932: Assert::IsTrue(v == PositionValue(+  252                         )); break;  // ox. xox ..x
    //      case  5933: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // .x. xox ..x
    //      case  5934: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xo. xox ..x
    //      case  5935: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // oo. xox ..x
    //      case  5936: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .o. xox ..x
    //      case  5937: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // x.. xox ..x
    //      case  5938: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // o.. xox ..x
    //      case  5939: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // ... xox ..x
    //      case  5940: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox ..x
    //      case  5941: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oox ..x
    //      case  5942: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oox ..x
    //      case  5943: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oox ..x
    //      case  5944: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oox ..x
    //      case  5945: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oox ..x
    //      case  5946: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oox ..x
    //      case  5947: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oox ..x
    //      case  5948: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oox ..x
    //      case  5949: Assert::IsTrue(v == PositionValue(+  109                         )); break;  // xxo oox ..x
    //      case  5950: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // oxo oox ..x
    //      case  5951: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // .xo oox ..x
    //      case  5952: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // xoo oox ..x
    //      case  5953: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox ..x
    //      case  5954: Assert::IsTrue(v == PositionValue(-  432                         )); break;  // .oo oox ..x
    //      case  5955: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // x.o oox ..x
    //      case  5956: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // o.o oox ..x
    //      case  5957: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // ..o oox ..x
    //      case  5958: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // xx. oox ..x
    //      case  5959: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ox. oox ..x
    //      case  5960: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // .x. oox ..x
    //      case  5961: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xo. oox ..x
    //      case  5962: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // oo. oox ..x
    //      case  5963: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // .o. oox ..x
    //      case  5964: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // x.. oox ..x
    //      case  5965: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // o.. oox ..x
    //      case  5966: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // ... oox ..x
    //      case  5967: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox ..x
    //      case  5968: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .ox ..x
    //      case  5969: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .ox ..x
    //      case  5970: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .ox ..x
    //      case  5971: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .ox ..x
    //      case  5972: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .ox ..x
    //      case  5973: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .ox ..x
    //      case  5974: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .ox ..x
    //      case  5975: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .ox ..x
    //      case  5976: Assert::IsTrue(v == PositionValue(+  232                         )); break;  // xxo .ox ..x
    //      case  5977: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // oxo .ox ..x
    //      case  5978: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // .xo .ox ..x
    //      case  5979: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // xoo .ox ..x
    //      case  5980: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox ..x
    //      case  5981: Assert::IsTrue(v == PositionValue(-  231                         )); break;  // .oo .ox ..x
    //      case  5982: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // x.o .ox ..x
    //      case  5983: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // o.o .ox ..x
    //      case  5984: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // ..o .ox ..x
    //      case  5985: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // xx. .ox ..x
    //      case  5986: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // ox. .ox ..x
    //      case  5987: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .x. .ox ..x
    //      case  5988: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // xo. .ox ..x
    //      case  5989: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // oo. .ox ..x
    //      case  5990: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // .o. .ox ..x
    //      case  5991: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.. .ox ..x
    //      case  5992: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // o.. .ox ..x
    //      case  5993: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // ... .ox ..x
    //      case  5994: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x ..x
    //      case  5995: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx x.x ..x
    //      case  5996: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx x.x ..x
    //      case  5997: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x ..x
    //      case  5998: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox x.x ..x
    //      case  5999: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox x.x ..x
    //      case  6000: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x ..x
    //      case  6001: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x x.x ..x
    //      case  6002: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x x.x ..x
    //      case  6003: Assert::IsTrue(v == PositionValue(+  577                         )); break;  // xxo x.x ..x
    //      case  6004: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // oxo x.x ..x
    //      case  6005: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // .xo x.x ..x
    //      case  6006: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // xoo x.x ..x
    //      case  6007: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x ..x
    //      case  6008: Assert::IsTrue(v == PositionValue(+   36                         )); break;  // .oo x.x ..x
    //      case  6009: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // x.o x.x ..x
    //      case  6010: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // o.o x.x ..x
    //      case  6011: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // ..o x.x ..x
    //      case  6012: Assert::IsTrue(v == PositionValue(+  638                         )); break;  // xx. x.x ..x
    //      case  6013: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // ox. x.x ..x
    //      case  6014: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .x. x.x ..x
    //      case  6015: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // xo. x.x ..x
    //      case  6016: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // oo. x.x ..x
    //      case  6017: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .o. x.x ..x
    //      case  6018: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // x.. x.x ..x
    //      case  6019: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // o.. x.x ..x
    //      case  6020: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // ... x.x ..x
    //      case  6021: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x ..x
    //      case  6022: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx o.x ..x
    //      case  6023: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx o.x ..x
    //      case  6024: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox o.x ..x
    //      case  6025: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox o.x ..x
    //      case  6026: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox o.x ..x
    //      case  6027: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x o.x ..x
    //      case  6028: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x o.x ..x
    //      case  6029: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x o.x ..x
    //      case  6030: Assert::IsTrue(v == PositionValue(+  322                         )); break;  // xxo o.x ..x
    //      case  6031: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // oxo o.x ..x
    //      case  6032: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // .xo o.x ..x
    //      case  6033: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xoo o.x ..x
    //      case  6034: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x ..x
    //      case  6035: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // .oo o.x ..x
    //      case  6036: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // x.o o.x ..x
    //      case  6037: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // o.o o.x ..x
    //      case  6038: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // ..o o.x ..x
    //      case  6039: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // xx. o.x ..x
    //      case  6040: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ox. o.x ..x
    //      case  6041: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .x. o.x ..x
    //      case  6042: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // xo. o.x ..x
    //      case  6043: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // oo. o.x ..x
    //      case  6044: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // .o. o.x ..x
    //      case  6045: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // x.. o.x ..x
    //      case  6046: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.. o.x ..x
    //      case  6047: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // ... o.x ..x
    //      case  6048: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x ..x
    //      case  6049: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ..x ..x
    //      case  6050: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ..x ..x
    //      case  6051: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ..x ..x
    //      case  6052: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ..x ..x
    //      case  6053: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ..x ..x
    //      case  6054: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ..x ..x
    //      case  6055: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ..x ..x
    //      case  6056: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ..x ..x
    //      case  6057: Assert::IsTrue(v == PositionValue(+  367                         )); break;  // xxo ..x ..x
    //      case  6058: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // oxo ..x ..x
    //      case  6059: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // .xo ..x ..x
    //      case  6060: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // xoo ..x ..x
    //      case  6061: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x ..x
    //      case  6062: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // .oo ..x ..x
    //      case  6063: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // x.o ..x ..x
    //      case  6064: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // o.o ..x ..x
    //      case  6065: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ..o ..x ..x
    //      case  6066: Assert::IsTrue(v == PositionValue(+  428                         )); break;  // xx. ..x ..x
    //      case  6067: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // ox. ..x ..x
    //      case  6068: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // .x. ..x ..x
    //      case  6069: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xo. ..x ..x
    //      case  6070: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oo. ..x ..x
    //      case  6071: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .o. ..x ..x
    //      case  6072: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // x.. ..x ..x
    //      case  6073: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // o.. ..x ..x
    //      case  6074: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // ... ..x ..x
    //      case  6075: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo ..x
    //      case  6076: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // oxx xxo ..x
    //      case  6077: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // .xx xxo ..x
    //      case  6078: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo ..x
    //      case  6079: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // oox xxo ..x
    //      case  6080: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // .ox xxo ..x
    //      case  6081: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo ..x
    //      case  6082: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // o.x xxo ..x
    //      case  6083: Assert::IsTrue(v == PositionValue(+  386                         )); break;  // ..x xxo ..x
    //      case  6084: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo ..x
    //      case  6085: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // oxo xxo ..x
    //      case  6086: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // .xo xxo ..x
    //      case  6087: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo ..x
    //      case  6088: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo ..x
    //      case  6089: Assert::IsTrue(v == PositionValue(-   75                         )); break;  // .oo xxo ..x
    //      case  6090: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo ..x
    //      case  6091: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // o.o xxo ..x
    //      case  6092: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // ..o xxo ..x
    //      case  6093: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo ..x
    //      case  6094: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // ox. xxo ..x
    //      case  6095: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // .x. xxo ..x
    //      case  6096: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo ..x
    //      case  6097: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // oo. xxo ..x
    //      case  6098: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .o. xxo ..x
    //      case  6099: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo ..x
    //      case  6100: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // o.. xxo ..x
    //      case  6101: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // ... xxo ..x
    //      case  6102: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo ..x
    //      case  6103: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // oxx oxo ..x
    //      case  6104: Assert::IsTrue(v == PositionValue(+  437                         )); break;  // .xx oxo ..x
    //      case  6105: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo ..x
    //      case  6106: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // oox oxo ..x
    //      case  6107: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // .ox oxo ..x
    //      case  6108: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo ..x
    //      case  6109: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // o.x oxo ..x
    //      case  6110: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // ..x oxo ..x
    //      case  6111: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo ..x
    //      case  6112: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oxo oxo ..x
    //      case  6113: Assert::IsTrue(v == PositionValue(+   99                         )); break;  // .xo oxo ..x
    //      case  6114: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo oxo ..x
    //      case  6115: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo ..x
    //      case  6116: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // .oo oxo ..x
    //      case  6117: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o oxo ..x
    //      case  6118: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // o.o oxo ..x
    //      case  6119: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // ..o oxo ..x
    //      case  6120: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo ..x
    //      case  6121: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // ox. oxo ..x
    //      case  6122: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .x. oxo ..x
    //      case  6123: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. oxo ..x
    //      case  6124: Assert::IsTrue(v == PositionValue(-  339                         )); break;  // oo. oxo ..x
    //      case  6125: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // .o. oxo ..x
    //      case  6126: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. oxo ..x
    //      case  6127: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // o.. oxo ..x
    //      case  6128: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // ... oxo ..x
    //      case  6129: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo ..x
    //      case  6130: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // oxx .xo ..x
    //      case  6131: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // .xx .xo ..x
    //      case  6132: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo ..x
    //      case  6133: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // oox .xo ..x
    //      case  6134: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // .ox .xo ..x
    //      case  6135: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo ..x
    //      case  6136: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // o.x .xo ..x
    //      case  6137: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // ..x .xo ..x
    //      case  6138: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo ..x
    //      case  6139: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // oxo .xo ..x
    //      case  6140: Assert::IsTrue(v == PositionValue(+  144                         )); break;  // .xo .xo ..x
    //      case  6141: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .xo ..x
    //      case  6142: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo ..x
    //      case  6143: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // .oo .xo ..x
    //      case  6144: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .xo ..x
    //      case  6145: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.o .xo ..x
    //      case  6146: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // ..o .xo ..x
    //      case  6147: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo ..x
    //      case  6148: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ox. .xo ..x
    //      case  6149: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // .x. .xo ..x
    //      case  6150: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .xo ..x
    //      case  6151: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // oo. .xo ..x
    //      case  6152: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .o. .xo ..x
    //      case  6153: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .xo ..x
    //      case  6154: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // o.. .xo ..x
    //      case  6155: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ... .xo ..x
    //      case  6156: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo ..x
    //      case  6157: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oxx xoo ..x
    //      case  6158: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .xx xoo ..x
    //      case  6159: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // xox xoo ..x
    //      case  6160: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // oox xoo ..x
    //      case  6161: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .ox xoo ..x
    //      case  6162: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // x.x xoo ..x
    //      case  6163: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // o.x xoo ..x
    //      case  6164: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ..x xoo ..x
    //      case  6165: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xxo xoo ..x
    //      case  6166: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // oxo xoo ..x
    //      case  6167: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .xo xoo ..x
    //      case  6168: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // xoo xoo ..x
    //      case  6169: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo ..x
    //      case  6170: Assert::IsTrue(v == PositionValue(-  588                         )); break;  // .oo xoo ..x
    //      case  6171: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // x.o xoo ..x
    //      case  6172: Assert::IsTrue(v == PositionValue(-  412                         )); break;  // o.o xoo ..x
    //      case  6173: Assert::IsTrue(v == PositionValue(-  291                         )); break;  // ..o xoo ..x
    //      case  6174: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // xx. xoo ..x
    //      case  6175: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ox. xoo ..x
    //      case  6176: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .x. xoo ..x
    //      case  6177: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xo. xoo ..x
    //      case  6178: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // oo. xoo ..x
    //      case  6179: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .o. xoo ..x
    //      case  6180: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // x.. xoo ..x
    //      case  6181: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // o.. xoo ..x
    //      case  6182: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // ... xoo ..x
    //      case  6183: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo ..x
    //      case  6184: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo ..x
    //      case  6185: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo ..x
    //      case  6186: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo ..x
    //      case  6187: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo ..x
    //      case  6188: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo ..x
    //      case  6189: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo ..x
    //      case  6190: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo ..x
    //      case  6191: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo ..x
    //      case  6192: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo ..x
    //      case  6193: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo ..x
    //      case  6194: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo ..x
    //      case  6195: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo ..x
    //      case  6196: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo ..x
    //      case  6197: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo ..x
    //      case  6198: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo ..x
    //      case  6199: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo ..x
    //      case  6200: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo ..x
    //      case  6201: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo ..x
    //      case  6202: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo ..x
    //      case  6203: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo ..x
    //      case  6204: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo ..x
    //      case  6205: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo ..x
    //      case  6206: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo ..x
    //      case  6207: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo ..x
    //      case  6208: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo ..x
    //      case  6209: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo ..x
    //      case  6210: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo ..x
    //      case  6211: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // oxx .oo ..x
    //      case  6212: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // .xx .oo ..x
    //      case  6213: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // xox .oo ..x
    //      case  6214: Assert::IsTrue(v == PositionValue(-  503                         )); break;  // oox .oo ..x
    //      case  6215: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // .ox .oo ..x
    //      case  6216: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // x.x .oo ..x
    //      case  6217: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // o.x .oo ..x
    //      case  6218: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // ..x .oo ..x
    //      case  6219: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // xxo .oo ..x
    //      case  6220: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // oxo .oo ..x
    //      case  6221: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // .xo .oo ..x
    //      case  6222: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // xoo .oo ..x
    //      case  6223: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo ..x
    //      case  6224: Assert::IsTrue(v == PositionValue(-  642                         )); break;  // .oo .oo ..x
    //      case  6225: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // x.o .oo ..x
    //      case  6226: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // o.o .oo ..x
    //      case  6227: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // ..o .oo ..x
    //      case  6228: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // xx. .oo ..x
    //      case  6229: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ox. .oo ..x
    //      case  6230: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // .x. .oo ..x
    //      case  6231: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // xo. .oo ..x
    //      case  6232: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // oo. .oo ..x
    //      case  6233: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // .o. .oo ..x
    //      case  6234: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // x.. .oo ..x
    //      case  6235: Assert::IsTrue(v == PositionValue(-  258                         )); break;  // o.. .oo ..x
    //      case  6236: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // ... .oo ..x
    //      case  6237: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o ..x
    //      case  6238: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // oxx x.o ..x
    //      case  6239: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // .xx x.o ..x
    //      case  6240: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // xox x.o ..x
    //      case  6241: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // oox x.o ..x
    //      case  6242: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // .ox x.o ..x
    //      case  6243: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // x.x x.o ..x
    //      case  6244: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // o.x x.o ..x
    //      case  6245: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // ..x x.o ..x
    //      case  6246: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xxo x.o ..x
    //      case  6247: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // oxo x.o ..x
    //      case  6248: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .xo x.o ..x
    //      case  6249: Assert::IsTrue(v == PositionValue(-  149                         )); break;  // xoo x.o ..x
    //      case  6250: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o ..x
    //      case  6251: Assert::IsTrue(v == PositionValue(-  288                         )); break;  // .oo x.o ..x
    //      case  6252: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // x.o x.o ..x
    //      case  6253: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // o.o x.o ..x
    //      case  6254: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // ..o x.o ..x
    //      case  6255: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // xx. x.o ..x
    //      case  6256: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ox. x.o ..x
    //      case  6257: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // .x. x.o ..x
    //      case  6258: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // xo. x.o ..x
    //      case  6259: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // oo. x.o ..x
    //      case  6260: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .o. x.o ..x
    //      case  6261: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // x.. x.o ..x
    //      case  6262: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.. x.o ..x
    //      case  6263: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ... x.o ..x
    //      case  6264: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o ..x
    //      case  6265: Assert::IsTrue(v == PositionValue(-   11                         )); break;  // oxx o.o ..x
    //      case  6266: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // .xx o.o ..x
    //      case  6267: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // xox o.o ..x
    //      case  6268: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // oox o.o ..x
    //      case  6269: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // .ox o.o ..x
    //      case  6270: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // x.x o.o ..x
    //      case  6271: Assert::IsTrue(v == PositionValue(-  134                         )); break;  // o.x o.o ..x
    //      case  6272: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // ..x o.o ..x
    //      case  6273: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xxo o.o ..x
    //      case  6274: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oxo o.o ..x
    //      case  6275: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .xo o.o ..x
    //      case  6276: Assert::IsTrue(v == PositionValue(-  404                         )); break;  // xoo o.o ..x
    //      case  6277: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o ..x
    //      case  6278: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // .oo o.o ..x
    //      case  6279: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // x.o o.o ..x
    //      case  6280: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // o.o o.o ..x
    //      case  6281: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ..o o.o ..x
    //      case  6282: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // xx. o.o ..x
    //      case  6283: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // ox. o.o ..x
    //      case  6284: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .x. o.o ..x
    //      case  6285: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // xo. o.o ..x
    //      case  6286: Assert::IsTrue(v == PositionValue(-  465                         )); break;  // oo. o.o ..x
    //      case  6287: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // .o. o.o ..x
    //      case  6288: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // x.. o.o ..x
    //      case  6289: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // o.. o.o ..x
    //      case  6290: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // ... o.o ..x
    //      case  6291: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o ..x
    //      case  6292: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // oxx ..o ..x
    //      case  6293: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .xx ..o ..x
    //      case  6294: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // xox ..o ..x
    //      case  6295: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // oox ..o ..x
    //      case  6296: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // .ox ..o ..x
    //      case  6297: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // x.x ..o ..x
    //      case  6298: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // o.x ..o ..x
    //      case  6299: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // ..x ..o ..x
    //      case  6300: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // xxo ..o ..x
    //      case  6301: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oxo ..o ..x
    //      case  6302: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // .xo ..o ..x
    //      case  6303: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // xoo ..o ..x
    //      case  6304: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o ..x
    //      case  6305: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // .oo ..o ..x
    //      case  6306: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // x.o ..o ..x
    //      case  6307: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // o.o ..o ..x
    //      case  6308: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // ..o ..o ..x
    //      case  6309: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xx. ..o ..x
    //      case  6310: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ox. ..o ..x
    //      case  6311: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .x. ..o ..x
    //      case  6312: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // xo. ..o ..x
    //      case  6313: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // oo. ..o ..x
    //      case  6314: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // .o. ..o ..x
    //      case  6315: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.. ..o ..x
    //      case  6316: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // o.. ..o ..x
    //      case  6317: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ... ..o ..x
    //      case  6318: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. ..x
    //      case  6319: Assert::IsTrue(v == PositionValue(+  676                         )); break;  // oxx xx. ..x
    //      case  6320: Assert::IsTrue(v == PositionValue(+  737                         )); break;  // .xx xx. ..x
    //      case  6321: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. ..x
    //      case  6322: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // oox xx. ..x
    //      case  6323: Assert::IsTrue(v == PositionValue(+  395                         )); break;  // .ox xx. ..x
    //      case  6324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. ..x
    //      case  6325: Assert::IsTrue(v == PositionValue(+  388                         )); break;  // o.x xx. ..x
    //      case  6326: Assert::IsTrue(v == PositionValue(+  440                         )); break;  // ..x xx. ..x
    //      case  6327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. ..x
    //      case  6328: Assert::IsTrue(v == PositionValue(+  425                         )); break;  // oxo xx. ..x
    //      case  6329: Assert::IsTrue(v == PositionValue(+  477                         )); break;  // .xo xx. ..x
    //      case  6330: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. ..x
    //      case  6331: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. ..x
    //      case  6332: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // .oo xx. ..x
    //      case  6333: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. ..x
    //      case  6334: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // o.o xx. ..x
    //      case  6335: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // ..o xx. ..x
    //      case  6336: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. ..x
    //      case  6337: Assert::IsTrue(v == PositionValue(+  468                         )); break;  // ox. xx. ..x
    //      case  6338: Assert::IsTrue(v == PositionValue(+  520                         )); break;  // .x. xx. ..x
    //      case  6339: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. ..x
    //      case  6340: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // oo. xx. ..x
    //      case  6341: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // .o. xx. ..x
    //      case  6342: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. ..x
    //      case  6343: Assert::IsTrue(v == PositionValue(+  258                         )); break;  // o.. xx. ..x
    //      case  6344: Assert::IsTrue(v == PositionValue(+  310                         )); break;  // ... xx. ..x
    //      case  6345: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. ..x
    //      case  6346: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // oxx ox. ..x
    //      case  6347: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // .xx ox. ..x
    //      case  6348: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. ..x
    //      case  6349: Assert::IsTrue(v == PositionValue(-   77                         )); break;  // oox ox. ..x
    //      case  6350: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // .ox ox. ..x
    //      case  6351: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. ..x
    //      case  6352: Assert::IsTrue(v == PositionValue(+  124                         )); break;  // o.x ox. ..x
    //      case  6353: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // ..x ox. ..x
    //      case  6354: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. ..x
    //      case  6355: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // oxo ox. ..x
    //      case  6356: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // .xo ox. ..x
    //      case  6357: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo ox. ..x
    //      case  6358: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. ..x
    //      case  6359: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // .oo ox. ..x
    //      case  6360: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o ox. ..x
    //      case  6361: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // o.o ox. ..x
    //      case  6362: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // ..o ox. ..x
    //      case  6363: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. ..x
    //      case  6364: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // ox. ox. ..x
    //      case  6365: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // .x. ox. ..x
    //      case  6366: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. ox. ..x
    //      case  6367: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // oo. ox. ..x
    //      case  6368: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .o. ox. ..x
    //      case  6369: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. ox. ..x
    //      case  6370: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // o.. ox. ..x
    //      case  6371: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ... ox. ..x
    //      case  6372: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. ..x
    //      case  6373: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // oxx .x. ..x
    //      case  6374: Assert::IsTrue(v == PositionValue(+  527                         )); break;  // .xx .x. ..x
    //      case  6375: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. ..x
    //      case  6376: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // oox .x. ..x
    //      case  6377: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // .ox .x. ..x
    //      case  6378: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. ..x
    //      case  6379: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // o.x .x. ..x
    //      case  6380: Assert::IsTrue(v == PositionValue(+  308                         )); break;  // ..x .x. ..x
    //      case  6381: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. ..x
    //      case  6382: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // oxo .x. ..x
    //      case  6383: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // .xo .x. ..x
    //      case  6384: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo .x. ..x
    //      case  6385: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. ..x
    //      case  6386: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // .oo .x. ..x
    //      case  6387: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o .x. ..x
    //      case  6388: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // o.o .x. ..x
    //      case  6389: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // ..o .x. ..x
    //      case  6390: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. ..x
    //      case  6391: Assert::IsTrue(v == PositionValue(+  258                         )); break;  // ox. .x. ..x
    //      case  6392: Assert::IsTrue(v == PositionValue(+  310                         )); break;  // .x. .x. ..x
    //      case  6393: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. .x. ..x
    //      case  6394: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // oo. .x. ..x
    //      case  6395: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .o. .x. ..x
    //      case  6396: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. .x. ..x
    //      case  6397: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // o.. .x. ..x
    //      case  6398: Assert::IsTrue(v == PositionValue(+  178                         )); break;  // ... .x. ..x
    //      case  6399: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. ..x
    //      case  6400: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // oxx xo. ..x
    //      case  6401: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .xx xo. ..x
    //      case  6402: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xox xo. ..x
    //      case  6403: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // oox xo. ..x
    //      case  6404: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // .ox xo. ..x
    //      case  6405: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.x xo. ..x
    //      case  6406: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // o.x xo. ..x
    //      case  6407: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // ..x xo. ..x
    //      case  6408: Assert::IsTrue(v == PositionValue(+  241                         )); break;  // xxo xo. ..x
    //      case  6409: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // oxo xo. ..x
    //      case  6410: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // .xo xo. ..x
    //      case  6411: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // xoo xo. ..x
    //      case  6412: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. ..x
    //      case  6413: Assert::IsTrue(v == PositionValue(-  309                         )); break;  // .oo xo. ..x
    //      case  6414: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.o xo. ..x
    //      case  6415: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // o.o xo. ..x
    //      case  6416: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // ..o xo. ..x
    //      case  6417: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // xx. xo. ..x
    //      case  6418: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // ox. xo. ..x
    //      case  6419: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .x. xo. ..x
    //      case  6420: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // xo. xo. ..x
    //      case  6421: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // oo. xo. ..x
    //      case  6422: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // .o. xo. ..x
    //      case  6423: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.. xo. ..x
    //      case  6424: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.. xo. ..x
    //      case  6425: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ... xo. ..x
    //      case  6426: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. ..x
    //      case  6427: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // oxx oo. ..x
    //      case  6428: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // .xx oo. ..x
    //      case  6429: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // xox oo. ..x
    //      case  6430: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // oox oo. ..x
    //      case  6431: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // .ox oo. ..x
    //      case  6432: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // x.x oo. ..x
    //      case  6433: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // o.x oo. ..x
    //      case  6434: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // ..x oo. ..x
    //      case  6435: Assert::IsTrue(v == PositionValue(-  101                         )); break;  // xxo oo. ..x
    //      case  6436: Assert::IsTrue(v == PositionValue(-  430                         )); break;  // oxo oo. ..x
    //      case  6437: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // .xo oo. ..x
    //      case  6438: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // xoo oo. ..x
    //      case  6439: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. ..x
    //      case  6440: Assert::IsTrue(v == PositionValue(-  564                         )); break;  // .oo oo. ..x
    //      case  6441: Assert::IsTrue(v == PositionValue(-  224                         )); break;  // x.o oo. ..x
    //      case  6442: Assert::IsTrue(v == PositionValue(-  475                         )); break;  // o.o oo. ..x
    //      case  6443: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // ..o oo. ..x
    //      case  6444: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // xx. oo. ..x
    //      case  6445: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // ox. oo. ..x
    //      case  6446: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // .x. oo. ..x
    //      case  6447: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // xo. oo. ..x
    //      case  6448: Assert::IsTrue(v == PositionValue(-  642                         )); break;  // oo. oo. ..x
    //      case  6449: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // .o. oo. ..x
    //      case  6450: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // x.. oo. ..x
    //      case  6451: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // o.. oo. ..x
    //      case  6452: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // ... oo. ..x
    //      case  6453: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. ..x
    //      case  6454: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oxx .o. ..x
    //      case  6455: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .xx .o. ..x
    //      case  6456: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // xox .o. ..x
    //      case  6457: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // oox .o. ..x
    //      case  6458: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // .ox .o. ..x
    //      case  6459: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.x .o. ..x
    //      case  6460: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // o.x .o. ..x
    //      case  6461: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // ..x .o. ..x
    //      case  6462: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // xxo .o. ..x
    //      case  6463: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // oxo .o. ..x
    //      case  6464: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .xo .o. ..x
    //      case  6465: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // xoo .o. ..x
    //      case  6466: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. ..x
    //      case  6467: Assert::IsTrue(v == PositionValue(-  354                         )); break;  // .oo .o. ..x
    //      case  6468: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // x.o .o. ..x
    //      case  6469: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // o.o .o. ..x
    //      case  6470: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // ..o .o. ..x
    //      case  6471: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xx. .o. ..x
    //      case  6472: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ox. .o. ..x
    //      case  6473: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .x. .o. ..x
    //      case  6474: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // xo. .o. ..x
    //      case  6475: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // oo. .o. ..x
    //      case  6476: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // .o. .o. ..x
    //      case  6477: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // x.. .o. ..x
    //      case  6478: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // o.. .o. ..x
    //      case  6479: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // ... .o. ..x
    //      case  6480: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. ..x
    //      case  6481: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // oxx x.. ..x
    //      case  6482: Assert::IsTrue(v == PositionValue(+  341                         )); break;  // .xx x.. ..x
    //      case  6483: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // xox x.. ..x
    //      case  6484: Assert::IsTrue(v == PositionValue(-   35                         )); break;  // oox x.. ..x
    //      case  6485: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // .ox x.. ..x
    //      case  6486: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // x.x x.. ..x
    //      case  6487: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // o.x x.. ..x
    //      case  6488: Assert::IsTrue(v == PositionValue(+  131                         )); break;  // ..x x.. ..x
    //      case  6489: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // xxo x.. ..x
    //      case  6490: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // oxo x.. ..x
    //      case  6491: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .xo x.. ..x
    //      case  6492: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // xoo x.. ..x
    //      case  6493: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. ..x
    //      case  6494: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // .oo x.. ..x
    //      case  6495: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // x.o x.. ..x
    //      case  6496: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.o x.. ..x
    //      case  6497: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ..o x.. ..x
    //      case  6498: Assert::IsTrue(v == PositionValue(+  428                         )); break;  // xx. x.. ..x
    //      case  6499: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // ox. x.. ..x
    //      case  6500: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // .x. x.. ..x
    //      case  6501: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xo. x.. ..x
    //      case  6502: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // oo. x.. ..x
    //      case  6503: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .o. x.. ..x
    //      case  6504: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // x.. x.. ..x
    //      case  6505: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // o.. x.. ..x
    //      case  6506: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // ... x.. ..x
    //      case  6507: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. ..x
    //      case  6508: Assert::IsTrue(v == PositionValue(+   34                         )); break;  // oxx o.. ..x
    //      case  6509: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .xx o.. ..x
    //      case  6510: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // xox o.. ..x
    //      case  6511: Assert::IsTrue(v == PositionValue(-  290                         )); break;  // oox o.. ..x
    //      case  6512: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // .ox o.. ..x
    //      case  6513: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // x.x o.. ..x
    //      case  6514: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // o.x o.. ..x
    //      case  6515: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // ..x o.. ..x
    //      case  6516: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xxo o.. ..x
    //      case  6517: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oxo o.. ..x
    //      case  6518: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xo o.. ..x
    //      case  6519: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // xoo o.. ..x
    //      case  6520: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. ..x
    //      case  6521: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // .oo o.. ..x
    //      case  6522: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.o o.. ..x
    //      case  6523: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // o.o o.. ..x
    //      case  6524: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ..o o.. ..x
    //      case  6525: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xx. o.. ..x
    //      case  6526: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // ox. o.. ..x
    //      case  6527: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .x. o.. ..x
    //      case  6528: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // xo. o.. ..x
    //      case  6529: Assert::IsTrue(v == PositionValue(-  342                         )); break;  // oo. o.. ..x
    //      case  6530: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // .o. o.. ..x
    //      case  6531: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.. o.. ..x
    //      case  6532: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // o.. o.. ..x
    //      case  6533: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ... o.. ..x
    //      case  6534: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... ..x
    //      case  6535: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // oxx ... ..x
    //      case  6536: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // .xx ... ..x
    //      case  6537: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // xox ... ..x
    //      case  6538: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // oox ... ..x
    //      case  6539: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // .ox ... ..x
    //      case  6540: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // x.x ... ..x
    //      case  6541: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // o.x ... ..x
    //      case  6542: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // ..x ... ..x
    //      case  6543: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // xxo ... ..x
    //      case  6544: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // oxo ... ..x
    //      case  6545: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .xo ... ..x
    //      case  6546: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xoo ... ..x
    //      case  6547: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... ..x
    //      case  6548: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // .oo ... ..x
    //      case  6549: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.o ... ..x
    //      case  6550: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.o ... ..x
    //      case  6551: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..o ... ..x
    //      case  6552: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // xx. ... ..x
    //      case  6553: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ox. ... ..x
    //      case  6554: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // .x. ... ..x
    //      case  6555: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xo. ... ..x
    //      case  6556: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // oo. ... ..x
    //      case  6557: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .o. ... ..x
    //      case  6558: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.. ... ..x
    //      case  6559: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.. ... ..x
    //      case  6560: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ... ... ..x
    //      case  6561: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx xxo
    //      case  6562: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx xxo
    //      case  6563: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx xxo
    //      case  6564: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx xxo
    //      case  6565: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx xxo
    //      case  6566: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx xxo
    //      case  6567: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx xxo
    //      case  6568: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx xxo
    //      case  6569: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx xxo
    //      case  6570: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx xxo
    //      case  6571: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx xxo
    //      case  6572: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx xxo
    //      case  6573: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx xxo
    //      case  6574: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx xxo
    //      case  6575: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx xxo
    //      case  6576: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx xxo
    //      case  6577: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx xxo
    //      case  6578: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx xxo
    //      case  6579: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx xxo
    //      case  6580: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx xxo
    //      case  6581: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx xxo
    //      case  6582: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx xxo
    //      case  6583: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx xxo
    //      case  6584: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx xxo
    //      case  6585: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx xxo
    //      case  6586: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx xxo
    //      case  6587: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx xxo
    //      case  6588: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx xxo
    //      case  6589: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx xxo
    //      case  6590: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx xxo
    //      case  6591: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx xxo
    //      case  6592: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxx xxo
    //      case  6593: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx xxo
    //      case  6594: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx xxo
    //      case  6595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxx xxo
    //      case  6596: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx xxo
    //      case  6597: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx xxo
    //      case  6598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oxx xxo
    //      case  6599: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxx xxo
    //      case  6600: Assert::IsTrue(v == PositionValue(+  360                         )); break;  // xoo oxx xxo
    //      case  6601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx xxo
    //      case  6602: Assert::IsTrue(v == PositionValue(+  230                         )); break;  // .oo oxx xxo
    //      case  6603: Assert::IsTrue(v == PositionValue(+  570                         )); break;  // x.o oxx xxo
    //      case  6604: Assert::IsTrue(v == PositionValue(+  328                         )); break;  // o.o oxx xxo
    //      case  6605: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // ..o oxx xxo
    //      case  6606: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx xxo
    //      case  6607: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oxx xxo
    //      case  6608: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxx xxo
    //      case  6609: Assert::IsTrue(v == PositionValue(+  490                         )); break;  // xo. oxx xxo
    //      case  6610: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // oo. oxx xxo
    //      case  6611: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // .o. oxx xxo
    //      case  6612: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // x.. oxx xxo
    //      case  6613: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // o.. oxx xxo
    //      case  6614: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // ... oxx xxo
    //      case  6615: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx xxo
    //      case  6616: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx xxo
    //      case  6617: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx xxo
    //      case  6618: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx xxo
    //      case  6619: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx xxo
    //      case  6620: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx xxo
    //      case  6621: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx xxo
    //      case  6622: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx xxo
    //      case  6623: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx xxo
    //      case  6624: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx xxo
    //      case  6625: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xx xxo
    //      case  6626: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xx xxo
    //      case  6627: Assert::IsTrue(v == PositionValue(+  492                         )); break;  // xoo .xx xxo
    //      case  6628: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx xxo
    //      case  6629: Assert::IsTrue(v == PositionValue(+  362                         )); break;  // .oo .xx xxo
    //      case  6630: Assert::IsTrue(v == PositionValue(+  624                         )); break;  // x.o .xx xxo
    //      case  6631: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // o.o .xx xxo
    //      case  6632: Assert::IsTrue(v == PositionValue(+  503                         )); break;  // ..o .xx xxo
    //      case  6633: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx xxo
    //      case  6634: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xx xxo
    //      case  6635: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xx xxo
    //      case  6636: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // xo. .xx xxo
    //      case  6637: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // oo. .xx xxo
    //      case  6638: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .o. .xx xxo
    //      case  6639: Assert::IsTrue(v == PositionValue(+  676                         )); break;  // x.. .xx xxo
    //      case  6640: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // o.. .xx xxo
    //      case  6641: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // ... .xx xxo
    //      case  6642: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox xxo
    //      case  6643: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xox xxo
    //      case  6644: Assert::IsTrue(v == PositionValue(+  730                         )); break;  // .xx xox xxo
    //      case  6645: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox xxo
    //      case  6646: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox xxo
    //      case  6647: Assert::IsTrue(v == PositionValue(+  319                         )); break;  // .ox xox xxo
    //      case  6648: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox xxo
    //      case  6649: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xox xxo
    //      case  6650: Assert::IsTrue(v == PositionValue(+  442                         )); break;  // ..x xox xxo
    //      case  6651: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xox xxo
    //      case  6652: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox xxo
    //      case  6653: Assert::IsTrue(v == PositionValue(+  401                         )); break;  // .xo xox xxo
    //      case  6654: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xox xxo
    //      case  6655: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox xxo
    //      case  6656: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .oo xox xxo
    //      case  6657: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xox xxo
    //      case  6658: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox xxo
    //      case  6659: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // ..o xox xxo
    //      case  6660: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xox xxo
    //      case  6661: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xox xxo
    //      case  6662: Assert::IsTrue(v == PositionValue(+  522                         )); break;  // .x. xox xxo
    //      case  6663: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xox xxo
    //      case  6664: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox xxo
    //      case  6665: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // .o. xox xxo
    //      case  6666: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xox xxo
    //      case  6667: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xox xxo
    //      case  6668: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // ... xox xxo
    //      case  6669: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox xxo
    //      case  6670: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox xxo
    //      case  6671: Assert::IsTrue(v == PositionValue(+  319                         )); break;  // .xx oox xxo
    //      case  6672: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xox oox xxo
    //      case  6673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox xxo
    //      case  6674: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // .ox oox xxo
    //      case  6675: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // x.x oox xxo
    //      case  6676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox xxo
    //      case  6677: Assert::IsTrue(v == PositionValue(+  109                         )); break;  // ..x oox xxo
    //      case  6678: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // xxo oox xxo
    //      case  6679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox xxo
    //      case  6680: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .xo oox xxo
    //      case  6681: Assert::IsTrue(v == PositionValue(-  360                         )); break;  // xoo oox xxo
    //      case  6682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox xxo
    //      case  6683: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .oo oox xxo
    //      case  6684: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // x.o oox xxo
    //      case  6685: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox xxo
    //      case  6686: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ..o oox xxo
    //      case  6687: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xx. oox xxo
    //      case  6688: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox xxo
    //      case  6689: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // .x. oox xxo
    //      case  6690: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xo. oox xxo
    //      case  6691: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox xxo
    //      case  6692: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .o. oox xxo
    //      case  6693: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.. oox xxo
    //      case  6694: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox xxo
    //      case  6695: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // ... oox xxo
    //      case  6696: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox xxo
    //      case  6697: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .ox xxo
    //      case  6698: Assert::IsTrue(v == PositionValue(+  442                         )); break;  // .xx .ox xxo
    //      case  6699: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // xox .ox xxo
    //      case  6700: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox xxo
    //      case  6701: Assert::IsTrue(v == PositionValue(+  109                         )); break;  // .ox .ox xxo
    //      case  6702: Assert::IsTrue(v == PositionValue(+  284                         )); break;  // x.x .ox xxo
    //      case  6703: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .ox xxo
    //      case  6704: Assert::IsTrue(v == PositionValue(+  232                         )); break;  // ..x .ox xxo
    //      case  6705: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // xxo .ox xxo
    //      case  6706: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox xxo
    //      case  6707: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // .xo .ox xxo
    //      case  6708: Assert::IsTrue(v == PositionValue(-  159                         )); break;  // xoo .ox xxo
    //      case  6709: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox xxo
    //      case  6710: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .oo .ox xxo
    //      case  6711: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // x.o .ox xxo
    //      case  6712: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox xxo
    //      case  6713: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ..o .ox xxo
    //      case  6714: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // xx. .ox xxo
    //      case  6715: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .ox xxo
    //      case  6716: Assert::IsTrue(v == PositionValue(+  234                         )); break;  // .x. .ox xxo
    //      case  6717: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xo. .ox xxo
    //      case  6718: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox xxo
    //      case  6719: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // .o. .ox xxo
    //      case  6720: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // x.. .ox xxo
    //      case  6721: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .ox xxo
    //      case  6722: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // ... .ox xxo
    //      case  6723: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x xxo
    //      case  6724: Assert::IsTrue(v == PositionValue(+  804                         )); break;  // oxx x.x xxo
    //      case  6725: Assert::IsTrue(v == PositionValue(+  865                         )); break;  // .xx x.x xxo
    //      case  6726: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x xxo
    //      case  6727: Assert::IsTrue(v == PositionValue(+  402                         )); break;  // oox x.x xxo
    //      case  6728: Assert::IsTrue(v == PositionValue(+  532                         )); break;  // .ox x.x xxo
    //      case  6729: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x xxo
    //      case  6730: Assert::IsTrue(v == PositionValue(+  525                         )); break;  // o.x x.x xxo
    //      case  6731: Assert::IsTrue(v == PositionValue(+  577                         )); break;  // ..x x.x xxo
    //      case  6732: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.x xxo
    //      case  6733: Assert::IsTrue(v == PositionValue(+  562                         )); break;  // oxo x.x xxo
    //      case  6734: Assert::IsTrue(v == PositionValue(+  614                         )); break;  // .xo x.x xxo
    //      case  6735: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.x xxo
    //      case  6736: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x xxo
    //      case  6737: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // .oo x.x xxo
    //      case  6738: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.x xxo
    //      case  6739: Assert::IsTrue(v == PositionValue(+  361                         )); break;  // o.o x.x xxo
    //      case  6740: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // ..o x.x xxo
    //      case  6741: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.x xxo
    //      case  6742: Assert::IsTrue(v == PositionValue(+  605                         )); break;  // ox. x.x xxo
    //      case  6743: Assert::IsTrue(v == PositionValue(+  657                         )); break;  // .x. x.x xxo
    //      case  6744: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.x xxo
    //      case  6745: Assert::IsTrue(v == PositionValue(+  272                         )); break;  // oo. x.x xxo
    //      case  6746: Assert::IsTrue(v == PositionValue(+  411                         )); break;  // .o. x.x xxo
    //      case  6747: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.x xxo
    //      case  6748: Assert::IsTrue(v == PositionValue(+  404                         )); break;  // o.. x.x xxo
    //      case  6749: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // ... x.x xxo
    //      case  6750: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x xxo
    //      case  6751: Assert::IsTrue(v == PositionValue(+  402                         )); break;  // oxx o.x xxo
    //      case  6752: Assert::IsTrue(v == PositionValue(+  532                         )); break;  // .xx o.x xxo
    //      case  6753: Assert::IsTrue(v == PositionValue(+  242                         )); break;  // xox o.x xxo
    //      case  6754: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oox o.x xxo
    //      case  6755: Assert::IsTrue(v == PositionValue(+  199                         )); break;  // .ox o.x xxo
    //      case  6756: Assert::IsTrue(v == PositionValue(+  365                         )); break;  // x.x o.x xxo
    //      case  6757: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // o.x o.x xxo
    //      case  6758: Assert::IsTrue(v == PositionValue(+  322                         )); break;  // ..x o.x xxo
    //      case  6759: Assert::IsTrue(v == PositionValue(+  402                         )); break;  // xxo o.x xxo
    //      case  6760: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // oxo o.x xxo
    //      case  6761: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // .xo o.x xxo
    //      case  6762: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xoo o.x xxo
    //      case  6763: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x xxo
    //      case  6764: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // .oo o.x xxo
    //      case  6765: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // x.o o.x xxo
    //      case  6766: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // o.o o.x xxo
    //      case  6767: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // ..o o.x xxo
    //      case  6768: Assert::IsTrue(v == PositionValue(+  454                         )); break;  // xx. o.x xxo
    //      case  6769: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // ox. o.x xxo
    //      case  6770: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // .x. o.x xxo
    //      case  6771: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xo. o.x xxo
    //      case  6772: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oo. o.x xxo
    //      case  6773: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // .o. o.x xxo
    //      case  6774: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // x.. o.x xxo
    //      case  6775: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // o.. o.x xxo
    //      case  6776: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // ... o.x xxo
    //      case  6777: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x xxo
    //      case  6778: Assert::IsTrue(v == PositionValue(+  525                         )); break;  // oxx ..x xxo
    //      case  6779: Assert::IsTrue(v == PositionValue(+  577                         )); break;  // .xx ..x xxo
    //      case  6780: Assert::IsTrue(v == PositionValue(+  365                         )); break;  // xox ..x xxo
    //      case  6781: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oox ..x xxo
    //      case  6782: Assert::IsTrue(v == PositionValue(+  322                         )); break;  // .ox ..x xxo
    //      case  6783: Assert::IsTrue(v == PositionValue(+  410                         )); break;  // x.x ..x xxo
    //      case  6784: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // o.x ..x xxo
    //      case  6785: Assert::IsTrue(v == PositionValue(+  367                         )); break;  // ..x ..x xxo
    //      case  6786: Assert::IsTrue(v == PositionValue(+  447                         )); break;  // xxo ..x xxo
    //      case  6787: Assert::IsTrue(v == PositionValue(+  283                         )); break;  // oxo ..x xxo
    //      case  6788: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // .xo ..x xxo
    //      case  6789: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xoo ..x xxo
    //      case  6790: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x xxo
    //      case  6791: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // .oo ..x xxo
    //      case  6792: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // x.o ..x xxo
    //      case  6793: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // o.o ..x xxo
    //      case  6794: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // ..o ..x xxo
    //      case  6795: Assert::IsTrue(v == PositionValue(+  499                         )); break;  // xx. ..x xxo
    //      case  6796: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // ox. ..x xxo
    //      case  6797: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // .x. ..x xxo
    //      case  6798: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // xo. ..x xxo
    //      case  6799: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // oo. ..x xxo
    //      case  6800: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // .o. ..x xxo
    //      case  6801: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // x.. ..x xxo
    //      case  6802: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // o.. ..x xxo
    //      case  6803: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // ... ..x xxo
    //      case  6804: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo xxo
    //      case  6805: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo xxo
    //      case  6806: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo xxo
    //      case  6807: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo xxo
    //      case  6808: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxo xxo
    //      case  6809: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxo xxo
    //      case  6810: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo xxo
    //      case  6811: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxo xxo
    //      case  6812: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxo xxo
    //      case  6813: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo xxo
    //      case  6814: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxo xxo
    //      case  6815: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxo xxo
    //      case  6816: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo xxo
    //      case  6817: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo xxo
    //      case  6818: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xxo xxo
    //      case  6819: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo xxo
    //      case  6820: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xxo xxo
    //      case  6821: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xxo xxo
    //      case  6822: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo xxo
    //      case  6823: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxo xxo
    //      case  6824: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxo xxo
    //      case  6825: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo xxo
    //      case  6826: Assert::IsTrue(v == PositionValue(+  230                         )); break;  // oo. xxo xxo
    //      case  6827: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // .o. xxo xxo
    //      case  6828: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo xxo
    //      case  6829: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // o.. xxo xxo
    //      case  6830: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // ... xxo xxo
    //      case  6831: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo xxo
    //      case  6832: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxo xxo
    //      case  6833: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo xxo
    //      case  6834: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo xxo
    //      case  6835: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxo xxo
    //      case  6836: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxo xxo
    //      case  6837: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo xxo
    //      case  6838: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxo xxo
    //      case  6839: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxo xxo
    //      case  6840: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo xxo
    //      case  6841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oxo xxo
    //      case  6842: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxo xxo
    //      case  6843: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oxo xxo
    //      case  6844: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo xxo
    //      case  6845: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oxo xxo
    //      case  6846: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oxo xxo
    //      case  6847: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo xxo
    //      case  6848: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oxo xxo
    //      case  6849: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo xxo
    //      case  6850: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oxo xxo
    //      case  6851: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxo xxo
    //      case  6852: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // xo. oxo xxo
    //      case  6853: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oo. oxo xxo
    //      case  6854: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // .o. oxo xxo
    //      case  6855: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // x.. oxo xxo
    //      case  6856: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // o.. oxo xxo
    //      case  6857: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // ... oxo xxo
    //      case  6858: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo xxo
    //      case  6859: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo xxo
    //      case  6860: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo xxo
    //      case  6861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo xxo
    //      case  6862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xo xxo
    //      case  6863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xo xxo
    //      case  6864: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo xxo
    //      case  6865: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xo xxo
    //      case  6866: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xo xxo
    //      case  6867: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo xxo
    //      case  6868: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xo xxo
    //      case  6869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xo xxo
    //      case  6870: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .xo xxo
    //      case  6871: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo xxo
    //      case  6872: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .xo xxo
    //      case  6873: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .xo xxo
    //      case  6874: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .xo xxo
    //      case  6875: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .xo xxo
    //      case  6876: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo xxo
    //      case  6877: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xo xxo
    //      case  6878: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xo xxo
    //      case  6879: Assert::IsTrue(v == PositionValue(+  202                         )); break;  // xo. .xo xxo
    //      case  6880: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // oo. .xo xxo
    //      case  6881: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .o. .xo xxo
    //      case  6882: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // x.. .xo xxo
    //      case  6883: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // o.. .xo xxo
    //      case  6884: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ... .xo xxo
    //      case  6885: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo xxo
    //      case  6886: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xoo xxo
    //      case  6887: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .xx xoo xxo
    //      case  6888: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xoo xxo
    //      case  6889: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo xxo
    //      case  6890: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // .ox xoo xxo
    //      case  6891: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xoo xxo
    //      case  6892: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xoo xxo
    //      case  6893: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ..x xoo xxo
    //      case  6894: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xoo xxo
    //      case  6895: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo xxo
    //      case  6896: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo xxo
    //      case  6897: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xoo xxo
    //      case  6898: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo xxo
    //      case  6899: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo xxo
    //      case  6900: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xoo xxo
    //      case  6901: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo xxo
    //      case  6902: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo xxo
    //      case  6903: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xoo xxo
    //      case  6904: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xoo xxo
    //      case  6905: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // .x. xoo xxo
    //      case  6906: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xoo xxo
    //      case  6907: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo xxo
    //      case  6908: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .o. xoo xxo
    //      case  6909: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xoo xxo
    //      case  6910: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xoo xxo
    //      case  6911: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // ... xoo xxo
    //      case  6912: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo xxo
    //      case  6913: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo xxo
    //      case  6914: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo xxo
    //      case  6915: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo xxo
    //      case  6916: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo xxo
    //      case  6917: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo xxo
    //      case  6918: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo xxo
    //      case  6919: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo xxo
    //      case  6920: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo xxo
    //      case  6921: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo xxo
    //      case  6922: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo xxo
    //      case  6923: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo xxo
    //      case  6924: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo xxo
    //      case  6925: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo xxo
    //      case  6926: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo xxo
    //      case  6927: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo xxo
    //      case  6928: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo xxo
    //      case  6929: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo xxo
    //      case  6930: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo xxo
    //      case  6931: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo xxo
    //      case  6932: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo xxo
    //      case  6933: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo xxo
    //      case  6934: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo xxo
    //      case  6935: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo xxo
    //      case  6936: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo xxo
    //      case  6937: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo xxo
    //      case  6938: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo xxo
    //      case  6939: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo xxo
    //      case  6940: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .oo xxo
    //      case  6941: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // .xx .oo xxo
    //      case  6942: Assert::IsTrue(v == PositionValue(-  328                         )); break;  // xox .oo xxo
    //      case  6943: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo xxo
    //      case  6944: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // .ox .oo xxo
    //      case  6945: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // x.x .oo xxo
    //      case  6946: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .oo xxo
    //      case  6947: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // ..x .oo xxo
    //      case  6948: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo xxo
    //      case  6949: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo xxo
    //      case  6950: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo xxo
    //      case  6951: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo xxo
    //      case  6952: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo xxo
    //      case  6953: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo xxo
    //      case  6954: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo xxo
    //      case  6955: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo xxo
    //      case  6956: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo xxo
    //      case  6957: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // xx. .oo xxo
    //      case  6958: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .oo xxo
    //      case  6959: Assert::IsTrue(v == PositionValue(-  186                         )); break;  // .x. .oo xxo
    //      case  6960: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // xo. .oo xxo
    //      case  6961: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo xxo
    //      case  6962: Assert::IsTrue(v == PositionValue(-  432                         )); break;  // .o. .oo xxo
    //      case  6963: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // x.. .oo xxo
    //      case  6964: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .oo xxo
    //      case  6965: Assert::IsTrue(v == PositionValue(-  231                         )); break;  // ... .oo xxo
    //      case  6966: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o xxo
    //      case  6967: Assert::IsTrue(v == PositionValue(+  402                         )); break;  // oxx x.o xxo
    //      case  6968: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // .xx x.o xxo
    //      case  6969: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.o xxo
    //      case  6970: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oox x.o xxo
    //      case  6971: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .ox x.o xxo
    //      case  6972: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.o xxo
    //      case  6973: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // o.x x.o xxo
    //      case  6974: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // ..x x.o xxo
    //      case  6975: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.o xxo
    //      case  6976: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo x.o xxo
    //      case  6977: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo x.o xxo
    //      case  6978: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.o xxo
    //      case  6979: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o xxo
    //      case  6980: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo x.o xxo
    //      case  6981: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.o xxo
    //      case  6982: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o x.o xxo
    //      case  6983: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o x.o xxo
    //      case  6984: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.o xxo
    //      case  6985: Assert::IsTrue(v == PositionValue(+  272                         )); break;  // ox. x.o xxo
    //      case  6986: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // .x. x.o xxo
    //      case  6987: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.o xxo
    //      case  6988: Assert::IsTrue(v == PositionValue(-   61                         )); break;  // oo. x.o xxo
    //      case  6989: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // .o. x.o xxo
    //      case  6990: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.o xxo
    //      case  6991: Assert::IsTrue(v == PositionValue(+  149                         )); break;  // o.. x.o xxo
    //      case  6992: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // ... x.o xxo
    //      case  6993: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o xxo
    //      case  6994: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oxx o.o xxo
    //      case  6995: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .xx o.o xxo
    //      case  6996: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // xox o.o xxo
    //      case  6997: Assert::IsTrue(v == PositionValue(-  402                         )); break;  // oox o.o xxo
    //      case  6998: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // .ox o.o xxo
    //      case  6999: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.x o.o xxo
    //      case  7000: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.x o.o xxo
    //      case  7001: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ..x o.o xxo
    //      case  7002: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo o.o xxo
    //      case  7003: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o xxo
    //      case  7004: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo o.o xxo
    //      case  7005: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo o.o xxo
    //      case  7006: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o xxo
    //      case  7007: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo o.o xxo
    //      case  7008: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o o.o xxo
    //      case  7009: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o xxo
    //      case  7010: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o o.o xxo
    //      case  7011: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xx. o.o xxo
    //      case  7012: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ox. o.o xxo
    //      case  7013: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // .x. o.o xxo
    //      case  7014: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // xo. o.o xxo
    //      case  7015: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // oo. o.o xxo
    //      case  7016: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // .o. o.o xxo
    //      case  7017: Assert::IsTrue(v == PositionValue(-   11                         )); break;  // x.. o.o xxo
    //      case  7018: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // o.. o.o xxo
    //      case  7019: Assert::IsTrue(v == PositionValue(-   54                         )); break;  // ... o.o xxo
    //      case  7020: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o xxo
    //      case  7021: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oxx ..o xxo
    //      case  7022: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .xx ..o xxo
    //      case  7023: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // xox ..o xxo
    //      case  7024: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oox ..o xxo
    //      case  7025: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .ox ..o xxo
    //      case  7026: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.x ..o xxo
    //      case  7027: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x ..o xxo
    //      case  7028: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ..x ..o xxo
    //      case  7029: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ..o xxo
    //      case  7030: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ..o xxo
    //      case  7031: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ..o xxo
    //      case  7032: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ..o xxo
    //      case  7033: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o xxo
    //      case  7034: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ..o xxo
    //      case  7035: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ..o xxo
    //      case  7036: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ..o xxo
    //      case  7037: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ..o xxo
    //      case  7038: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // xx. ..o xxo
    //      case  7039: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // ox. ..o xxo
    //      case  7040: Assert::IsTrue(v == PositionValue(+   36                         )); break;  // .x. ..o xxo
    //      case  7041: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // xo. ..o xxo
    //      case  7042: Assert::IsTrue(v == PositionValue(-  262                         )); break;  // oo. ..o xxo
    //      case  7043: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // .o. ..o xxo
    //      case  7044: Assert::IsTrue(v == PositionValue(+   34                         )); break;  // x.. ..o xxo
    //      case  7045: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // o.. ..o xxo
    //      case  7046: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // ... ..o xxo
    //      case  7047: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. xxo
    //      case  7048: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. xxo
    //      case  7049: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. xxo
    //      case  7050: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. xxo
    //      case  7051: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xx. xxo
    //      case  7052: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xx. xxo
    //      case  7053: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. xxo
    //      case  7054: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xx. xxo
    //      case  7055: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xx. xxo
    //      case  7056: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. xxo
    //      case  7057: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xx. xxo
    //      case  7058: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xx. xxo
    //      case  7059: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. xxo
    //      case  7060: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. xxo
    //      case  7061: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // .oo xx. xxo
    //      case  7062: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. xxo
    //      case  7063: Assert::IsTrue(v == PositionValue(+  538                         )); break;  // o.o xx. xxo
    //      case  7064: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // ..o xx. xxo
    //      case  7065: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. xxo
    //      case  7066: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xx. xxo
    //      case  7067: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xx. xxo
    //      case  7068: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. xxo
    //      case  7069: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // oo. xx. xxo
    //      case  7070: Assert::IsTrue(v == PositionValue(+  588                         )); break;  // .o. xx. xxo
    //      case  7071: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. xxo
    //      case  7072: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // o.. xx. xxo
    //      case  7073: Assert::IsTrue(v == PositionValue(+  642                         )); break;  // ... xx. xxo
    //      case  7074: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. xxo
    //      case  7075: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ox. xxo
    //      case  7076: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. xxo
    //      case  7077: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. xxo
    //      case  7078: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ox. xxo
    //      case  7079: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ox. xxo
    //      case  7080: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. xxo
    //      case  7081: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ox. xxo
    //      case  7082: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ox. xxo
    //      case  7083: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. xxo
    //      case  7084: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo ox. xxo
    //      case  7085: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo ox. xxo
    //      case  7086: Assert::IsTrue(v == PositionValue(+  159                         )); break;  // xoo ox. xxo
    //      case  7087: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. xxo
    //      case  7088: Assert::IsTrue(v == PositionValue(+   29                         )); break;  // .oo ox. xxo
    //      case  7089: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // x.o ox. xxo
    //      case  7090: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // o.o ox. xxo
    //      case  7091: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // ..o ox. xxo
    //      case  7092: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. xxo
    //      case  7093: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. ox. xxo
    //      case  7094: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. ox. xxo
    //      case  7095: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // xo. ox. xxo
    //      case  7096: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oo. ox. xxo
    //      case  7097: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .o. ox. xxo
    //      case  7098: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // x.. ox. xxo
    //      case  7099: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // o.. ox. xxo
    //      case  7100: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // ... ox. xxo
    //      case  7101: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. xxo
    //      case  7102: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. xxo
    //      case  7103: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. xxo
    //      case  7104: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. xxo
    //      case  7105: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .x. xxo
    //      case  7106: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .x. xxo
    //      case  7107: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. xxo
    //      case  7108: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .x. xxo
    //      case  7109: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .x. xxo
    //      case  7110: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. xxo
    //      case  7111: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .x. xxo
    //      case  7112: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .x. xxo
    //      case  7113: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // xoo .x. xxo
    //      case  7114: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. xxo
    //      case  7115: Assert::IsTrue(v == PositionValue(+  152                         )); break;  // .oo .x. xxo
    //      case  7116: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // x.o .x. xxo
    //      case  7117: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // o.o .x. xxo
    //      case  7118: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // ..o .x. xxo
    //      case  7119: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. xxo
    //      case  7120: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .x. xxo
    //      case  7121: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .x. xxo
    //      case  7122: Assert::IsTrue(v == PositionValue(+  412                         )); break;  // xo. .x. xxo
    //      case  7123: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // oo. .x. xxo
    //      case  7124: Assert::IsTrue(v == PositionValue(+  291                         )); break;  // .o. .x. xxo
    //      case  7125: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // x.. .x. xxo
    //      case  7126: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // o.. .x. xxo
    //      case  7127: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // ... .x. xxo
    //      case  7128: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. xxo
    //      case  7129: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xo. xxo
    //      case  7130: Assert::IsTrue(v == PositionValue(+  451                         )); break;  // .xx xo. xxo
    //      case  7131: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xo. xxo
    //      case  7132: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. xxo
    //      case  7133: Assert::IsTrue(v == PositionValue(+  118                         )); break;  // .ox xo. xxo
    //      case  7134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xo. xxo
    //      case  7135: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xo. xxo
    //      case  7136: Assert::IsTrue(v == PositionValue(+  241                         )); break;  // ..x xo. xxo
    //      case  7137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xo. xxo
    //      case  7138: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. xxo
    //      case  7139: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // .xo xo. xxo
    //      case  7140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xo. xxo
    //      case  7141: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. xxo
    //      case  7142: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .oo xo. xxo
    //      case  7143: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xo. xxo
    //      case  7144: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. xxo
    //      case  7145: Assert::IsTrue(v == PositionValue(+   77                         )); break;  // ..o xo. xxo
    //      case  7146: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xo. xxo
    //      case  7147: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xo. xxo
    //      case  7148: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // .x. xo. xxo
    //      case  7149: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xo. xxo
    //      case  7150: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. xxo
    //      case  7151: Assert::IsTrue(v == PositionValue(+   75                         )); break;  // .o. xo. xxo
    //      case  7152: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xo. xxo
    //      case  7153: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xo. xxo
    //      case  7154: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // ... xo. xxo
    //      case  7155: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. xxo
    //      case  7156: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. xxo
    //      case  7157: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // .xx oo. xxo
    //      case  7158: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xox oo. xxo
    //      case  7159: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. xxo
    //      case  7160: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // .ox oo. xxo
    //      case  7161: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // x.x oo. xxo
    //      case  7162: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. xxo
    //      case  7163: Assert::IsTrue(v == PositionValue(-  101                         )); break;  // ..x oo. xxo
    //      case  7164: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // xxo oo. xxo
    //      case  7165: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. xxo
    //      case  7166: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .xo oo. xxo
    //      case  7167: Assert::IsTrue(v == PositionValue(-  492                         )); break;  // xoo oo. xxo
    //      case  7168: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. xxo
    //      case  7169: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // .oo oo. xxo
    //      case  7170: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // x.o oo. xxo
    //      case  7171: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. xxo
    //      case  7172: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // ..o oo. xxo
    //      case  7173: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xx. oo. xxo
    //      case  7174: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. xxo
    //      case  7175: Assert::IsTrue(v == PositionValue(-   99                         )); break;  // .x. oo. xxo
    //      case  7176: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // xo. oo. xxo
    //      case  7177: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. xxo
    //      case  7178: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // .o. oo. xxo
    //      case  7179: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // x.. oo. xxo
    //      case  7180: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. xxo
    //      case  7181: Assert::IsTrue(v == PositionValue(-  144                         )); break;  // ... oo. xxo
    //      case  7182: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. xxo
    //      case  7183: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .o. xxo
    //      case  7184: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .xx .o. xxo
    //      case  7185: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xox .o. xxo
    //      case  7186: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. xxo
    //      case  7187: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // .ox .o. xxo
    //      case  7188: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // x.x .o. xxo
    //      case  7189: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .o. xxo
    //      case  7190: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // ..x .o. xxo
    //      case  7191: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // xxo .o. xxo
    //      case  7192: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. xxo
    //      case  7193: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // .xo .o. xxo
    //      case  7194: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // xoo .o. xxo
    //      case  7195: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. xxo
    //      case  7196: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // .oo .o. xxo
    //      case  7197: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // x.o .o. xxo
    //      case  7198: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. xxo
    //      case  7199: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ..o .o. xxo
    //      case  7200: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // xx. .o. xxo
    //      case  7201: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .o. xxo
    //      case  7202: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // .x. .o. xxo
    //      case  7203: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // xo. .o. xxo
    //      case  7204: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. xxo
    //      case  7205: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // .o. .o. xxo
    //      case  7206: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.. .o. xxo
    //      case  7207: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .o. xxo
    //      case  7208: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // ... .o. xxo
    //      case  7209: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. xxo
    //      case  7210: Assert::IsTrue(v == PositionValue(+  525                         )); break;  // oxx x.. xxo
    //      case  7211: Assert::IsTrue(v == PositionValue(+  586                         )); break;  // .xx x.. xxo
    //      case  7212: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.. xxo
    //      case  7213: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oox x.. xxo
    //      case  7214: Assert::IsTrue(v == PositionValue(+  331                         )); break;  // .ox x.. xxo
    //      case  7215: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.. xxo
    //      case  7216: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // o.x x.. xxo
    //      case  7217: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // ..x x.. xxo
    //      case  7218: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.. xxo
    //      case  7219: Assert::IsTrue(v == PositionValue(+  361                         )); break;  // oxo x.. xxo
    //      case  7220: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // .xo x.. xxo
    //      case  7221: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.. xxo
    //      case  7222: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. xxo
    //      case  7223: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // .oo x.. xxo
    //      case  7224: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.. xxo
    //      case  7225: Assert::IsTrue(v == PositionValue(+  238                         )); break;  // o.o x.. xxo
    //      case  7226: Assert::IsTrue(v == PositionValue(+  290                         )); break;  // ..o x.. xxo
    //      case  7227: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.. xxo
    //      case  7228: Assert::IsTrue(v == PositionValue(+  404                         )); break;  // ox. x.. xxo
    //      case  7229: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // .x. x.. xxo
    //      case  7230: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.. xxo
    //      case  7231: Assert::IsTrue(v == PositionValue(+  149                         )); break;  // oo. x.. xxo
    //      case  7232: Assert::IsTrue(v == PositionValue(+  288                         )); break;  // .o. x.. xxo
    //      case  7233: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.. xxo
    //      case  7234: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // o.. x.. xxo
    //      case  7235: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // ... x.. xxo
    //      case  7236: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. xxo
    //      case  7237: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oxx o.. xxo
    //      case  7238: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .xx o.. xxo
    //      case  7239: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xox o.. xxo
    //      case  7240: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oox o.. xxo
    //      case  7241: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .ox o.. xxo
    //      case  7242: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // x.x o.. xxo
    //      case  7243: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x o.. xxo
    //      case  7244: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // ..x o.. xxo
    //      case  7245: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xxo o.. xxo
    //      case  7246: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // oxo o.. xxo
    //      case  7247: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .xo o.. xxo
    //      case  7248: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xoo o.. xxo
    //      case  7249: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. xxo
    //      case  7250: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .oo o.. xxo
    //      case  7251: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // x.o o.. xxo
    //      case  7252: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.o o.. xxo
    //      case  7253: Assert::IsTrue(v == PositionValue(+   35                         )); break;  // ..o o.. xxo
    //      case  7254: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xx. o.. xxo
    //      case  7255: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ox. o.. xxo
    //      case  7256: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .x. o.. xxo
    //      case  7257: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xo. o.. xxo
    //      case  7258: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oo. o.. xxo
    //      case  7259: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .o. o.. xxo
    //      case  7260: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // x.. o.. xxo
    //      case  7261: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.. o.. xxo
    //      case  7262: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // ... o.. xxo
    //      case  7263: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... xxo
    //      case  7264: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // oxx ... xxo
    //      case  7265: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // .xx ... xxo
    //      case  7266: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // xox ... xxo
    //      case  7267: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oox ... xxo
    //      case  7268: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // .ox ... xxo
    //      case  7269: Assert::IsTrue(v == PositionValue(+  209                         )); break;  // x.x ... xxo
    //      case  7270: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // o.x ... xxo
    //      case  7271: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // ..x ... xxo
    //      case  7272: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // xxo ... xxo
    //      case  7273: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // oxo ... xxo
    //      case  7274: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // .xo ... xxo
    //      case  7275: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xoo ... xxo
    //      case  7276: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... xxo
    //      case  7277: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // .oo ... xxo
    //      case  7278: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.o ... xxo
    //      case  7279: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // o.o ... xxo
    //      case  7280: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ..o ... xxo
    //      case  7281: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // xx. ... xxo
    //      case  7282: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ox. ... xxo
    //      case  7283: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .x. ... xxo
    //      case  7284: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xo. ... xxo
    //      case  7285: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // oo. ... xxo
    //      case  7286: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // .o. ... xxo
    //      case  7287: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // x.. ... xxo
    //      case  7288: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // o.. ... xxo
    //      case  7289: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ... ... xxo
    //      case  7290: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx oxo
    //      case  7291: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx oxo
    //      case  7292: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx oxo
    //      case  7293: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx oxo
    //      case  7294: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx oxo
    //      case  7295: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx oxo
    //      case  7296: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx oxo
    //      case  7297: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx oxo
    //      case  7298: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx oxo
    //      case  7299: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx oxo
    //      case  7300: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx oxo
    //      case  7301: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx oxo
    //      case  7302: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx oxo
    //      case  7303: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx oxo
    //      case  7304: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx oxo
    //      case  7305: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx oxo
    //      case  7306: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx oxo
    //      case  7307: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx oxo
    //      case  7308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx oxo
    //      case  7309: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx oxo
    //      case  7310: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx oxo
    //      case  7311: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx oxo
    //      case  7312: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx oxo
    //      case  7313: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx oxo
    //      case  7314: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx oxo
    //      case  7315: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx oxo
    //      case  7316: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx oxo
    //      case  7317: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx oxo
    //      case  7318: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxx oxo
    //      case  7319: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx oxo
    //      case  7320: Assert::IsTrue(v == PositionValue(+  360                         )); break;  // xox oxx oxo
    //      case  7321: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxx oxo
    //      case  7322: Assert::IsTrue(v == PositionValue(+  230                         )); break;  // .ox oxx oxo
    //      case  7323: Assert::IsTrue(v == PositionValue(+  492                         )); break;  // x.x oxx oxo
    //      case  7324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxx oxo
    //      case  7325: Assert::IsTrue(v == PositionValue(+  362                         )); break;  // ..x oxx oxo
    //      case  7326: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx oxo
    //      case  7327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxx oxo
    //      case  7328: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxx oxo
    //      case  7329: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xoo oxx oxo
    //      case  7330: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx oxo
    //      case  7331: Assert::IsTrue(v == PositionValue(-   99                         )); break;  // .oo oxx oxo
    //      case  7332: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // x.o oxx oxo
    //      case  7333: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxx oxo
    //      case  7334: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // ..o oxx oxo
    //      case  7335: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx oxo
    //      case  7336: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxx oxo
    //      case  7337: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxx oxo
    //      case  7338: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // xo. oxx oxo
    //      case  7339: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxx oxo
    //      case  7340: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // .o. oxx oxo
    //      case  7341: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // x.. oxx oxo
    //      case  7342: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxx oxo
    //      case  7343: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ... oxx oxo
    //      case  7344: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx oxo
    //      case  7345: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx oxo
    //      case  7346: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx oxo
    //      case  7347: Assert::IsTrue(v == PositionValue(+  570                         )); break;  // xox .xx oxo
    //      case  7348: Assert::IsTrue(v == PositionValue(+  328                         )); break;  // oox .xx oxo
    //      case  7349: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // .ox .xx oxo
    //      case  7350: Assert::IsTrue(v == PositionValue(+  624                         )); break;  // x.x .xx oxo
    //      case  7351: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // o.x .xx oxo
    //      case  7352: Assert::IsTrue(v == PositionValue(+  503                         )); break;  // ..x .xx oxo
    //      case  7353: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx oxo
    //      case  7354: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xx oxo
    //      case  7355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xx oxo
    //      case  7356: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xoo .xx oxo
    //      case  7357: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx oxo
    //      case  7358: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // .oo .xx oxo
    //      case  7359: Assert::IsTrue(v == PositionValue(+  382                         )); break;  // x.o .xx oxo
    //      case  7360: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // o.o .xx oxo
    //      case  7361: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // ..o .xx oxo
    //      case  7362: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx oxo
    //      case  7363: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xx oxo
    //      case  7364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xx oxo
    //      case  7365: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // xo. .xx oxo
    //      case  7366: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // oo. .xx oxo
    //      case  7367: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .o. .xx oxo
    //      case  7368: Assert::IsTrue(v == PositionValue(+  425                         )); break;  // x.. .xx oxo
    //      case  7369: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // o.. .xx oxo
    //      case  7370: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // ... .xx oxo
    //      case  7371: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox oxo
    //      case  7372: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xox oxo
    //      case  7373: Assert::IsTrue(v == PositionValue(+  401                         )); break;  // .xx xox oxo
    //      case  7374: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // xox xox oxo
    //      case  7375: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox oxo
    //      case  7376: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .ox xox oxo
    //      case  7377: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // x.x xox oxo
    //      case  7378: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xox oxo
    //      case  7379: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // ..x xox oxo
    //      case  7380: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xox oxo
    //      case  7381: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox oxo
    //      case  7382: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xox oxo
    //      case  7383: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xox oxo
    //      case  7384: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox oxo
    //      case  7385: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox oxo
    //      case  7386: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xox oxo
    //      case  7387: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox oxo
    //      case  7388: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xox oxo
    //      case  7389: Assert::IsTrue(v == PositionValue(+  401                         )); break;  // xx. xox oxo
    //      case  7390: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xox oxo
    //      case  7391: Assert::IsTrue(v == PositionValue(+  184                         )); break;  // .x. xox oxo
    //      case  7392: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // xo. xox oxo
    //      case  7393: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox oxo
    //      case  7394: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // .o. xox oxo
    //      case  7395: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // x.. xox oxo
    //      case  7396: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xox oxo
    //      case  7397: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // ... xox oxo
    //      case  7398: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox oxo
    //      case  7399: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox oxo
    //      case  7400: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .xx oox oxo
    //      case  7401: Assert::IsTrue(v == PositionValue(-  360                         )); break;  // xox oox oxo
    //      case  7402: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox oxo
    //      case  7403: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .ox oox oxo
    //      case  7404: Assert::IsTrue(v == PositionValue(-  159                         )); break;  // x.x oox oxo
    //      case  7405: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox oxo
    //      case  7406: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // ..x oox oxo
    //      case  7407: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oox oxo
    //      case  7408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox oxo
    //      case  7409: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oox oxo
    //      case  7410: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox oxo
    //      case  7411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox oxo
    //      case  7412: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox oxo
    //      case  7413: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oox oxo
    //      case  7414: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox oxo
    //      case  7415: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oox oxo
    //      case  7416: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // xx. oox oxo
    //      case  7417: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox oxo
    //      case  7418: Assert::IsTrue(v == PositionValue(-  227                         )); break;  // .x. oox oxo
    //      case  7419: Assert::IsTrue(v == PositionValue(-  490                         )); break;  // xo. oox oxo
    //      case  7420: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox oxo
    //      case  7421: Assert::IsTrue(v == PositionValue(-  551                         )); break;  // .o. oox oxo
    //      case  7422: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // x.. oox oxo
    //      case  7423: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox oxo
    //      case  7424: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // ... oox oxo
    //      case  7425: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox oxo
    //      case  7426: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .ox oxo
    //      case  7427: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // .xx .ox oxo
    //      case  7428: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // xox .ox oxo
    //      case  7429: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox oxo
    //      case  7430: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .ox .ox oxo
    //      case  7431: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // x.x .ox oxo
    //      case  7432: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .ox oxo
    //      case  7433: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ..x .ox oxo
    //      case  7434: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .ox oxo
    //      case  7435: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox oxo
    //      case  7436: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .ox oxo
    //      case  7437: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox oxo
    //      case  7438: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox oxo
    //      case  7439: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox oxo
    //      case  7440: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .ox oxo
    //      case  7441: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox oxo
    //      case  7442: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .ox oxo
    //      case  7443: Assert::IsTrue(v == PositionValue(+  122                         )); break;  // xx. .ox oxo
    //      case  7444: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .ox oxo
    //      case  7445: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // .x. .ox oxo
    //      case  7446: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // xo. .ox oxo
    //      case  7447: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox oxo
    //      case  7448: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // .o. .ox oxo
    //      case  7449: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // x.. .ox oxo
    //      case  7450: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .ox oxo
    //      case  7451: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // ... .ox oxo
    //      case  7452: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x oxo
    //      case  7453: Assert::IsTrue(v == PositionValue(+  562                         )); break;  // oxx x.x oxo
    //      case  7454: Assert::IsTrue(v == PositionValue(+  614                         )); break;  // .xx x.x oxo
    //      case  7455: Assert::IsTrue(v == PositionValue(+  402                         )); break;  // xox x.x oxo
    //      case  7456: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // oox x.x oxo
    //      case  7457: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // .ox x.x oxo
    //      case  7458: Assert::IsTrue(v == PositionValue(+  447                         )); break;  // x.x x.x oxo
    //      case  7459: Assert::IsTrue(v == PositionValue(+  283                         )); break;  // o.x x.x oxo
    //      case  7460: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // ..x x.x oxo
    //      case  7461: Assert::IsTrue(v == PositionValue(+  562                         )); break;  // xxo x.x oxo
    //      case  7462: Assert::IsTrue(v == PositionValue(+  320                         )); break;  // oxo x.x oxo
    //      case  7463: Assert::IsTrue(v == PositionValue(+  363                         )); break;  // .xo x.x oxo
    //      case  7464: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // xoo x.x oxo
    //      case  7465: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x oxo
    //      case  7466: Assert::IsTrue(v == PositionValue(+   30                         )); break;  // .oo x.x oxo
    //      case  7467: Assert::IsTrue(v == PositionValue(+  283                         )); break;  // x.o x.x oxo
    //      case  7468: Assert::IsTrue(v == PositionValue(+  119                         )); break;  // o.o x.x oxo
    //      case  7469: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // ..o x.x oxo
    //      case  7470: Assert::IsTrue(v == PositionValue(+  614                         )); break;  // xx. x.x oxo
    //      case  7471: Assert::IsTrue(v == PositionValue(+  363                         )); break;  // ox. x.x oxo
    //      case  7472: Assert::IsTrue(v == PositionValue(+  406                         )); break;  // .x. x.x oxo
    //      case  7473: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // xo. x.x oxo
    //      case  7474: Assert::IsTrue(v == PositionValue(+   30                         )); break;  // oo. x.x oxo
    //      case  7475: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // .o. x.x oxo
    //      case  7476: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // x.. x.x oxo
    //      case  7477: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // o.. x.x oxo
    //      case  7478: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // ... x.x oxo
    //      case  7479: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x oxo
    //      case  7480: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.x oxo
    //      case  7481: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // .xx o.x oxo
    //      case  7482: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xox o.x oxo
    //      case  7483: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.x oxo
    //      case  7484: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // .ox o.x oxo
    //      case  7485: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.x o.x oxo
    //      case  7486: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.x oxo
    //      case  7487: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // ..x o.x oxo
    //      case  7488: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // xxo o.x oxo
    //      case  7489: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.x oxo
    //      case  7490: Assert::IsTrue(v == PositionValue(+   30                         )); break;  // .xo o.x oxo
    //      case  7491: Assert::IsTrue(v == PositionValue(-  242                         )); break;  // xoo o.x oxo
    //      case  7492: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x oxo
    //      case  7493: Assert::IsTrue(v == PositionValue(-  303                         )); break;  // .oo o.x oxo
    //      case  7494: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // x.o o.x oxo
    //      case  7495: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.x oxo
    //      case  7496: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // ..o o.x oxo
    //      case  7497: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // xx. o.x oxo
    //      case  7498: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.x oxo
    //      case  7499: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // .x. o.x oxo
    //      case  7500: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // xo. o.x oxo
    //      case  7501: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.x oxo
    //      case  7502: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .o. o.x oxo
    //      case  7503: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // x.. o.x oxo
    //      case  7504: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.x oxo
    //      case  7505: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // ... o.x oxo
    //      case  7506: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x oxo
    //      case  7507: Assert::IsTrue(v == PositionValue(+  361                         )); break;  // oxx ..x oxo
    //      case  7508: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // .xx ..x oxo
    //      case  7509: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xox ..x oxo
    //      case  7510: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // oox ..x oxo
    //      case  7511: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // .ox ..x oxo
    //      case  7512: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // x.x ..x oxo
    //      case  7513: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // o.x ..x oxo
    //      case  7514: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // ..x ..x oxo
    //      case  7515: Assert::IsTrue(v == PositionValue(+  283                         )); break;  // xxo ..x oxo
    //      case  7516: Assert::IsTrue(v == PositionValue(+  119                         )); break;  // oxo ..x oxo
    //      case  7517: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // .xo ..x oxo
    //      case  7518: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // xoo ..x oxo
    //      case  7519: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x oxo
    //      case  7520: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // .oo ..x oxo
    //      case  7521: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // x.o ..x oxo
    //      case  7522: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // o.o ..x oxo
    //      case  7523: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // ..o ..x oxo
    //      case  7524: Assert::IsTrue(v == PositionValue(+  335                         )); break;  // xx. ..x oxo
    //      case  7525: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // ox. ..x oxo
    //      case  7526: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // .x. ..x oxo
    //      case  7527: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // xo. ..x oxo
    //      case  7528: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // oo. ..x oxo
    //      case  7529: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // .o. ..x oxo
    //      case  7530: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // x.. ..x oxo
    //      case  7531: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // o.. ..x oxo
    //      case  7532: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // ... ..x oxo
    //      case  7533: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo oxo
    //      case  7534: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo oxo
    //      case  7535: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo oxo
    //      case  7536: Assert::IsTrue(v == PositionValue(+  360                         )); break;  // xox xxo oxo
    //      case  7537: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oox xxo oxo
    //      case  7538: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // .ox xxo oxo
    //      case  7539: Assert::IsTrue(v == PositionValue(+  492                         )); break;  // x.x xxo oxo
    //      case  7540: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // o.x xxo oxo
    //      case  7541: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // ..x xxo oxo
    //      case  7542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo oxo
    //      case  7543: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxo oxo
    //      case  7544: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxo oxo
    //      case  7545: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xxo oxo
    //      case  7546: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo oxo
    //      case  7547: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xxo oxo
    //      case  7548: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xxo oxo
    //      case  7549: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xxo oxo
    //      case  7550: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xxo oxo
    //      case  7551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo oxo
    //      case  7552: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxo oxo
    //      case  7553: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxo oxo
    //      case  7554: Assert::IsTrue(v == PositionValue(+  230                         )); break;  // xo. xxo oxo
    //      case  7555: Assert::IsTrue(v == PositionValue(-   99                         )); break;  // oo. xxo oxo
    //      case  7556: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // .o. xxo oxo
    //      case  7557: Assert::IsTrue(v == PositionValue(+  362                         )); break;  // x.. xxo oxo
    //      case  7558: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // o.. xxo oxo
    //      case  7559: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ... xxo oxo
    //      case  7560: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo oxo
    //      case  7561: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxo oxo
    //      case  7562: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo oxo
    //      case  7563: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // xox oxo oxo
    //      case  7564: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxo oxo
    //      case  7565: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .ox oxo oxo
    //      case  7566: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // x.x oxo oxo
    //      case  7567: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxo oxo
    //      case  7568: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ..x oxo oxo
    //      case  7569: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo oxo
    //      case  7570: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo oxo
    //      case  7571: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxo oxo
    //      case  7572: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oxo oxo
    //      case  7573: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo oxo
    //      case  7574: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oxo oxo
    //      case  7575: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oxo oxo
    //      case  7576: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo oxo
    //      case  7577: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oxo oxo
    //      case  7578: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo oxo
    //      case  7579: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxo oxo
    //      case  7580: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxo oxo
    //      case  7581: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xo. oxo oxo
    //      case  7582: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxo oxo
    //      case  7583: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // .o. oxo oxo
    //      case  7584: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // x.. oxo oxo
    //      case  7585: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxo oxo
    //      case  7586: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ... oxo oxo
    //      case  7587: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo oxo
    //      case  7588: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo oxo
    //      case  7589: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo oxo
    //      case  7590: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xox .xo oxo
    //      case  7591: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // oox .xo oxo
    //      case  7592: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .ox .xo oxo
    //      case  7593: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.x .xo oxo
    //      case  7594: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // o.x .xo oxo
    //      case  7595: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ..x .xo oxo
    //      case  7596: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo oxo
    //      case  7597: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xo oxo
    //      case  7598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xo oxo
    //      case  7599: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .xo oxo
    //      case  7600: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo oxo
    //      case  7601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .xo oxo
    //      case  7602: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .xo oxo
    //      case  7603: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .xo oxo
    //      case  7604: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .xo oxo
    //      case  7605: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo oxo
    //      case  7606: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xo oxo
    //      case  7607: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xo oxo
    //      case  7608: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // xo. .xo oxo
    //      case  7609: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // oo. .xo oxo
    //      case  7610: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .o. .xo oxo
    //      case  7611: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // x.. .xo oxo
    //      case  7612: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.. .xo oxo
    //      case  7613: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ... .xo oxo
    //      case  7614: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo oxo
    //      case  7615: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xoo oxo
    //      case  7616: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // .xx xoo oxo
    //      case  7617: Assert::IsTrue(v == PositionValue(-  360                         )); break;  // xox xoo oxo
    //      case  7618: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo oxo
    //      case  7619: Assert::IsTrue(v == PositionValue(-  490                         )); break;  // .ox xoo oxo
    //      case  7620: Assert::IsTrue(v == PositionValue(-  159                         )); break;  // x.x xoo oxo
    //      case  7621: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xoo oxo
    //      case  7622: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // ..x xoo oxo
    //      case  7623: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xoo oxo
    //      case  7624: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo oxo
    //      case  7625: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo oxo
    //      case  7626: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo oxo
    //      case  7627: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo oxo
    //      case  7628: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo oxo
    //      case  7629: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xoo oxo
    //      case  7630: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo oxo
    //      case  7631: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo oxo
    //      case  7632: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // xx. xoo oxo
    //      case  7633: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xoo oxo
    //      case  7634: Assert::IsTrue(v == PositionValue(-  227                         )); break;  // .x. xoo oxo
    //      case  7635: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // xo. xoo oxo
    //      case  7636: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo oxo
    //      case  7637: Assert::IsTrue(v == PositionValue(-  551                         )); break;  // .o. xoo oxo
    //      case  7638: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // x.. xoo oxo
    //      case  7639: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xoo oxo
    //      case  7640: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // ... xoo oxo
    //      case  7641: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo oxo
    //      case  7642: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo oxo
    //      case  7643: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo oxo
    //      case  7644: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo oxo
    //      case  7645: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo oxo
    //      case  7646: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo oxo
    //      case  7647: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo oxo
    //      case  7648: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo oxo
    //      case  7649: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo oxo
    //      case  7650: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo oxo
    //      case  7651: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo oxo
    //      case  7652: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo oxo
    //      case  7653: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo oxo
    //      case  7654: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo oxo
    //      case  7655: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo oxo
    //      case  7656: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo oxo
    //      case  7657: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo oxo
    //      case  7658: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo oxo
    //      case  7659: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo oxo
    //      case  7660: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo oxo
    //      case  7661: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo oxo
    //      case  7662: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo oxo
    //      case  7663: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo oxo
    //      case  7664: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo oxo
    //      case  7665: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo oxo
    //      case  7666: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo oxo
    //      case  7667: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo oxo
    //      case  7668: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo oxo
    //      case  7669: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .oo oxo
    //      case  7670: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // .xx .oo oxo
    //      case  7671: Assert::IsTrue(v == PositionValue(-  570                         )); break;  // xox .oo oxo
    //      case  7672: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo oxo
    //      case  7673: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // .ox .oo oxo
    //      case  7674: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // x.x .oo oxo
    //      case  7675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .oo oxo
    //      case  7676: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // ..x .oo oxo
    //      case  7677: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo oxo
    //      case  7678: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo oxo
    //      case  7679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo oxo
    //      case  7680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo oxo
    //      case  7681: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo oxo
    //      case  7682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo oxo
    //      case  7683: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo oxo
    //      case  7684: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo oxo
    //      case  7685: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo oxo
    //      case  7686: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // xx. .oo oxo
    //      case  7687: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .oo oxo
    //      case  7688: Assert::IsTrue(v == PositionValue(-  437                         )); break;  // .x. .oo oxo
    //      case  7689: Assert::IsTrue(v == PositionValue(-  631                         )); break;  // xo. .oo oxo
    //      case  7690: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo oxo
    //      case  7691: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // .o. .oo oxo
    //      case  7692: Assert::IsTrue(v == PositionValue(-  430                         )); break;  // x.. .oo oxo
    //      case  7693: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .oo oxo
    //      case  7694: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // ... .oo oxo
    //      case  7695: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o oxo
    //      case  7696: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // oxx x.o oxo
    //      case  7697: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // .xx x.o oxo
    //      case  7698: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xox x.o oxo
    //      case  7699: Assert::IsTrue(v == PositionValue(-  242                         )); break;  // oox x.o oxo
    //      case  7700: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // .ox x.o oxo
    //      case  7701: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.x x.o oxo
    //      case  7702: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.x x.o oxo
    //      case  7703: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ..x x.o oxo
    //      case  7704: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo x.o oxo
    //      case  7705: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo x.o oxo
    //      case  7706: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo x.o oxo
    //      case  7707: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo x.o oxo
    //      case  7708: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o oxo
    //      case  7709: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo x.o oxo
    //      case  7710: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o x.o oxo
    //      case  7711: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o x.o oxo
    //      case  7712: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o x.o oxo
    //      case  7713: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // xx. x.o oxo
    //      case  7714: Assert::IsTrue(v == PositionValue(+   30                         )); break;  // ox. x.o oxo
    //      case  7715: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // .x. x.o oxo
    //      case  7716: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // xo. x.o oxo
    //      case  7717: Assert::IsTrue(v == PositionValue(-  303                         )); break;  // oo. x.o oxo
    //      case  7718: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .o. x.o oxo
    //      case  7719: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // x.. x.o oxo
    //      case  7720: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // o.. x.o oxo
    //      case  7721: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // ... x.o oxo
    //      case  7722: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o oxo
    //      case  7723: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.o oxo
    //      case  7724: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // .xx o.o oxo
    //      case  7725: Assert::IsTrue(v == PositionValue(-  402                         )); break;  // xox o.o oxo
    //      case  7726: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.o oxo
    //      case  7727: Assert::IsTrue(v == PositionValue(-  454                         )); break;  // .ox o.o oxo
    //      case  7728: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // x.x o.o oxo
    //      case  7729: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.o oxo
    //      case  7730: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // ..x o.o oxo
    //      case  7731: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo o.o oxo
    //      case  7732: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o oxo
    //      case  7733: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo o.o oxo
    //      case  7734: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo o.o oxo
    //      case  7735: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o oxo
    //      case  7736: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo o.o oxo
    //      case  7737: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o o.o oxo
    //      case  7738: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o oxo
    //      case  7739: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o o.o oxo
    //      case  7740: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // xx. o.o oxo
    //      case  7741: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.o oxo
    //      case  7742: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // .x. o.o oxo
    //      case  7743: Assert::IsTrue(v == PositionValue(-  454                         )); break;  // xo. o.o oxo
    //      case  7744: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.o oxo
    //      case  7745: Assert::IsTrue(v == PositionValue(-  506                         )); break;  // .o. o.o oxo
    //      case  7746: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // x.. o.o oxo
    //      case  7747: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.o oxo
    //      case  7748: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // ... o.o oxo
    //      case  7749: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o oxo
    //      case  7750: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // oxx ..o oxo
    //      case  7751: Assert::IsTrue(v == PositionValue(+   11                         )); break;  // .xx ..o oxo
    //      case  7752: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xox ..o oxo
    //      case  7753: Assert::IsTrue(v == PositionValue(-  365                         )); break;  // oox ..o oxo
    //      case  7754: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // .ox ..o oxo
    //      case  7755: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // x.x ..o oxo
    //      case  7756: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // o.x ..o oxo
    //      case  7757: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // ..x ..o oxo
    //      case  7758: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ..o oxo
    //      case  7759: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ..o oxo
    //      case  7760: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ..o oxo
    //      case  7761: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ..o oxo
    //      case  7762: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o oxo
    //      case  7763: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ..o oxo
    //      case  7764: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ..o oxo
    //      case  7765: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ..o oxo
    //      case  7766: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ..o oxo
    //      case  7767: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // xx. ..o oxo
    //      case  7768: Assert::IsTrue(v == PositionValue(-  171                         )); break;  // ox. ..o oxo
    //      case  7769: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // .x. ..o oxo
    //      case  7770: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // xo. ..o oxo
    //      case  7771: Assert::IsTrue(v == PositionValue(-  426                         )); break;  // oo. ..o oxo
    //      case  7772: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // .o. ..o oxo
    //      case  7773: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // x.. ..o oxo
    //      case  7774: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // o.. ..o oxo
    //      case  7775: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ... ..o oxo
    //      case  7776: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. oxo
    //      case  7777: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. oxo
    //      case  7778: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. oxo
    //      case  7779: Assert::IsTrue(v == PositionValue(+  570                         )); break;  // xox xx. oxo
    //      case  7780: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // oox xx. oxo
    //      case  7781: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // .ox xx. oxo
    //      case  7782: Assert::IsTrue(v == PositionValue(+  624                         )); break;  // x.x xx. oxo
    //      case  7783: Assert::IsTrue(v == PositionValue(+  382                         )); break;  // o.x xx. oxo
    //      case  7784: Assert::IsTrue(v == PositionValue(+  425                         )); break;  // ..x xx. oxo
    //      case  7785: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. oxo
    //      case  7786: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xx. oxo
    //      case  7787: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xx. oxo
    //      case  7788: Assert::IsTrue(v == PositionValue(+  328                         )); break;  // xoo xx. oxo
    //      case  7789: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. oxo
    //      case  7790: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // .oo xx. oxo
    //      case  7791: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // x.o xx. oxo
    //      case  7792: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // o.o xx. oxo
    //      case  7793: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // ..o xx. oxo
    //      case  7794: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. oxo
    //      case  7795: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xx. oxo
    //      case  7796: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xx. oxo
    //      case  7797: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // xo. xx. oxo
    //      case  7798: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // oo. xx. oxo
    //      case  7799: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .o. xx. oxo
    //      case  7800: Assert::IsTrue(v == PositionValue(+  503                         )); break;  // x.. xx. oxo
    //      case  7801: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // o.. xx. oxo
    //      case  7802: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // ... xx. oxo
    //      case  7803: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. oxo
    //      case  7804: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ox. oxo
    //      case  7805: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. oxo
    //      case  7806: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xox ox. oxo
    //      case  7807: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ox. oxo
    //      case  7808: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // .ox ox. oxo
    //      case  7809: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.x ox. oxo
    //      case  7810: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ox. oxo
    //      case  7811: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // ..x ox. oxo
    //      case  7812: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. oxo
    //      case  7813: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ox. oxo
    //      case  7814: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo ox. oxo
    //      case  7815: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xoo ox. oxo
    //      case  7816: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. oxo
    //      case  7817: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // .oo ox. oxo
    //      case  7818: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // x.o ox. oxo
    //      case  7819: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ox. oxo
    //      case  7820: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ..o ox. oxo
    //      case  7821: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. oxo
    //      case  7822: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ox. oxo
    //      case  7823: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. ox. oxo
    //      case  7824: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xo. ox. oxo
    //      case  7825: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ox. oxo
    //      case  7826: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .o. ox. oxo
    //      case  7827: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // x.. ox. oxo
    //      case  7828: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ox. oxo
    //      case  7829: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ... ox. oxo
    //      case  7830: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. oxo
    //      case  7831: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. oxo
    //      case  7832: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. oxo
    //      case  7833: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // xox .x. oxo
    //      case  7834: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oox .x. oxo
    //      case  7835: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // .ox .x. oxo
    //      case  7836: Assert::IsTrue(v == PositionValue(+  336                         )); break;  // x.x .x. oxo
    //      case  7837: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // o.x .x. oxo
    //      case  7838: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // ..x .x. oxo
    //      case  7839: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. oxo
    //      case  7840: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .x. oxo
    //      case  7841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .x. oxo
    //      case  7842: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xoo .x. oxo
    //      case  7843: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. oxo
    //      case  7844: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .oo .x. oxo
    //      case  7845: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // x.o .x. oxo
    //      case  7846: Assert::IsTrue(v == PositionValue(+    8                         )); break;  // o.o .x. oxo
    //      case  7847: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // ..o .x. oxo
    //      case  7848: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. oxo
    //      case  7849: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .x. oxo
    //      case  7850: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .x. oxo
    //      case  7851: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // xo. .x. oxo
    //      case  7852: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // oo. .x. oxo
    //      case  7853: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .o. .x. oxo
    //      case  7854: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // x.. .x. oxo
    //      case  7855: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // o.. .x. oxo
    //      case  7856: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // ... .x. oxo
    //      case  7857: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. oxo
    //      case  7858: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xo. oxo
    //      case  7859: Assert::IsTrue(v == PositionValue(+  122                         )); break;  // .xx xo. oxo
    //      case  7860: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // xox xo. oxo
    //      case  7861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. oxo
    //      case  7862: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // .ox xo. oxo
    //      case  7863: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // x.x xo. oxo
    //      case  7864: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xo. oxo
    //      case  7865: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ..x xo. oxo
    //      case  7866: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xo. oxo
    //      case  7867: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. oxo
    //      case  7868: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xo. oxo
    //      case  7869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xo. oxo
    //      case  7870: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. oxo
    //      case  7871: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. oxo
    //      case  7872: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xo. oxo
    //      case  7873: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. oxo
    //      case  7874: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xo. oxo
    //      case  7875: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // xx. xo. oxo
    //      case  7876: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xo. oxo
    //      case  7877: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // .x. xo. oxo
    //      case  7878: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // xo. xo. oxo
    //      case  7879: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. oxo
    //      case  7880: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // .o. xo. oxo
    //      case  7881: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // x.. xo. oxo
    //      case  7882: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xo. oxo
    //      case  7883: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // ... xo. oxo
    //      case  7884: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. oxo
    //      case  7885: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. oxo
    //      case  7886: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // .xx oo. oxo
    //      case  7887: Assert::IsTrue(v == PositionValue(-  570                         )); break;  // xox oo. oxo
    //      case  7888: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. oxo
    //      case  7889: Assert::IsTrue(v == PositionValue(-  631                         )); break;  // .ox oo. oxo
    //      case  7890: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // x.x oo. oxo
    //      case  7891: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. oxo
    //      case  7892: Assert::IsTrue(v == PositionValue(-  430                         )); break;  // ..x oo. oxo
    //      case  7893: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oo. oxo
    //      case  7894: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. oxo
    //      case  7895: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oo. oxo
    //      case  7896: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. oxo
    //      case  7897: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. oxo
    //      case  7898: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. oxo
    //      case  7899: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oo. oxo
    //      case  7900: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. oxo
    //      case  7901: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oo. oxo
    //      case  7902: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // xx. oo. oxo
    //      case  7903: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. oxo
    //      case  7904: Assert::IsTrue(v == PositionValue(-  437                         )); break;  // .x. oo. oxo
    //      case  7905: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // xo. oo. oxo
    //      case  7906: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. oxo
    //      case  7907: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // .o. oo. oxo
    //      case  7908: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // x.. oo. oxo
    //      case  7909: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. oxo
    //      case  7910: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // ... oo. oxo
    //      case  7911: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. oxo
    //      case  7912: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .o. oxo
    //      case  7913: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // .xx .o. oxo
    //      case  7914: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // xox .o. oxo
    //      case  7915: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. oxo
    //      case  7916: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // .ox .o. oxo
    //      case  7917: Assert::IsTrue(v == PositionValue(-  159                         )); break;  // x.x .o. oxo
    //      case  7918: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .o. oxo
    //      case  7919: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // ..x .o. oxo
    //      case  7920: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .o. oxo
    //      case  7921: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. oxo
    //      case  7922: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .o. oxo
    //      case  7923: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. oxo
    //      case  7924: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. oxo
    //      case  7925: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. oxo
    //      case  7926: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .o. oxo
    //      case  7927: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. oxo
    //      case  7928: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .o. oxo
    //      case  7929: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // xx. .o. oxo
    //      case  7930: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .o. oxo
    //      case  7931: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // .x. .o. oxo
    //      case  7932: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // xo. .o. oxo
    //      case  7933: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. oxo
    //      case  7934: Assert::IsTrue(v == PositionValue(-  386                         )); break;  // .o. .o. oxo
    //      case  7935: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // x.. .o. oxo
    //      case  7936: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .o. oxo
    //      case  7937: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // ... .o. oxo
    //      case  7938: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. oxo
    //      case  7939: Assert::IsTrue(v == PositionValue(+  283                         )); break;  // oxx x.. oxo
    //      case  7940: Assert::IsTrue(v == PositionValue(+  335                         )); break;  // .xx x.. oxo
    //      case  7941: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xox x.. oxo
    //      case  7942: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // oox x.. oxo
    //      case  7943: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .ox x.. oxo
    //      case  7944: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // x.x x.. oxo
    //      case  7945: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // o.x x.. oxo
    //      case  7946: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ..x x.. oxo
    //      case  7947: Assert::IsTrue(v == PositionValue(+  361                         )); break;  // xxo x.. oxo
    //      case  7948: Assert::IsTrue(v == PositionValue(+  119                         )); break;  // oxo x.. oxo
    //      case  7949: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // .xo x.. oxo
    //      case  7950: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // xoo x.. oxo
    //      case  7951: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. oxo
    //      case  7952: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // .oo x.. oxo
    //      case  7953: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // x.o x.. oxo
    //      case  7954: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // o.o x.. oxo
    //      case  7955: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // ..o x.. oxo
    //      case  7956: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // xx. x.. oxo
    //      case  7957: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // ox. x.. oxo
    //      case  7958: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // .x. x.. oxo
    //      case  7959: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // xo. x.. oxo
    //      case  7960: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // oo. x.. oxo
    //      case  7961: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // .o. x.. oxo
    //      case  7962: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // x.. x.. oxo
    //      case  7963: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // o.. x.. oxo
    //      case  7964: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // ... x.. oxo
    //      case  7965: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. oxo
    //      case  7966: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.. oxo
    //      case  7967: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .xx o.. oxo
    //      case  7968: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xox o.. oxo
    //      case  7969: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.. oxo
    //      case  7970: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .ox o.. oxo
    //      case  7971: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // x.x o.. oxo
    //      case  7972: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.. oxo
    //      case  7973: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ..x o.. oxo
    //      case  7974: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // xxo o.. oxo
    //      case  7975: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.. oxo
    //      case  7976: Assert::IsTrue(v == PositionValue(-  171                         )); break;  // .xo o.. oxo
    //      case  7977: Assert::IsTrue(v == PositionValue(-  365                         )); break;  // xoo o.. oxo
    //      case  7978: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. oxo
    //      case  7979: Assert::IsTrue(v == PositionValue(-  426                         )); break;  // .oo o.. oxo
    //      case  7980: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // x.o o.. oxo
    //      case  7981: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.. oxo
    //      case  7982: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // ..o o.. oxo
    //      case  7983: Assert::IsTrue(v == PositionValue(+   11                         )); break;  // xx. o.. oxo
    //      case  7984: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.. oxo
    //      case  7985: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // .x. o.. oxo
    //      case  7986: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // xo. o.. oxo
    //      case  7987: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.. oxo
    //      case  7988: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // .o. o.. oxo
    //      case  7989: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // x.. o.. oxo
    //      case  7990: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.. oxo
    //      case  7991: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ... o.. oxo
    //      case  7992: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... oxo
    //      case  7993: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // oxx ... oxo
    //      case  7994: Assert::IsTrue(v == PositionValue(+  134                         )); break;  // .xx ... oxo
    //      case  7995: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xox ... oxo
    //      case  7996: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // oox ... oxo
    //      case  7997: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .ox ... oxo
    //      case  7998: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // x.x ... oxo
    //      case  7999: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.x ... oxo
    //      case  8000: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ..x ... oxo
    //      case  8001: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // xxo ... oxo
    //      case  8002: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // oxo ... oxo
    //      case  8003: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // .xo ... oxo
    //      case  8004: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // xoo ... oxo
    //      case  8005: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... oxo
    //      case  8006: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // .oo ... oxo
    //      case  8007: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // x.o ... oxo
    //      case  8008: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // o.o ... oxo
    //      case  8009: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // ..o ... oxo
    //      case  8010: Assert::IsTrue(v == PositionValue(+  134                         )); break;  // xx. ... oxo
    //      case  8011: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // ox. ... oxo
    //      case  8012: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // .x. ... oxo
    //      case  8013: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // xo. ... oxo
    //      case  8014: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // oo. ... oxo
    //      case  8015: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // .o. ... oxo
    //      case  8016: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // x.. ... oxo
    //      case  8017: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // o.. ... oxo
    //      case  8018: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // ... ... oxo
    //      case  8019: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx .xo
    //      case  8020: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx .xo
    //      case  8021: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx .xo
    //      case  8022: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx .xo
    //      case  8023: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx .xo
    //      case  8024: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx .xo
    //      case  8025: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx .xo
    //      case  8026: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx .xo
    //      case  8027: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx .xo
    //      case  8028: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx .xo
    //      case  8029: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx .xo
    //      case  8030: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx .xo
    //      case  8031: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx .xo
    //      case  8032: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx .xo
    //      case  8033: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx .xo
    //      case  8034: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx .xo
    //      case  8035: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx .xo
    //      case  8036: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx .xo
    //      case  8037: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx .xo
    //      case  8038: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx .xo
    //      case  8039: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx .xo
    //      case  8040: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx .xo
    //      case  8041: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx .xo
    //      case  8042: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx .xo
    //      case  8043: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx .xo
    //      case  8044: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx .xo
    //      case  8045: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx .xo
    //      case  8046: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx .xo
    //      case  8047: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx .xo
    //      case  8048: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx .xo
    //      case  8049: Assert::IsTrue(v == PositionValue(+  490                         )); break;  // xox oxx .xo
    //      case  8050: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // oox oxx .xo
    //      case  8051: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // .ox oxx .xo
    //      case  8052: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // x.x oxx .xo
    //      case  8053: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // o.x oxx .xo
    //      case  8054: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // ..x oxx .xo
    //      case  8055: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx .xo
    //      case  8056: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oxx .xo
    //      case  8057: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxx .xo
    //      case  8058: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // xoo oxx .xo
    //      case  8059: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx .xo
    //      case  8060: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // .oo oxx .xo
    //      case  8061: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // x.o oxx .xo
    //      case  8062: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // o.o oxx .xo
    //      case  8063: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // ..o oxx .xo
    //      case  8064: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx .xo
    //      case  8065: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oxx .xo
    //      case  8066: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxx .xo
    //      case  8067: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // xo. oxx .xo
    //      case  8068: Assert::IsTrue(v == PositionValue(-   56                         )); break;  // oo. oxx .xo
    //      case  8069: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // .o. oxx .xo
    //      case  8070: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // x.. oxx .xo
    //      case  8071: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // o.. oxx .xo
    //      case  8072: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // ... oxx .xo
    //      case  8073: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx .xo
    //      case  8074: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx .xo
    //      case  8075: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx .xo
    //      case  8076: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // xox .xx .xo
    //      case  8077: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // oox .xx .xo
    //      case  8078: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .ox .xx .xo
    //      case  8079: Assert::IsTrue(v == PositionValue(+  676                         )); break;  // x.x .xx .xo
    //      case  8080: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // o.x .xx .xo
    //      case  8081: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // ..x .xx .xo
    //      case  8082: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx .xo
    //      case  8083: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xx .xo
    //      case  8084: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xx .xo
    //      case  8085: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // xoo .xx .xo
    //      case  8086: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx .xo
    //      case  8087: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .oo .xx .xo
    //      case  8088: Assert::IsTrue(v == PositionValue(+  425                         )); break;  // x.o .xx .xo
    //      case  8089: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // o.o .xx .xo
    //      case  8090: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // ..o .xx .xo
    //      case  8091: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx .xo
    //      case  8092: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xx .xo
    //      case  8093: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xx .xo
    //      case  8094: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // xo. .xx .xo
    //      case  8095: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // oo. .xx .xo
    //      case  8096: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .o. .xx .xo
    //      case  8097: Assert::IsTrue(v == PositionValue(+  468                         )); break;  // x.. .xx .xo
    //      case  8098: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // o.. .xx .xo
    //      case  8099: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // ... .xx .xo
    //      case  8100: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox .xo
    //      case  8101: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xox .xo
    //      case  8102: Assert::IsTrue(v == PositionValue(+  522                         )); break;  // .xx xox .xo
    //      case  8103: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xox xox .xo
    //      case  8104: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox .xo
    //      case  8105: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // .ox xox .xo
    //      case  8106: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // x.x xox .xo
    //      case  8107: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xox .xo
    //      case  8108: Assert::IsTrue(v == PositionValue(+  234                         )); break;  // ..x xox .xo
    //      case  8109: Assert::IsTrue(v == PositionValue(+  401                         )); break;  // xxo xox .xo
    //      case  8110: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox .xo
    //      case  8111: Assert::IsTrue(v == PositionValue(+  184                         )); break;  // .xo xox .xo
    //      case  8112: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // xoo xox .xo
    //      case  8113: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox .xo
    //      case  8114: Assert::IsTrue(v == PositionValue(-  227                         )); break;  // .oo xox .xo
    //      case  8115: Assert::IsTrue(v == PositionValue(+  122                         )); break;  // x.o xox .xo
    //      case  8116: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox .xo
    //      case  8117: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // ..o xox .xo
    //      case  8118: Assert::IsTrue(v == PositionValue(+  540                         )); break;  // xx. xox .xo
    //      case  8119: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xox .xo
    //      case  8120: Assert::IsTrue(v == PositionValue(+  314                         )); break;  // .x. xox .xo
    //      case  8121: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // xo. xox .xo
    //      case  8122: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox .xo
    //      case  8123: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .o. xox .xo
    //      case  8124: Assert::IsTrue(v == PositionValue(+  252                         )); break;  // x.. xox .xo
    //      case  8125: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xox .xo
    //      case  8126: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // ... xox .xo
    //      case  8127: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox .xo
    //      case  8128: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox .xo
    //      case  8129: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // .xx oox .xo
    //      case  8130: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xox oox .xo
    //      case  8131: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox .xo
    //      case  8132: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .ox oox .xo
    //      case  8133: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.x oox .xo
    //      case  8134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox .xo
    //      case  8135: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // ..x oox .xo
    //      case  8136: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // xxo oox .xo
    //      case  8137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox .xo
    //      case  8138: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // .xo oox .xo
    //      case  8139: Assert::IsTrue(v == PositionValue(-  490                         )); break;  // xoo oox .xo
    //      case  8140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox .xo
    //      case  8141: Assert::IsTrue(v == PositionValue(-  551                         )); break;  // .oo oox .xo
    //      case  8142: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // x.o oox .xo
    //      case  8143: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox .xo
    //      case  8144: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // ..o oox .xo
    //      case  8145: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // xx. oox .xo
    //      case  8146: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox .xo
    //      case  8147: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .x. oox .xo
    //      case  8148: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // xo. oox .xo
    //      case  8149: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox .xo
    //      case  8150: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // .o. oox .xo
    //      case  8151: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // x.. oox .xo
    //      case  8152: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox .xo
    //      case  8153: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ... oox .xo
    //      case  8154: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox .xo
    //      case  8155: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .ox .xo
    //      case  8156: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // .xx .ox .xo
    //      case  8157: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xox .ox .xo
    //      case  8158: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox .xo
    //      case  8159: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // .ox .ox .xo
    //      case  8160: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // x.x .ox .xo
    //      case  8161: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .ox .xo
    //      case  8162: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // ..x .ox .xo
    //      case  8163: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // xxo .ox .xo
    //      case  8164: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox .xo
    //      case  8165: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // .xo .ox .xo
    //      case  8166: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // xoo .ox .xo
    //      case  8167: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox .xo
    //      case  8168: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // .oo .ox .xo
    //      case  8169: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // x.o .ox .xo
    //      case  8170: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox .xo
    //      case  8171: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // ..o .ox .xo
    //      case  8172: Assert::IsTrue(v == PositionValue(+  252                         )); break;  // xx. .ox .xo
    //      case  8173: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .ox .xo
    //      case  8174: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // .x. .ox .xo
    //      case  8175: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // xo. .ox .xo
    //      case  8176: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox .xo
    //      case  8177: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .o. .ox .xo
    //      case  8178: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // x.. .ox .xo
    //      case  8179: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .ox .xo
    //      case  8180: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ... .ox .xo
    //      case  8181: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x .xo
    //      case  8182: Assert::IsTrue(v == PositionValue(+  605                         )); break;  // oxx x.x .xo
    //      case  8183: Assert::IsTrue(v == PositionValue(+  657                         )); break;  // .xx x.x .xo
    //      case  8184: Assert::IsTrue(v == PositionValue(+  454                         )); break;  // xox x.x .xo
    //      case  8185: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // oox x.x .xo
    //      case  8186: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // .ox x.x .xo
    //      case  8187: Assert::IsTrue(v == PositionValue(+  499                         )); break;  // x.x x.x .xo
    //      case  8188: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // o.x x.x .xo
    //      case  8189: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // ..x x.x .xo
    //      case  8190: Assert::IsTrue(v == PositionValue(+  614                         )); break;  // xxo x.x .xo
    //      case  8191: Assert::IsTrue(v == PositionValue(+  363                         )); break;  // oxo x.x .xo
    //      case  8192: Assert::IsTrue(v == PositionValue(+  406                         )); break;  // .xo x.x .xo
    //      case  8193: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // xoo x.x .xo
    //      case  8194: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x .xo
    //      case  8195: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // .oo x.x .xo
    //      case  8196: Assert::IsTrue(v == PositionValue(+  335                         )); break;  // x.o x.x .xo
    //      case  8197: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // o.o x.x .xo
    //      case  8198: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // ..o x.x .xo
    //      case  8199: Assert::IsTrue(v == PositionValue(+  666                         )); break;  // xx. x.x .xo
    //      case  8200: Assert::IsTrue(v == PositionValue(+  406                         )); break;  // ox. x.x .xo
    //      case  8201: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // .x. x.x .xo
    //      case  8202: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // xo. x.x .xo
    //      case  8203: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // oo. x.x .xo
    //      case  8204: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // .o. x.x .xo
    //      case  8205: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // x.. x.x .xo
    //      case  8206: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // o.. x.x .xo
    //      case  8207: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // ... x.x .xo
    //      case  8208: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x .xo
    //      case  8209: Assert::IsTrue(v == PositionValue(+  272                         )); break;  // oxx o.x .xo
    //      case  8210: Assert::IsTrue(v == PositionValue(+  411                         )); break;  // .xx o.x .xo
    //      case  8211: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xox o.x .xo
    //      case  8212: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oox o.x .xo
    //      case  8213: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // .ox o.x .xo
    //      case  8214: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // x.x o.x .xo
    //      case  8215: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // o.x o.x .xo
    //      case  8216: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // ..x o.x .xo
    //      case  8217: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // xxo o.x .xo
    //      case  8218: Assert::IsTrue(v == PositionValue(+   30                         )); break;  // oxo o.x .xo
    //      case  8219: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // .xo o.x .xo
    //      case  8220: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // xoo o.x .xo
    //      case  8221: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x .xo
    //      case  8222: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .oo o.x .xo
    //      case  8223: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // x.o o.x .xo
    //      case  8224: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // o.o o.x .xo
    //      case  8225: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // ..o o.x .xo
    //      case  8226: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // xx. o.x .xo
    //      case  8227: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // ox. o.x .xo
    //      case  8228: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // .x. o.x .xo
    //      case  8229: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xo. o.x .xo
    //      case  8230: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // oo. o.x .xo
    //      case  8231: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .o. o.x .xo
    //      case  8232: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.. o.x .xo
    //      case  8233: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // o.. o.x .xo
    //      case  8234: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ... o.x .xo
    //      case  8235: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x .xo
    //      case  8236: Assert::IsTrue(v == PositionValue(+  404                         )); break;  // oxx ..x .xo
    //      case  8237: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // .xx ..x .xo
    //      case  8238: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // xox ..x .xo
    //      case  8239: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // oox ..x .xo
    //      case  8240: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // .ox ..x .xo
    //      case  8241: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // x.x ..x .xo
    //      case  8242: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // o.x ..x .xo
    //      case  8243: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // ..x ..x .xo
    //      case  8244: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // xxo ..x .xo
    //      case  8245: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // oxo ..x .xo
    //      case  8246: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // .xo ..x .xo
    //      case  8247: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // xoo ..x .xo
    //      case  8248: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x .xo
    //      case  8249: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // .oo ..x .xo
    //      case  8250: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // x.o ..x .xo
    //      case  8251: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // o.o ..x .xo
    //      case  8252: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // ..o ..x .xo
    //      case  8253: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // xx. ..x .xo
    //      case  8254: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // ox. ..x .xo
    //      case  8255: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // .x. ..x .xo
    //      case  8256: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xo. ..x .xo
    //      case  8257: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // oo. ..x .xo
    //      case  8258: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .o. ..x .xo
    //      case  8259: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // x.. ..x .xo
    //      case  8260: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // o.. ..x .xo
    //      case  8261: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ... ..x .xo
    //      case  8262: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo .xo
    //      case  8263: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo .xo
    //      case  8264: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo .xo
    //      case  8265: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // xox xxo .xo
    //      case  8266: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // oox xxo .xo
    //      case  8267: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .ox xxo .xo
    //      case  8268: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // x.x xxo .xo
    //      case  8269: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // o.x xxo .xo
    //      case  8270: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // ..x xxo .xo
    //      case  8271: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo .xo
    //      case  8272: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxo .xo
    //      case  8273: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxo .xo
    //      case  8274: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xxo .xo
    //      case  8275: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo .xo
    //      case  8276: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xxo .xo
    //      case  8277: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xxo .xo
    //      case  8278: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xxo .xo
    //      case  8279: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xxo .xo
    //      case  8280: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo .xo
    //      case  8281: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxo .xo
    //      case  8282: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxo .xo
    //      case  8283: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // xo. xxo .xo
    //      case  8284: Assert::IsTrue(v == PositionValue(-   56                         )); break;  // oo. xxo .xo
    //      case  8285: Assert::IsTrue(v == PositionValue(+   74                         )); break;  // .o. xxo .xo
    //      case  8286: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // x.. xxo .xo
    //      case  8287: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // o.. xxo .xo
    //      case  8288: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // ... xxo .xo
    //      case  8289: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo .xo
    //      case  8290: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxo .xo
    //      case  8291: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo .xo
    //      case  8292: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xox oxo .xo
    //      case  8293: Assert::IsTrue(v == PositionValue(-  319                         )); break;  // oox oxo .xo
    //      case  8294: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // .ox oxo .xo
    //      case  8295: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // x.x oxo .xo
    //      case  8296: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // o.x oxo .xo
    //      case  8297: Assert::IsTrue(v == PositionValue(+   99                         )); break;  // ..x oxo .xo
    //      case  8298: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo .xo
    //      case  8299: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oxo .xo
    //      case  8300: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxo .xo
    //      case  8301: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oxo .xo
    //      case  8302: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo .xo
    //      case  8303: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oxo .xo
    //      case  8304: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oxo .xo
    //      case  8305: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo .xo
    //      case  8306: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oxo .xo
    //      case  8307: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo .xo
    //      case  8308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oxo .xo
    //      case  8309: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxo .xo
    //      case  8310: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // xo. oxo .xo
    //      case  8311: Assert::IsTrue(v == PositionValue(-  467                         )); break;  // oo. oxo .xo
    //      case  8312: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .o. oxo .xo
    //      case  8313: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.. oxo .xo
    //      case  8314: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.. oxo .xo
    //      case  8315: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ... oxo .xo
    //      case  8316: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo .xo
    //      case  8317: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo .xo
    //      case  8318: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo .xo
    //      case  8319: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // xox .xo .xo
    //      case  8320: Assert::IsTrue(v == PositionValue(-  109                         )); break;  // oox .xo .xo
    //      case  8321: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // .ox .xo .xo
    //      case  8322: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // x.x .xo .xo
    //      case  8323: Assert::IsTrue(v == PositionValue(+  101                         )); break;  // o.x .xo .xo
    //      case  8324: Assert::IsTrue(v == PositionValue(+  144                         )); break;  // ..x .xo .xo
    //      case  8325: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo .xo
    //      case  8326: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xo .xo
    //      case  8327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xo .xo
    //      case  8328: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .xo .xo
    //      case  8329: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo .xo
    //      case  8330: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .xo .xo
    //      case  8331: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .xo .xo
    //      case  8332: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .xo .xo
    //      case  8333: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .xo .xo
    //      case  8334: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo .xo
    //      case  8335: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xo .xo
    //      case  8336: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xo .xo
    //      case  8337: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // xo. .xo .xo
    //      case  8338: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // oo. .xo .xo
    //      case  8339: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // .o. .xo .xo
    //      case  8340: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // x.. .xo .xo
    //      case  8341: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // o.. .xo .xo
    //      case  8342: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // ... .xo .xo
    //      case  8343: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo .xo
    //      case  8344: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xoo .xo
    //      case  8345: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // .xx xoo .xo
    //      case  8346: Assert::IsTrue(v == PositionValue(-  230                         )); break;  // xox xoo .xo
    //      case  8347: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo .xo
    //      case  8348: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // .ox xoo .xo
    //      case  8349: Assert::IsTrue(v == PositionValue(-   29                         )); break;  // x.x xoo .xo
    //      case  8350: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xoo .xo
    //      case  8351: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ..x xoo .xo
    //      case  8352: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xoo .xo
    //      case  8353: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo .xo
    //      case  8354: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo .xo
    //      case  8355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo .xo
    //      case  8356: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo .xo
    //      case  8357: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo .xo
    //      case  8358: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xoo .xo
    //      case  8359: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo .xo
    //      case  8360: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo .xo
    //      case  8361: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // xx. xoo .xo
    //      case  8362: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xoo .xo
    //      case  8363: Assert::IsTrue(v == PositionValue(-   97                         )); break;  // .x. xoo .xo
    //      case  8364: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // xo. xoo .xo
    //      case  8365: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo .xo
    //      case  8366: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .o. xoo .xo
    //      case  8367: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // x.. xoo .xo
    //      case  8368: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xoo .xo
    //      case  8369: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // ... xoo .xo
    //      case  8370: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo .xo
    //      case  8371: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo .xo
    //      case  8372: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo .xo
    //      case  8373: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo .xo
    //      case  8374: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo .xo
    //      case  8375: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo .xo
    //      case  8376: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo .xo
    //      case  8377: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo .xo
    //      case  8378: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo .xo
    //      case  8379: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo .xo
    //      case  8380: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo .xo
    //      case  8381: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo .xo
    //      case  8382: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo .xo
    //      case  8383: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo .xo
    //      case  8384: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo .xo
    //      case  8385: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo .xo
    //      case  8386: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo .xo
    //      case  8387: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo .xo
    //      case  8388: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo .xo
    //      case  8389: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo .xo
    //      case  8390: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo .xo
    //      case  8391: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo .xo
    //      case  8392: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo .xo
    //      case  8393: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo .xo
    //      case  8394: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo .xo
    //      case  8395: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo .xo
    //      case  8396: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo .xo
    //      case  8397: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo .xo
    //      case  8398: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .oo .xo
    //      case  8399: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .xx .oo .xo
    //      case  8400: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // xox .oo .xo
    //      case  8401: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo .xo
    //      case  8402: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .ox .oo .xo
    //      case  8403: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // x.x .oo .xo
    //      case  8404: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .oo .xo
    //      case  8405: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // ..x .oo .xo
    //      case  8406: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo .xo
    //      case  8407: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo .xo
    //      case  8408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo .xo
    //      case  8409: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo .xo
    //      case  8410: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo .xo
    //      case  8411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo .xo
    //      case  8412: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo .xo
    //      case  8413: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo .xo
    //      case  8414: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo .xo
    //      case  8415: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // xx. .oo .xo
    //      case  8416: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .oo .xo
    //      case  8417: Assert::IsTrue(v == PositionValue(-  307                         )); break;  // .x. .oo .xo
    //      case  8418: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // xo. .oo .xo
    //      case  8419: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo .xo
    //      case  8420: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // .o. .oo .xo
    //      case  8421: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // x.. .oo .xo
    //      case  8422: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .oo .xo
    //      case  8423: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // ... .oo .xo
    //      case  8424: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o .xo
    //      case  8425: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // oxx x.o .xo
    //      case  8426: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // .xx x.o .xo
    //      case  8427: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // xox x.o .xo
    //      case  8428: Assert::IsTrue(v == PositionValue(-  199                         )); break;  // oox x.o .xo
    //      case  8429: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // .ox x.o .xo
    //      case  8430: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // x.x x.o .xo
    //      case  8431: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.x x.o .xo
    //      case  8432: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ..x x.o .xo
    //      case  8433: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo x.o .xo
    //      case  8434: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo x.o .xo
    //      case  8435: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo x.o .xo
    //      case  8436: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo x.o .xo
    //      case  8437: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o .xo
    //      case  8438: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo x.o .xo
    //      case  8439: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o x.o .xo
    //      case  8440: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o x.o .xo
    //      case  8441: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o x.o .xo
    //      case  8442: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // xx. x.o .xo
    //      case  8443: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // ox. x.o .xo
    //      case  8444: Assert::IsTrue(v == PositionValue(+  116                         )); break;  // .x. x.o .xo
    //      case  8445: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xo. x.o .xo
    //      case  8446: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // oo. x.o .xo
    //      case  8447: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .o. x.o .xo
    //      case  8448: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.. x.o .xo
    //      case  8449: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // o.. x.o .xo
    //      case  8450: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // ... x.o .xo
    //      case  8451: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o .xo
    //      case  8452: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oxx o.o .xo
    //      case  8453: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // .xx o.o .xo
    //      case  8454: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // xox o.o .xo
    //      case  8455: Assert::IsTrue(v == PositionValue(-  532                         )); break;  // oox o.o .xo
    //      case  8456: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // .ox o.o .xo
    //      case  8457: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // x.x o.o .xo
    //      case  8458: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // o.x o.o .xo
    //      case  8459: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // ..x o.o .xo
    //      case  8460: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo o.o .xo
    //      case  8461: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o .xo
    //      case  8462: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo o.o .xo
    //      case  8463: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo o.o .xo
    //      case  8464: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o .xo
    //      case  8465: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo o.o .xo
    //      case  8466: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o o.o .xo
    //      case  8467: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o .xo
    //      case  8468: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o o.o .xo
    //      case  8469: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xx. o.o .xo
    //      case  8470: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // ox. o.o .xo
    //      case  8471: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .x. o.o .xo
    //      case  8472: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // xo. o.o .xo
    //      case  8473: Assert::IsTrue(v == PositionValue(-  593                         )); break;  // oo. o.o .xo
    //      case  8474: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // .o. o.o .xo
    //      case  8475: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // x.. o.o .xo
    //      case  8476: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // o.. o.o .xo
    //      case  8477: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // ... o.o .xo
    //      case  8478: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o .xo
    //      case  8479: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // oxx ..o .xo
    //      case  8480: Assert::IsTrue(v == PositionValue(+   54                         )); break;  // .xx ..o .xo
    //      case  8481: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // xox ..o .xo
    //      case  8482: Assert::IsTrue(v == PositionValue(-  322                         )); break;  // oox ..o .xo
    //      case  8483: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // .ox ..o .xo
    //      case  8484: Assert::IsTrue(v == PositionValue(-   35                         )); break;  // x.x ..o .xo
    //      case  8485: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // o.x ..o .xo
    //      case  8486: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // ..x ..o .xo
    //      case  8487: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ..o .xo
    //      case  8488: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ..o .xo
    //      case  8489: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ..o .xo
    //      case  8490: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ..o .xo
    //      case  8491: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o .xo
    //      case  8492: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ..o .xo
    //      case  8493: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ..o .xo
    //      case  8494: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ..o .xo
    //      case  8495: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ..o .xo
    //      case  8496: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // xx. ..o .xo
    //      case  8497: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // ox. ..o .xo
    //      case  8498: Assert::IsTrue(v == PositionValue(-   85                         )); break;  // .x. ..o .xo
    //      case  8499: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // xo. ..o .xo
    //      case  8500: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // oo. ..o .xo
    //      case  8501: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .o. ..o .xo
    //      case  8502: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // x.. ..o .xo
    //      case  8503: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // o.. ..o .xo
    //      case  8504: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ... ..o .xo
    //      case  8505: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. .xo
    //      case  8506: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. .xo
    //      case  8507: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. .xo
    //      case  8508: Assert::IsTrue(v == PositionValue(+  631                         )); break;  // xox xx. .xo
    //      case  8509: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // oox xx. .xo
    //      case  8510: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // .ox xx. .xo
    //      case  8511: Assert::IsTrue(v == PositionValue(+  685                         )); break;  // x.x xx. .xo
    //      case  8512: Assert::IsTrue(v == PositionValue(+  434                         )); break;  // o.x xx. .xo
    //      case  8513: Assert::IsTrue(v == PositionValue(+  477                         )); break;  // ..x xx. .xo
    //      case  8514: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. .xo
    //      case  8515: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xx. .xo
    //      case  8516: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xx. .xo
    //      case  8517: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // xoo xx. .xo
    //      case  8518: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. .xo
    //      case  8519: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .oo xx. .xo
    //      case  8520: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // x.o xx. .xo
    //      case  8521: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // o.o xx. .xo
    //      case  8522: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // ..o xx. .xo
    //      case  8523: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. .xo
    //      case  8524: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xx. .xo
    //      case  8525: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xx. .xo
    //      case  8526: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // xo. xx. .xo
    //      case  8527: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // oo. xx. .xo
    //      case  8528: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .o. xx. .xo
    //      case  8529: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // x.. xx. .xo
    //      case  8530: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // o.. xx. .xo
    //      case  8531: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // ... xx. .xo
    //      case  8532: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. .xo
    //      case  8533: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ox. .xo
    //      case  8534: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. .xo
    //      case  8535: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // xox ox. .xo
    //      case  8536: Assert::IsTrue(v == PositionValue(-  118                         )); break;  // oox ox. .xo
    //      case  8537: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .ox ox. .xo
    //      case  8538: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // x.x ox. .xo
    //      case  8539: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // o.x ox. .xo
    //      case  8540: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // ..x ox. .xo
    //      case  8541: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. .xo
    //      case  8542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo ox. .xo
    //      case  8543: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo ox. .xo
    //      case  8544: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xoo ox. .xo
    //      case  8545: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. .xo
    //      case  8546: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .oo ox. .xo
    //      case  8547: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.o ox. .xo
    //      case  8548: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.o ox. .xo
    //      case  8549: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // ..o ox. .xo
    //      case  8550: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. .xo
    //      case  8551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. ox. .xo
    //      case  8552: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. ox. .xo
    //      case  8553: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xo. ox. .xo
    //      case  8554: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // oo. ox. .xo
    //      case  8555: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .o. ox. .xo
    //      case  8556: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.. ox. .xo
    //      case  8557: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // o.. ox. .xo
    //      case  8558: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ... ox. .xo
    //      case  8559: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. .xo
    //      case  8560: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. .xo
    //      case  8561: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. .xo
    //      case  8562: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // xox .x. .xo
    //      case  8563: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // oox .x. .xo
    //      case  8564: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .ox .x. .xo
    //      case  8565: Assert::IsTrue(v == PositionValue(+  388                         )); break;  // x.x .x. .xo
    //      case  8566: Assert::IsTrue(v == PositionValue(+  224                         )); break;  // o.x .x. .xo
    //      case  8567: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // ..x .x. .xo
    //      case  8568: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. .xo
    //      case  8569: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .x. .xo
    //      case  8570: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .x. .xo
    //      case  8571: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // xoo .x. .xo
    //      case  8572: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. .xo
    //      case  8573: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // .oo .x. .xo
    //      case  8574: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // x.o .x. .xo
    //      case  8575: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // o.o .x. .xo
    //      case  8576: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // ..o .x. .xo
    //      case  8577: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. .xo
    //      case  8578: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .x. .xo
    //      case  8579: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .x. .xo
    //      case  8580: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // xo. .x. .xo
    //      case  8581: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // oo. .x. .xo
    //      case  8582: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // .o. .x. .xo
    //      case  8583: Assert::IsTrue(v == PositionValue(+  258                         )); break;  // x.. .x. .xo
    //      case  8584: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // o.. .x. .xo
    //      case  8585: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // ... .x. .xo
    //      case  8586: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. .xo
    //      case  8587: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xo. .xo
    //      case  8588: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // .xx xo. .xo
    //      case  8589: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // xox xo. .xo
    //      case  8590: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. .xo
    //      case  8591: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .ox xo. .xo
    //      case  8592: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // x.x xo. .xo
    //      case  8593: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xo. .xo
    //      case  8594: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // ..x xo. .xo
    //      case  8595: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // xxo xo. .xo
    //      case  8596: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. .xo
    //      case  8597: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // .xo xo. .xo
    //      case  8598: Assert::IsTrue(v == PositionValue(-  202                         )); break;  // xoo xo. .xo
    //      case  8599: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. .xo
    //      case  8600: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // .oo xo. .xo
    //      case  8601: Assert::IsTrue(v == PositionValue(-    1                         )); break;  // x.o xo. .xo
    //      case  8602: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. .xo
    //      case  8603: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // ..o xo. .xo
    //      case  8604: Assert::IsTrue(v == PositionValue(+  339                         )); break;  // xx. xo. .xo
    //      case  8605: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xo. .xo
    //      case  8606: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // .x. xo. .xo
    //      case  8607: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // xo. xo. .xo
    //      case  8608: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. .xo
    //      case  8609: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .o. xo. .xo
    //      case  8610: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // x.. xo. .xo
    //      case  8611: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xo. .xo
    //      case  8612: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ... xo. .xo
    //      case  8613: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. .xo
    //      case  8614: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. .xo
    //      case  8615: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .xx oo. .xo
    //      case  8616: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // xox oo. .xo
    //      case  8617: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. .xo
    //      case  8618: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // .ox oo. .xo
    //      case  8619: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // x.x oo. .xo
    //      case  8620: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. .xo
    //      case  8621: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // ..x oo. .xo
    //      case  8622: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // xxo oo. .xo
    //      case  8623: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. .xo
    //      case  8624: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // .xo oo. .xo
    //      case  8625: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // xoo oo. .xo
    //      case  8626: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. .xo
    //      case  8627: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // .oo oo. .xo
    //      case  8628: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // x.o oo. .xo
    //      case  8629: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. .xo
    //      case  8630: Assert::IsTrue(v == PositionValue(-  395                         )); break;  // ..o oo. .xo
    //      case  8631: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // xx. oo. .xo
    //      case  8632: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. .xo
    //      case  8633: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .x. oo. .xo
    //      case  8634: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // xo. oo. .xo
    //      case  8635: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. .xo
    //      case  8636: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // .o. oo. .xo
    //      case  8637: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // x.. oo. .xo
    //      case  8638: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. .xo
    //      case  8639: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // ... oo. .xo
    //      case  8640: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. .xo
    //      case  8641: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .o. .xo
    //      case  8642: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // .xx .o. .xo
    //      case  8643: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xox .o. .xo
    //      case  8644: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. .xo
    //      case  8645: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .ox .o. .xo
    //      case  8646: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // x.x .o. .xo
    //      case  8647: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .o. .xo
    //      case  8648: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // ..x .o. .xo
    //      case  8649: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // xxo .o. .xo
    //      case  8650: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. .xo
    //      case  8651: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // .xo .o. .xo
    //      case  8652: Assert::IsTrue(v == PositionValue(-  412                         )); break;  // xoo .o. .xo
    //      case  8653: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. .xo
    //      case  8654: Assert::IsTrue(v == PositionValue(-  473                         )); break;  // .oo .o. .xo
    //      case  8655: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // x.o .o. .xo
    //      case  8656: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. .xo
    //      case  8657: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // ..o .o. .xo
    //      case  8658: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // xx. .o. .xo
    //      case  8659: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .o. .xo
    //      case  8660: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // .x. .o. .xo
    //      case  8661: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // xo. .o. .xo
    //      case  8662: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. .xo
    //      case  8663: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // .o. .o. .xo
    //      case  8664: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // x.. .o. .xo
    //      case  8665: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .o. .xo
    //      case  8666: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ... .o. .xo
    //      case  8667: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. .xo
    //      case  8668: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // oxx x.. .xo
    //      case  8669: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // .xx x.. .xo
    //      case  8670: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xox x.. .xo
    //      case  8671: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // oox x.. .xo
    //      case  8672: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .ox x.. .xo
    //      case  8673: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // x.x x.. .xo
    //      case  8674: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // o.x x.. .xo
    //      case  8675: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // ..x x.. .xo
    //      case  8676: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // xxo x.. .xo
    //      case  8677: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // oxo x.. .xo
    //      case  8678: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // .xo x.. .xo
    //      case  8679: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // xoo x.. .xo
    //      case  8680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. .xo
    //      case  8681: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // .oo x.. .xo
    //      case  8682: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // x.o x.. .xo
    //      case  8683: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // o.o x.. .xo
    //      case  8684: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // ..o x.. .xo
    //      case  8685: Assert::IsTrue(v == PositionValue(+  465                         )); break;  // xx. x.. .xo
    //      case  8686: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // ox. x.. .xo
    //      case  8687: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // .x. x.. .xo
    //      case  8688: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // xo. x.. .xo
    //      case  8689: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // oo. x.. .xo
    //      case  8690: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .o. x.. .xo
    //      case  8691: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // x.. x.. .xo
    //      case  8692: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // o.. x.. .xo
    //      case  8693: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ... x.. .xo
    //      case  8694: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. .xo
    //      case  8695: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // oxx o.. .xo
    //      case  8696: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // .xx o.. .xo
    //      case  8697: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xox o.. .xo
    //      case  8698: Assert::IsTrue(v == PositionValue(-  331                         )); break;  // oox o.. .xo
    //      case  8699: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .ox o.. .xo
    //      case  8700: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.x o.. .xo
    //      case  8701: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // o.x o.. .xo
    //      case  8702: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..x o.. .xo
    //      case  8703: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // xxo o.. .xo
    //      case  8704: Assert::IsTrue(v == PositionValue(-  171                         )); break;  // oxo o.. .xo
    //      case  8705: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // .xo o.. .xo
    //      case  8706: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // xoo o.. .xo
    //      case  8707: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. .xo
    //      case  8708: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // .oo o.. .xo
    //      case  8709: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // x.o o.. .xo
    //      case  8710: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // o.o o.. .xo
    //      case  8711: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // ..o o.. .xo
    //      case  8712: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // xx. o.. .xo
    //      case  8713: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // ox. o.. .xo
    //      case  8714: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .x. o.. .xo
    //      case  8715: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xo. o.. .xo
    //      case  8716: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // oo. o.. .xo
    //      case  8717: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // .o. o.. .xo
    //      case  8718: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.. o.. .xo
    //      case  8719: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // o.. o.. .xo
    //      case  8720: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ... o.. .xo
    //      case  8721: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... .xo
    //      case  8722: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // oxx ... .xo
    //      case  8723: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // .xx ... .xo
    //      case  8724: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // xox ... .xo
    //      case  8725: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oox ... .xo
    //      case  8726: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .ox ... .xo
    //      case  8727: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // x.x ... .xo
    //      case  8728: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.x ... .xo
    //      case  8729: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ..x ... .xo
    //      case  8730: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // xxo ... .xo
    //      case  8731: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // oxo ... .xo
    //      case  8732: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // .xo ... .xo
    //      case  8733: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // xoo ... .xo
    //      case  8734: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... .xo
    //      case  8735: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .oo ... .xo
    //      case  8736: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // x.o ... .xo
    //      case  8737: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // o.o ... .xo
    //      case  8738: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // ..o ... .xo
    //      case  8739: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // xx. ... .xo
    //      case  8740: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // ox. ... .xo
    //      case  8741: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // .x. ... .xo
    //      case  8742: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xo. ... .xo
    //      case  8743: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // oo. ... .xo
    //      case  8744: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .o. ... .xo
    //      case  8745: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // x.. ... .xo
    //      case  8746: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.. ... .xo
    //      case  8747: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ... ... .xo
    //      case  8748: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx xoo
    //      case  8749: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx xoo
    //      case  8750: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx xoo
    //      case  8751: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx xoo
    //      case  8752: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx xoo
    //      case  8753: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx xoo
    //      case  8754: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx xoo
    //      case  8755: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx xoo
    //      case  8756: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx xoo
    //      case  8757: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx xoo
    //      case  8758: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx xoo
    //      case  8759: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx xoo
    //      case  8760: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx xoo
    //      case  8761: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx xoo
    //      case  8762: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx xoo
    //      case  8763: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx xoo
    //      case  8764: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx xoo
    //      case  8765: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx xoo
    //      case  8766: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx xoo
    //      case  8767: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx xoo
    //      case  8768: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx xoo
    //      case  8769: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx xoo
    //      case  8770: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx xoo
    //      case  8771: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx xoo
    //      case  8772: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx xoo
    //      case  8773: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx xoo
    //      case  8774: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx xoo
    //      case  8775: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx xoo
    //      case  8776: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx xoo
    //      case  8777: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx xoo
    //      case  8778: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx xoo
    //      case  8779: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxx xoo
    //      case  8780: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx xoo
    //      case  8781: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx xoo
    //      case  8782: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxx xoo
    //      case  8783: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx xoo
    //      case  8784: Assert::IsTrue(v == PositionValue(+  360                         )); break;  // xxo oxx xoo
    //      case  8785: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oxo oxx xoo
    //      case  8786: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // .xo oxx xoo
    //      case  8787: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // xoo oxx xoo
    //      case  8788: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx xoo
    //      case  8789: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .oo oxx xoo
    //      case  8790: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.o oxx xoo
    //      case  8791: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // o.o oxx xoo
    //      case  8792: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ..o oxx xoo
    //      case  8793: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // xx. oxx xoo
    //      case  8794: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ox. oxx xoo
    //      case  8795: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .x. oxx xoo
    //      case  8796: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xo. oxx xoo
    //      case  8797: Assert::IsTrue(v == PositionValue(-  319                         )); break;  // oo. oxx xoo
    //      case  8798: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // .o. oxx xoo
    //      case  8799: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // x.. oxx xoo
    //      case  8800: Assert::IsTrue(v == PositionValue(-  109                         )); break;  // o.. oxx xoo
    //      case  8801: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // ... oxx xoo
    //      case  8802: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx xoo
    //      case  8803: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx xoo
    //      case  8804: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx xoo
    //      case  8805: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx xoo
    //      case  8806: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx xoo
    //      case  8807: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx xoo
    //      case  8808: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx xoo
    //      case  8809: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx xoo
    //      case  8810: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx xoo
    //      case  8811: Assert::IsTrue(v == PositionValue(+  492                         )); break;  // xxo .xx xoo
    //      case  8812: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // oxo .xx xoo
    //      case  8813: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .xo .xx xoo
    //      case  8814: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // xoo .xx xoo
    //      case  8815: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx xoo
    //      case  8816: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .oo .xx xoo
    //      case  8817: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.o .xx xoo
    //      case  8818: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // o.o .xx xoo
    //      case  8819: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ..o .xx xoo
    //      case  8820: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // xx. .xx xoo
    //      case  8821: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // ox. .xx xoo
    //      case  8822: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // .x. .xx xoo
    //      case  8823: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // xo. .xx xoo
    //      case  8824: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // oo. .xx xoo
    //      case  8825: Assert::IsTrue(v == PositionValue(+   99                         )); break;  // .o. .xx xoo
    //      case  8826: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // x.. .xx xoo
    //      case  8827: Assert::IsTrue(v == PositionValue(+  101                         )); break;  // o.. .xx xoo
    //      case  8828: Assert::IsTrue(v == PositionValue(+  144                         )); break;  // ... .xx xoo
    //      case  8829: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox xoo
    //      case  8830: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xox xoo
    //      case  8831: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .xx xox xoo
    //      case  8832: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox xoo
    //      case  8833: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox xoo
    //      case  8834: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xox xoo
    //      case  8835: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox xoo
    //      case  8836: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xox xoo
    //      case  8837: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // ..x xox xoo
    //      case  8838: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xox xoo
    //      case  8839: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox xoo
    //      case  8840: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // .xo xox xoo
    //      case  8841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xox xoo
    //      case  8842: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox xoo
    //      case  8843: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox xoo
    //      case  8844: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xox xoo
    //      case  8845: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox xoo
    //      case  8846: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // ..o xox xoo
    //      case  8847: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xox xoo
    //      case  8848: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xox xoo
    //      case  8849: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // .x. xox xoo
    //      case  8850: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xox xoo
    //      case  8851: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox xoo
    //      case  8852: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xox xoo
    //      case  8853: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xox xoo
    //      case  8854: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xox xoo
    //      case  8855: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ... xox xoo
    //      case  8856: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox xoo
    //      case  8857: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox xoo
    //      case  8858: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // .xx oox xoo
    //      case  8859: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oox xoo
    //      case  8860: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox xoo
    //      case  8861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oox xoo
    //      case  8862: Assert::IsTrue(v == PositionValue(-  328                         )); break;  // x.x oox xoo
    //      case  8863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox xoo
    //      case  8864: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // ..x oox xoo
    //      case  8865: Assert::IsTrue(v == PositionValue(-  360                         )); break;  // xxo oox xoo
    //      case  8866: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox xoo
    //      case  8867: Assert::IsTrue(v == PositionValue(-  490                         )); break;  // .xo oox xoo
    //      case  8868: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox xoo
    //      case  8869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox xoo
    //      case  8870: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox xoo
    //      case  8871: Assert::IsTrue(v == PositionValue(-  570                         )); break;  // x.o oox xoo
    //      case  8872: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox xoo
    //      case  8873: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // ..o oox xoo
    //      case  8874: Assert::IsTrue(v == PositionValue(-  230                         )); break;  // xx. oox xoo
    //      case  8875: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox xoo
    //      case  8876: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // .x. oox xoo
    //      case  8877: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oox xoo
    //      case  8878: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox xoo
    //      case  8879: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oox xoo
    //      case  8880: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // x.. oox xoo
    //      case  8881: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox xoo
    //      case  8882: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // ... oox xoo
    //      case  8883: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox xoo
    //      case  8884: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .ox xoo
    //      case  8885: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .xx .ox xoo
    //      case  8886: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .ox xoo
    //      case  8887: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox xoo
    //      case  8888: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .ox xoo
    //      case  8889: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // x.x .ox xoo
    //      case  8890: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .ox xoo
    //      case  8891: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // ..x .ox xoo
    //      case  8892: Assert::IsTrue(v == PositionValue(-  159                         )); break;  // xxo .ox xoo
    //      case  8893: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox xoo
    //      case  8894: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // .xo .ox xoo
    //      case  8895: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox xoo
    //      case  8896: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox xoo
    //      case  8897: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox xoo
    //      case  8898: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // x.o .ox xoo
    //      case  8899: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox xoo
    //      case  8900: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // ..o .ox xoo
    //      case  8901: Assert::IsTrue(v == PositionValue(-   29                         )); break;  // xx. .ox xoo
    //      case  8902: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .ox xoo
    //      case  8903: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .x. .ox xoo
    //      case  8904: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .ox xoo
    //      case  8905: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox xoo
    //      case  8906: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .ox xoo
    //      case  8907: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // x.. .ox xoo
    //      case  8908: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .ox xoo
    //      case  8909: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // ... .ox xoo
    //      case  8910: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x xoo
    //      case  8911: Assert::IsTrue(v == PositionValue(+  402                         )); break;  // oxx x.x xoo
    //      case  8912: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // .xx x.x xoo
    //      case  8913: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x xoo
    //      case  8914: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oox x.x xoo
    //      case  8915: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .ox x.x xoo
    //      case  8916: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x xoo
    //      case  8917: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // o.x x.x xoo
    //      case  8918: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // ..x x.x xoo
    //      case  8919: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.x xoo
    //      case  8920: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // oxo x.x xoo
    //      case  8921: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // .xo x.x xoo
    //      case  8922: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.x xoo
    //      case  8923: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x xoo
    //      case  8924: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // .oo x.x xoo
    //      case  8925: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.x xoo
    //      case  8926: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.o x.x xoo
    //      case  8927: Assert::IsTrue(v == PositionValue(+   11                         )); break;  // ..o x.x xoo
    //      case  8928: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.x xoo
    //      case  8929: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // ox. x.x xoo
    //      case  8930: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // .x. x.x xoo
    //      case  8931: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.x xoo
    //      case  8932: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oo. x.x xoo
    //      case  8933: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // .o. x.x xoo
    //      case  8934: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.x xoo
    //      case  8935: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.. x.x xoo
    //      case  8936: Assert::IsTrue(v == PositionValue(+   54                         )); break;  // ... x.x xoo
    //      case  8937: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x xoo
    //      case  8938: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oxx o.x xoo
    //      case  8939: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .xx o.x xoo
    //      case  8940: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // xox o.x xoo
    //      case  8941: Assert::IsTrue(v == PositionValue(-  402                         )); break;  // oox o.x xoo
    //      case  8942: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // .ox o.x xoo
    //      case  8943: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // x.x o.x xoo
    //      case  8944: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // o.x o.x xoo
    //      case  8945: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // ..x o.x xoo
    //      case  8946: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xxo o.x xoo
    //      case  8947: Assert::IsTrue(v == PositionValue(-  242                         )); break;  // oxo o.x xoo
    //      case  8948: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // .xo o.x xoo
    //      case  8949: Assert::IsTrue(v == PositionValue(-  402                         )); break;  // xoo o.x xoo
    //      case  8950: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x xoo
    //      case  8951: Assert::IsTrue(v == PositionValue(-  454                         )); break;  // .oo o.x xoo
    //      case  8952: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // x.o o.x xoo
    //      case  8953: Assert::IsTrue(v == PositionValue(-  365                         )); break;  // o.o o.x xoo
    //      case  8954: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // ..o o.x xoo
    //      case  8955: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // xx. o.x xoo
    //      case  8956: Assert::IsTrue(v == PositionValue(-  199                         )); break;  // ox. o.x xoo
    //      case  8957: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // .x. o.x xoo
    //      case  8958: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // xo. o.x xoo
    //      case  8959: Assert::IsTrue(v == PositionValue(-  532                         )); break;  // oo. o.x xoo
    //      case  8960: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // .o. o.x xoo
    //      case  8961: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // x.. o.x xoo
    //      case  8962: Assert::IsTrue(v == PositionValue(-  322                         )); break;  // o.. o.x xoo
    //      case  8963: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // ... o.x xoo
    //      case  8964: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x xoo
    //      case  8965: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oxx ..x xoo
    //      case  8966: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .xx ..x xoo
    //      case  8967: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xox ..x xoo
    //      case  8968: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // oox ..x xoo
    //      case  8969: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .ox ..x xoo
    //      case  8970: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.x ..x xoo
    //      case  8971: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x ..x xoo
    //      case  8972: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ..x ..x xoo
    //      case  8973: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xxo ..x xoo
    //      case  8974: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // oxo ..x xoo
    //      case  8975: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .xo ..x xoo
    //      case  8976: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xoo ..x xoo
    //      case  8977: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x xoo
    //      case  8978: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .oo ..x xoo
    //      case  8979: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // x.o ..x xoo
    //      case  8980: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // o.o ..x xoo
    //      case  8981: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // ..o ..x xoo
    //      case  8982: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // xx. ..x xoo
    //      case  8983: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ox. ..x xoo
    //      case  8984: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .x. ..x xoo
    //      case  8985: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xo. ..x xoo
    //      case  8986: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oo. ..x xoo
    //      case  8987: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .o. ..x xoo
    //      case  8988: Assert::IsTrue(v == PositionValue(-   35                         )); break;  // x.. ..x xoo
    //      case  8989: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // o.. ..x xoo
    //      case  8990: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // ... ..x xoo
    //      case  8991: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo xoo
    //      case  8992: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo xoo
    //      case  8993: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo xoo
    //      case  8994: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo xoo
    //      case  8995: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxo xoo
    //      case  8996: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxo xoo
    //      case  8997: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo xoo
    //      case  8998: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxo xoo
    //      case  8999: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxo xoo
    //      case  9000: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo xoo
    //      case  9001: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xxo xoo
    //      case  9002: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xxo xoo
    //      case  9003: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo xoo
    //      case  9004: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo xoo
    //      case  9005: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xxo xoo
    //      case  9006: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo xoo
    //      case  9007: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xxo xoo
    //      case  9008: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xxo xoo
    //      case  9009: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo xoo
    //      case  9010: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // ox. xxo xoo
    //      case  9011: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .x. xxo xoo
    //      case  9012: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo xoo
    //      case  9013: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oo. xxo xoo
    //      case  9014: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // .o. xxo xoo
    //      case  9015: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo xoo
    //      case  9016: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.. xxo xoo
    //      case  9017: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // ... xxo xoo
    //      case  9018: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo xoo
    //      case  9019: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxo xoo
    //      case  9020: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo xoo
    //      case  9021: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo xoo
    //      case  9022: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxo xoo
    //      case  9023: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxo xoo
    //      case  9024: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo xoo
    //      case  9025: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxo xoo
    //      case  9026: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxo xoo
    //      case  9027: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oxo xoo
    //      case  9028: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo xoo
    //      case  9029: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oxo xoo
    //      case  9030: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oxo xoo
    //      case  9031: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo xoo
    //      case  9032: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oxo xoo
    //      case  9033: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oxo xoo
    //      case  9034: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo xoo
    //      case  9035: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oxo xoo
    //      case  9036: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xx. oxo xoo
    //      case  9037: Assert::IsTrue(v == PositionValue(-  319                         )); break;  // ox. oxo xoo
    //      case  9038: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // .x. oxo xoo
    //      case  9039: Assert::IsTrue(v == PositionValue(-  401                         )); break;  // xo. oxo xoo
    //      case  9040: Assert::IsTrue(v == PositionValue(-  730                         )); break;  // oo. oxo xoo
    //      case  9041: Assert::IsTrue(v == PositionValue(-  522                         )); break;  // .o. oxo xoo
    //      case  9042: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // x.. oxo xoo
    //      case  9043: Assert::IsTrue(v == PositionValue(-  442                         )); break;  // o.. oxo xoo
    //      case  9044: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // ... oxo xoo
    //      case  9045: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo xoo
    //      case  9046: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo xoo
    //      case  9047: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo xoo
    //      case  9048: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo xoo
    //      case  9049: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xo xoo
    //      case  9050: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xo xoo
    //      case  9051: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo xoo
    //      case  9052: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xo xoo
    //      case  9053: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xo xoo
    //      case  9054: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .xo xoo
    //      case  9055: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .xo xoo
    //      case  9056: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .xo xoo
    //      case  9057: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .xo xoo
    //      case  9058: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo xoo
    //      case  9059: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .xo xoo
    //      case  9060: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .xo xoo
    //      case  9061: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .xo xoo
    //      case  9062: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .xo xoo
    //      case  9063: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // xx. .xo xoo
    //      case  9064: Assert::IsTrue(v == PositionValue(-  118                         )); break;  // ox. .xo xoo
    //      case  9065: Assert::IsTrue(v == PositionValue(-   75                         )); break;  // .x. .xo xoo
    //      case  9066: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // xo. .xo xoo
    //      case  9067: Assert::IsTrue(v == PositionValue(-  451                         )); break;  // oo. .xo xoo
    //      case  9068: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // .o. .xo xoo
    //      case  9069: Assert::IsTrue(v == PositionValue(-   77                         )); break;  // x.. .xo xoo
    //      case  9070: Assert::IsTrue(v == PositionValue(-  241                         )); break;  // o.. .xo xoo
    //      case  9071: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // ... .xo xoo
    //      case  9072: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo xoo
    //      case  9073: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xoo xoo
    //      case  9074: Assert::IsTrue(v == PositionValue(-  230                         )); break;  // .xx xoo xoo
    //      case  9075: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xoo xoo
    //      case  9076: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo xoo
    //      case  9077: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xoo xoo
    //      case  9078: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xoo xoo
    //      case  9079: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xoo xoo
    //      case  9080: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // ..x xoo xoo
    //      case  9081: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xoo xoo
    //      case  9082: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo xoo
    //      case  9083: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo xoo
    //      case  9084: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xoo xoo
    //      case  9085: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo xoo
    //      case  9086: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo xoo
    //      case  9087: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xoo xoo
    //      case  9088: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo xoo
    //      case  9089: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo xoo
    //      case  9090: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xoo xoo
    //      case  9091: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xoo xoo
    //      case  9092: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // .x. xoo xoo
    //      case  9093: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xoo xoo
    //      case  9094: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo xoo
    //      case  9095: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xoo xoo
    //      case  9096: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xoo xoo
    //      case  9097: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xoo xoo
    //      case  9098: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // ... xoo xoo
    //      case  9099: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo xoo
    //      case  9100: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo xoo
    //      case  9101: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo xoo
    //      case  9102: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo xoo
    //      case  9103: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo xoo
    //      case  9104: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo xoo
    //      case  9105: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo xoo
    //      case  9106: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo xoo
    //      case  9107: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo xoo
    //      case  9108: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo xoo
    //      case  9109: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo xoo
    //      case  9110: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo xoo
    //      case  9111: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo xoo
    //      case  9112: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo xoo
    //      case  9113: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo xoo
    //      case  9114: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo xoo
    //      case  9115: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo xoo
    //      case  9116: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo xoo
    //      case  9117: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo xoo
    //      case  9118: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo xoo
    //      case  9119: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo xoo
    //      case  9120: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo xoo
    //      case  9121: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo xoo
    //      case  9122: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo xoo
    //      case  9123: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo xoo
    //      case  9124: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo xoo
    //      case  9125: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo xoo
    //      case  9126: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo xoo
    //      case  9127: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .oo xoo
    //      case  9128: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // .xx .oo xoo
    //      case  9129: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .oo xoo
    //      case  9130: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo xoo
    //      case  9131: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .oo xoo
    //      case  9132: Assert::IsTrue(v == PositionValue(-  538                         )); break;  // x.x .oo xoo
    //      case  9133: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .oo xoo
    //      case  9134: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // ..x .oo xoo
    //      case  9135: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo xoo
    //      case  9136: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo xoo
    //      case  9137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo xoo
    //      case  9138: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo xoo
    //      case  9139: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo xoo
    //      case  9140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo xoo
    //      case  9141: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo xoo
    //      case  9142: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo xoo
    //      case  9143: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo xoo
    //      case  9144: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // xx. .oo xoo
    //      case  9145: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .oo xoo
    //      case  9146: Assert::IsTrue(v == PositionValue(-  588                         )); break;  // .x. .oo xoo
    //      case  9147: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .oo xoo
    //      case  9148: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo xoo
    //      case  9149: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .oo xoo
    //      case  9150: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // x.. .oo xoo
    //      case  9151: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .oo xoo
    //      case  9152: Assert::IsTrue(v == PositionValue(-  642                         )); break;  // ... .oo xoo
    //      case  9153: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o xoo
    //      case  9154: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oxx x.o xoo
    //      case  9155: Assert::IsTrue(v == PositionValue(+   61                         )); break;  // .xx x.o xoo
    //      case  9156: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.o xoo
    //      case  9157: Assert::IsTrue(v == PositionValue(-  402                         )); break;  // oox x.o xoo
    //      case  9158: Assert::IsTrue(v == PositionValue(-  272                         )); break;  // .ox x.o xoo
    //      case  9159: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.o xoo
    //      case  9160: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // o.x x.o xoo
    //      case  9161: Assert::IsTrue(v == PositionValue(-  149                         )); break;  // ..x x.o xoo
    //      case  9162: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.o xoo
    //      case  9163: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo x.o xoo
    //      case  9164: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo x.o xoo
    //      case  9165: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.o xoo
    //      case  9166: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o xoo
    //      case  9167: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo x.o xoo
    //      case  9168: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.o xoo
    //      case  9169: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o x.o xoo
    //      case  9170: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o x.o xoo
    //      case  9171: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.o xoo
    //      case  9172: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ox. x.o xoo
    //      case  9173: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // .x. x.o xoo
    //      case  9174: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.o xoo
    //      case  9175: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // oo. x.o xoo
    //      case  9176: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // .o. x.o xoo
    //      case  9177: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.o xoo
    //      case  9178: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // o.. x.o xoo
    //      case  9179: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // ... x.o xoo
    //      case  9180: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o xoo
    //      case  9181: Assert::IsTrue(v == PositionValue(-  402                         )); break;  // oxx o.o xoo
    //      case  9182: Assert::IsTrue(v == PositionValue(-  272                         )); break;  // .xx o.o xoo
    //      case  9183: Assert::IsTrue(v == PositionValue(-  562                         )); break;  // xox o.o xoo
    //      case  9184: Assert::IsTrue(v == PositionValue(-  804                         )); break;  // oox o.o xoo
    //      case  9185: Assert::IsTrue(v == PositionValue(-  605                         )); break;  // .ox o.o xoo
    //      case  9186: Assert::IsTrue(v == PositionValue(-  361                         )); break;  // x.x o.o xoo
    //      case  9187: Assert::IsTrue(v == PositionValue(-  525                         )); break;  // o.x o.o xoo
    //      case  9188: Assert::IsTrue(v == PositionValue(-  404                         )); break;  // ..x o.o xoo
    //      case  9189: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo o.o xoo
    //      case  9190: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o xoo
    //      case  9191: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo o.o xoo
    //      case  9192: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo o.o xoo
    //      case  9193: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o xoo
    //      case  9194: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo o.o xoo
    //      case  9195: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o o.o xoo
    //      case  9196: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o xoo
    //      case  9197: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o o.o xoo
    //      case  9198: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // xx. o.o xoo
    //      case  9199: Assert::IsTrue(v == PositionValue(-  532                         )); break;  // ox. o.o xoo
    //      case  9200: Assert::IsTrue(v == PositionValue(-  411                         )); break;  // .x. o.o xoo
    //      case  9201: Assert::IsTrue(v == PositionValue(-  614                         )); break;  // xo. o.o xoo
    //      case  9202: Assert::IsTrue(v == PositionValue(-  865                         )); break;  // oo. o.o xoo
    //      case  9203: Assert::IsTrue(v == PositionValue(-  657                         )); break;  // .o. o.o xoo
    //      case  9204: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // x.. o.o xoo
    //      case  9205: Assert::IsTrue(v == PositionValue(-  577                         )); break;  // o.. o.o xoo
    //      case  9206: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // ... o.o xoo
    //      case  9207: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o xoo
    //      case  9208: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oxx ..o xoo
    //      case  9209: Assert::IsTrue(v == PositionValue(-  149                         )); break;  // .xx ..o xoo
    //      case  9210: Assert::IsTrue(v == PositionValue(-  361                         )); break;  // xox ..o xoo
    //      case  9211: Assert::IsTrue(v == PositionValue(-  525                         )); break;  // oox ..o xoo
    //      case  9212: Assert::IsTrue(v == PositionValue(-  404                         )); break;  // .ox ..o xoo
    //      case  9213: Assert::IsTrue(v == PositionValue(-  238                         )); break;  // x.x ..o xoo
    //      case  9214: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // o.x ..o xoo
    //      case  9215: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // ..x ..o xoo
    //      case  9216: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ..o xoo
    //      case  9217: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ..o xoo
    //      case  9218: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ..o xoo
    //      case  9219: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ..o xoo
    //      case  9220: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o xoo
    //      case  9221: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ..o xoo
    //      case  9222: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ..o xoo
    //      case  9223: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ..o xoo
    //      case  9224: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ..o xoo
    //      case  9225: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // xx. ..o xoo
    //      case  9226: Assert::IsTrue(v == PositionValue(-  331                         )); break;  // ox. ..o xoo
    //      case  9227: Assert::IsTrue(v == PositionValue(-  288                         )); break;  // .x. ..o xoo
    //      case  9228: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // xo. ..o xoo
    //      case  9229: Assert::IsTrue(v == PositionValue(-  586                         )); break;  // oo. ..o xoo
    //      case  9230: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // .o. ..o xoo
    //      case  9231: Assert::IsTrue(v == PositionValue(-  290                         )); break;  // x.. ..o xoo
    //      case  9232: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // o.. ..o xoo
    //      case  9233: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // ... ..o xoo
    //      case  9234: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. xoo
    //      case  9235: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. xoo
    //      case  9236: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. xoo
    //      case  9237: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. xoo
    //      case  9238: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xx. xoo
    //      case  9239: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xx. xoo
    //      case  9240: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. xoo
    //      case  9241: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xx. xoo
    //      case  9242: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xx. xoo
    //      case  9243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. xoo
    //      case  9244: Assert::IsTrue(v == PositionValue(+  328                         )); break;  // oxo xx. xoo
    //      case  9245: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // .xo xx. xoo
    //      case  9246: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. xoo
    //      case  9247: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. xoo
    //      case  9248: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // .oo xx. xoo
    //      case  9249: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. xoo
    //      case  9250: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // o.o xx. xoo
    //      case  9251: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // ..o xx. xoo
    //      case  9252: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. xoo
    //      case  9253: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // ox. xx. xoo
    //      case  9254: Assert::IsTrue(v == PositionValue(+  432                         )); break;  // .x. xx. xoo
    //      case  9255: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. xoo
    //      case  9256: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // oo. xx. xoo
    //      case  9257: Assert::IsTrue(v == PositionValue(+  186                         )); break;  // .o. xx. xoo
    //      case  9258: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. xoo
    //      case  9259: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // o.. xx. xoo
    //      case  9260: Assert::IsTrue(v == PositionValue(+  231                         )); break;  // ... xx. xoo
    //      case  9261: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. xoo
    //      case  9262: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ox. xoo
    //      case  9263: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. xoo
    //      case  9264: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. xoo
    //      case  9265: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ox. xoo
    //      case  9266: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ox. xoo
    //      case  9267: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. xoo
    //      case  9268: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ox. xoo
    //      case  9269: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ox. xoo
    //      case  9270: Assert::IsTrue(v == PositionValue(+  159                         )); break;  // xxo ox. xoo
    //      case  9271: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // oxo ox. xoo
    //      case  9272: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .xo ox. xoo
    //      case  9273: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // xoo ox. xoo
    //      case  9274: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. xoo
    //      case  9275: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // .oo ox. xoo
    //      case  9276: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // x.o ox. xoo
    //      case  9277: Assert::IsTrue(v == PositionValue(-  284                         )); break;  // o.o ox. xoo
    //      case  9278: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // ..o ox. xoo
    //      case  9279: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // xx. ox. xoo
    //      case  9280: Assert::IsTrue(v == PositionValue(-  109                         )); break;  // ox. ox. xoo
    //      case  9281: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // .x. ox. xoo
    //      case  9282: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // xo. ox. xoo
    //      case  9283: Assert::IsTrue(v == PositionValue(-  442                         )); break;  // oo. ox. xoo
    //      case  9284: Assert::IsTrue(v == PositionValue(-  234                         )); break;  // .o. ox. xoo
    //      case  9285: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // x.. ox. xoo
    //      case  9286: Assert::IsTrue(v == PositionValue(-  232                         )); break;  // o.. ox. xoo
    //      case  9287: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // ... ox. xoo
    //      case  9288: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. xoo
    //      case  9289: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. xoo
    //      case  9290: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. xoo
    //      case  9291: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. xoo
    //      case  9292: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .x. xoo
    //      case  9293: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .x. xoo
    //      case  9294: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. xoo
    //      case  9295: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .x. xoo
    //      case  9296: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .x. xoo
    //      case  9297: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // xxo .x. xoo
    //      case  9298: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oxo .x. xoo
    //      case  9299: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // .xo .x. xoo
    //      case  9300: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // xoo .x. xoo
    //      case  9301: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. xoo
    //      case  9302: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // .oo .x. xoo
    //      case  9303: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.o .x. xoo
    //      case  9304: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // o.o .x. xoo
    //      case  9305: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ..o .x. xoo
    //      case  9306: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // xx. .x. xoo
    //      case  9307: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ox. .x. xoo
    //      case  9308: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // .x. .x. xoo
    //      case  9309: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // xo. .x. xoo
    //      case  9310: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // oo. .x. xoo
    //      case  9311: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // .o. .x. xoo
    //      case  9312: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // x.. .x. xoo
    //      case  9313: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // o.. .x. xoo
    //      case  9314: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // ... .x. xoo
    //      case  9315: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. xoo
    //      case  9316: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xo. xoo
    //      case  9317: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // .xx xo. xoo
    //      case  9318: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xo. xoo
    //      case  9319: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. xoo
    //      case  9320: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xo. xoo
    //      case  9321: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xo. xoo
    //      case  9322: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xo. xoo
    //      case  9323: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ..x xo. xoo
    //      case  9324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xo. xoo
    //      case  9325: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. xoo
    //      case  9326: Assert::IsTrue(v == PositionValue(-  202                         )); break;  // .xo xo. xoo
    //      case  9327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xo. xoo
    //      case  9328: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. xoo
    //      case  9329: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. xoo
    //      case  9330: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xo. xoo
    //      case  9331: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. xoo
    //      case  9332: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // ..o xo. xoo
    //      case  9333: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xo. xoo
    //      case  9334: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xo. xoo
    //      case  9335: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .x. xo. xoo
    //      case  9336: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xo. xoo
    //      case  9337: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. xoo
    //      case  9338: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xo. xoo
    //      case  9339: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xo. xoo
    //      case  9340: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xo. xoo
    //      case  9341: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ... xo. xoo
    //      case  9342: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. xoo
    //      case  9343: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. xoo
    //      case  9344: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // .xx oo. xoo
    //      case  9345: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oo. xoo
    //      case  9346: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. xoo
    //      case  9347: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oo. xoo
    //      case  9348: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // x.x oo. xoo
    //      case  9349: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. xoo
    //      case  9350: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // ..x oo. xoo
    //      case  9351: Assert::IsTrue(v == PositionValue(-  492                         )); break;  // xxo oo. xoo
    //      case  9352: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. xoo
    //      case  9353: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // .xo oo. xoo
    //      case  9354: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. xoo
    //      case  9355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. xoo
    //      case  9356: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. xoo
    //      case  9357: Assert::IsTrue(v == PositionValue(-  624                         )); break;  // x.o oo. xoo
    //      case  9358: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. xoo
    //      case  9359: Assert::IsTrue(v == PositionValue(-  676                         )); break;  // ..o oo. xoo
    //      case  9360: Assert::IsTrue(v == PositionValue(-  362                         )); break;  // xx. oo. xoo
    //      case  9361: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. xoo
    //      case  9362: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .x. oo. xoo
    //      case  9363: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oo. xoo
    //      case  9364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. xoo
    //      case  9365: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oo. xoo
    //      case  9366: Assert::IsTrue(v == PositionValue(-  503                         )); break;  // x.. oo. xoo
    //      case  9367: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. xoo
    //      case  9368: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // ... oo. xoo
    //      case  9369: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. xoo
    //      case  9370: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .o. xoo
    //      case  9371: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // .xx .o. xoo
    //      case  9372: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .o. xoo
    //      case  9373: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. xoo
    //      case  9374: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .o. xoo
    //      case  9375: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // x.x .o. xoo
    //      case  9376: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .o. xoo
    //      case  9377: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // ..x .o. xoo
    //      case  9378: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // xxo .o. xoo
    //      case  9379: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. xoo
    //      case  9380: Assert::IsTrue(v == PositionValue(-  412                         )); break;  // .xo .o. xoo
    //      case  9381: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. xoo
    //      case  9382: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. xoo
    //      case  9383: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. xoo
    //      case  9384: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // x.o .o. xoo
    //      case  9385: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. xoo
    //      case  9386: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // ..o .o. xoo
    //      case  9387: Assert::IsTrue(v == PositionValue(-  152                         )); break;  // xx. .o. xoo
    //      case  9388: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .o. xoo
    //      case  9389: Assert::IsTrue(v == PositionValue(-  291                         )); break;  // .x. .o. xoo
    //      case  9390: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .o. xoo
    //      case  9391: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. xoo
    //      case  9392: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .o. xoo
    //      case  9393: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // x.. .o. xoo
    //      case  9394: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .o. xoo
    //      case  9395: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // ... .o. xoo
    //      case  9396: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. xoo
    //      case  9397: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oxx x.. xoo
    //      case  9398: Assert::IsTrue(v == PositionValue(+  262                         )); break;  // .xx x.. xoo
    //      case  9399: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.. xoo
    //      case  9400: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // oox x.. xoo
    //      case  9401: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // .ox x.. xoo
    //      case  9402: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.. xoo
    //      case  9403: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x x.. xoo
    //      case  9404: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // ..x x.. xoo
    //      case  9405: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.. xoo
    //      case  9406: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // oxo x.. xoo
    //      case  9407: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // .xo x.. xoo
    //      case  9408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.. xoo
    //      case  9409: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. xoo
    //      case  9410: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // .oo x.. xoo
    //      case  9411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.. xoo
    //      case  9412: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.o x.. xoo
    //      case  9413: Assert::IsTrue(v == PositionValue(-   34                         )); break;  // ..o x.. xoo
    //      case  9414: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.. xoo
    //      case  9415: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ox. x.. xoo
    //      case  9416: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // .x. x.. xoo
    //      case  9417: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.. xoo
    //      case  9418: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // oo. x.. xoo
    //      case  9419: Assert::IsTrue(v == PositionValue(-   36                         )); break;  // .o. x.. xoo
    //      case  9420: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.. xoo
    //      case  9421: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.. x.. xoo
    //      case  9422: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // ... x.. xoo
    //      case  9423: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. xoo
    //      case  9424: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oxx o.. xoo
    //      case  9425: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // .xx o.. xoo
    //      case  9426: Assert::IsTrue(v == PositionValue(-  283                         )); break;  // xox o.. xoo
    //      case  9427: Assert::IsTrue(v == PositionValue(-  525                         )); break;  // oox o.. xoo
    //      case  9428: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // .ox o.. xoo
    //      case  9429: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // x.x o.. xoo
    //      case  9430: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // o.x o.. xoo
    //      case  9431: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // ..x o.. xoo
    //      case  9432: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xxo o.. xoo
    //      case  9433: Assert::IsTrue(v == PositionValue(-  365                         )); break;  // oxo o.. xoo
    //      case  9434: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // .xo o.. xoo
    //      case  9435: Assert::IsTrue(v == PositionValue(-  447                         )); break;  // xoo o.. xoo
    //      case  9436: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. xoo
    //      case  9437: Assert::IsTrue(v == PositionValue(-  499                         )); break;  // .oo o.. xoo
    //      case  9438: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // x.o o.. xoo
    //      case  9439: Assert::IsTrue(v == PositionValue(-  410                         )); break;  // o.o o.. xoo
    //      case  9440: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // ..o o.. xoo
    //      case  9441: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // xx. o.. xoo
    //      case  9442: Assert::IsTrue(v == PositionValue(-  322                         )); break;  // ox. o.. xoo
    //      case  9443: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // .x. o.. xoo
    //      case  9444: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // xo. o.. xoo
    //      case  9445: Assert::IsTrue(v == PositionValue(-  577                         )); break;  // oo. o.. xoo
    //      case  9446: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // .o. o.. xoo
    //      case  9447: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // x.. o.. xoo
    //      case  9448: Assert::IsTrue(v == PositionValue(-  367                         )); break;  // o.. o.. xoo
    //      case  9449: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // ... o.. xoo
    //      case  9450: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... xoo
    //      case  9451: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oxx ... xoo
    //      case  9452: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // .xx ... xoo
    //      case  9453: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // xox ... xoo
    //      case  9454: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // oox ... xoo
    //      case  9455: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // .ox ... xoo
    //      case  9456: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // x.x ... xoo
    //      case  9457: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.x ... xoo
    //      case  9458: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // ..x ... xoo
    //      case  9459: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xxo ... xoo
    //      case  9460: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // oxo ... xoo
    //      case  9461: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // .xo ... xoo
    //      case  9462: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // xoo ... xoo
    //      case  9463: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... xoo
    //      case  9464: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // .oo ... xoo
    //      case  9465: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // x.o ... xoo
    //      case  9466: Assert::IsTrue(v == PositionValue(-  209                         )); break;  // o.o ... xoo
    //      case  9467: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // ..o ... xoo
    //      case  9468: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // xx. ... xoo
    //      case  9469: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // ox. ... xoo
    //      case  9470: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // .x. ... xoo
    //      case  9471: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // xo. ... xoo
    //      case  9472: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // oo. ... xoo
    //      case  9473: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .o. ... xoo
    //      case  9474: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // x.. ... xoo
    //      case  9475: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // o.. ... xoo
    //      case  9476: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // ... ... xoo
    //      case  9477: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx ooo
    //      case  9478: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx ooo
    //      case  9479: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx ooo
    //      case  9480: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx ooo
    //      case  9481: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx ooo
    //      case  9482: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx ooo
    //      case  9483: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx ooo
    //      case  9484: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx ooo
    //      case  9485: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx ooo
    //      case  9486: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx ooo
    //      case  9487: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx ooo
    //      case  9488: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx ooo
    //      case  9489: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx ooo
    //      case  9490: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx ooo
    //      case  9491: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx ooo
    //      case  9492: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx ooo
    //      case  9493: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx ooo
    //      case  9494: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx ooo
    //      case  9495: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx ooo
    //      case  9496: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx ooo
    //      case  9497: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx ooo
    //      case  9498: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx ooo
    //      case  9499: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx ooo
    //      case  9500: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx ooo
    //      case  9501: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx ooo
    //      case  9502: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx ooo
    //      case  9503: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx ooo
    //      case  9504: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx ooo
    //      case  9505: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxx ooo
    //      case  9506: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx oxx ooo
    //      case  9507: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oxx ooo
    //      case  9508: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxx ooo
    //      case  9509: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oxx ooo
    //      case  9510: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x oxx ooo
    //      case  9511: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxx ooo
    //      case  9512: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x oxx ooo
    //      case  9513: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oxx ooo
    //      case  9514: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxx ooo
    //      case  9515: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oxx ooo
    //      case  9516: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oxx ooo
    //      case  9517: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx ooo
    //      case  9518: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oxx ooo
    //      case  9519: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oxx ooo
    //      case  9520: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxx ooo
    //      case  9521: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oxx ooo
    //      case  9522: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. oxx ooo
    //      case  9523: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxx ooo
    //      case  9524: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. oxx ooo
    //      case  9525: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oxx ooo
    //      case  9526: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxx ooo
    //      case  9527: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oxx ooo
    //      case  9528: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. oxx ooo
    //      case  9529: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxx ooo
    //      case  9530: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... oxx ooo
    //      case  9531: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx ooo
    //      case  9532: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .xx ooo
    //      case  9533: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx .xx ooo
    //      case  9534: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .xx ooo
    //      case  9535: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .xx ooo
    //      case  9536: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .xx ooo
    //      case  9537: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x .xx ooo
    //      case  9538: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .xx ooo
    //      case  9539: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x .xx ooo
    //      case  9540: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .xx ooo
    //      case  9541: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .xx ooo
    //      case  9542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .xx ooo
    //      case  9543: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .xx ooo
    //      case  9544: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx ooo
    //      case  9545: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .xx ooo
    //      case  9546: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .xx ooo
    //      case  9547: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .xx ooo
    //      case  9548: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .xx ooo
    //      case  9549: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. .xx ooo
    //      case  9550: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .xx ooo
    //      case  9551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. .xx ooo
    //      case  9552: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .xx ooo
    //      case  9553: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .xx ooo
    //      case  9554: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .xx ooo
    //      case  9555: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. .xx ooo
    //      case  9556: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .xx ooo
    //      case  9557: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... .xx ooo
    //      case  9558: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox ooo
    //      case  9559: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xox ooo
    //      case  9560: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx xox ooo
    //      case  9561: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xox ooo
    //      case  9562: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox ooo
    //      case  9563: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xox ooo
    //      case  9564: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x xox ooo
    //      case  9565: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xox ooo
    //      case  9566: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x xox ooo
    //      case  9567: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xox ooo
    //      case  9568: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox ooo
    //      case  9569: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xox ooo
    //      case  9570: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xox ooo
    //      case  9571: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox ooo
    //      case  9572: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox ooo
    //      case  9573: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xox ooo
    //      case  9574: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox ooo
    //      case  9575: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xox ooo
    //      case  9576: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. xox ooo
    //      case  9577: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xox ooo
    //      case  9578: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. xox ooo
    //      case  9579: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xox ooo
    //      case  9580: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox ooo
    //      case  9581: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xox ooo
    //      case  9582: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. xox ooo
    //      case  9583: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xox ooo
    //      case  9584: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... xox ooo
    //      case  9585: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox ooo
    //      case  9586: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox ooo
    //      case  9587: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx oox ooo
    //      case  9588: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oox ooo
    //      case  9589: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox ooo
    //      case  9590: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oox ooo
    //      case  9591: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x oox ooo
    //      case  9592: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox ooo
    //      case  9593: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x oox ooo
    //      case  9594: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oox ooo
    //      case  9595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox ooo
    //      case  9596: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oox ooo
    //      case  9597: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox ooo
    //      case  9598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox ooo
    //      case  9599: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox ooo
    //      case  9600: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oox ooo
    //      case  9601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox ooo
    //      case  9602: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oox ooo
    //      case  9603: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. oox ooo
    //      case  9604: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox ooo
    //      case  9605: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. oox ooo
    //      case  9606: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oox ooo
    //      case  9607: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox ooo
    //      case  9608: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oox ooo
    //      case  9609: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. oox ooo
    //      case  9610: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox ooo
    //      case  9611: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... oox ooo
    //      case  9612: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox ooo
    //      case  9613: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .ox ooo
    //      case  9614: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx .ox ooo
    //      case  9615: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .ox ooo
    //      case  9616: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox ooo
    //      case  9617: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .ox ooo
    //      case  9618: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x .ox ooo
    //      case  9619: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .ox ooo
    //      case  9620: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x .ox ooo
    //      case  9621: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .ox ooo
    //      case  9622: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox ooo
    //      case  9623: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .ox ooo
    //      case  9624: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox ooo
    //      case  9625: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox ooo
    //      case  9626: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox ooo
    //      case  9627: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .ox ooo
    //      case  9628: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox ooo
    //      case  9629: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .ox ooo
    //      case  9630: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. .ox ooo
    //      case  9631: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .ox ooo
    //      case  9632: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. .ox ooo
    //      case  9633: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .ox ooo
    //      case  9634: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox ooo
    //      case  9635: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .ox ooo
    //      case  9636: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. .ox ooo
    //      case  9637: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .ox ooo
    //      case  9638: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... .ox ooo
    //      case  9639: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x ooo
    //      case  9640: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx x.x ooo
    //      case  9641: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx x.x ooo
    //      case  9642: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox x.x ooo
    //      case  9643: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox x.x ooo
    //      case  9644: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox x.x ooo
    //      case  9645: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x x.x ooo
    //      case  9646: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x x.x ooo
    //      case  9647: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x x.x ooo
    //      case  9648: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo x.x ooo
    //      case  9649: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo x.x ooo
    //      case  9650: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo x.x ooo
    //      case  9651: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo x.x ooo
    //      case  9652: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x ooo
    //      case  9653: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo x.x ooo
    //      case  9654: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o x.x ooo
    //      case  9655: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o x.x ooo
    //      case  9656: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o x.x ooo
    //      case  9657: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. x.x ooo
    //      case  9658: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. x.x ooo
    //      case  9659: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. x.x ooo
    //      case  9660: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. x.x ooo
    //      case  9661: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. x.x ooo
    //      case  9662: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. x.x ooo
    //      case  9663: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. x.x ooo
    //      case  9664: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. x.x ooo
    //      case  9665: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... x.x ooo
    //      case  9666: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x ooo
    //      case  9667: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.x ooo
    //      case  9668: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx o.x ooo
    //      case  9669: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox o.x ooo
    //      case  9670: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.x ooo
    //      case  9671: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox o.x ooo
    //      case  9672: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x o.x ooo
    //      case  9673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.x ooo
    //      case  9674: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x o.x ooo
    //      case  9675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo o.x ooo
    //      case  9676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.x ooo
    //      case  9677: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo o.x ooo
    //      case  9678: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo o.x ooo
    //      case  9679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x ooo
    //      case  9680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo o.x ooo
    //      case  9681: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o o.x ooo
    //      case  9682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.x ooo
    //      case  9683: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o o.x ooo
    //      case  9684: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. o.x ooo
    //      case  9685: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.x ooo
    //      case  9686: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. o.x ooo
    //      case  9687: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. o.x ooo
    //      case  9688: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.x ooo
    //      case  9689: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. o.x ooo
    //      case  9690: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. o.x ooo
    //      case  9691: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.x ooo
    //      case  9692: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... o.x ooo
    //      case  9693: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x ooo
    //      case  9694: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ..x ooo
    //      case  9695: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ..x ooo
    //      case  9696: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ..x ooo
    //      case  9697: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ..x ooo
    //      case  9698: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ..x ooo
    //      case  9699: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ..x ooo
    //      case  9700: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ..x ooo
    //      case  9701: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ..x ooo
    //      case  9702: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ..x ooo
    //      case  9703: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ..x ooo
    //      case  9704: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ..x ooo
    //      case  9705: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ..x ooo
    //      case  9706: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x ooo
    //      case  9707: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ..x ooo
    //      case  9708: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ..x ooo
    //      case  9709: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ..x ooo
    //      case  9710: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ..x ooo
    //      case  9711: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ..x ooo
    //      case  9712: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ..x ooo
    //      case  9713: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ..x ooo
    //      case  9714: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ..x ooo
    //      case  9715: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ..x ooo
    //      case  9716: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ..x ooo
    //      case  9717: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ..x ooo
    //      case  9718: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ..x ooo
    //      case  9719: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ..x ooo
    //      case  9720: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo ooo
    //      case  9721: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xxo ooo
    //      case  9722: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx xxo ooo
    //      case  9723: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xxo ooo
    //      case  9724: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xxo ooo
    //      case  9725: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xxo ooo
    //      case  9726: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x xxo ooo
    //      case  9727: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xxo ooo
    //      case  9728: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x xxo ooo
    //      case  9729: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xxo ooo
    //      case  9730: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xxo ooo
    //      case  9731: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xxo ooo
    //      case  9732: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xxo ooo
    //      case  9733: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo ooo
    //      case  9734: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xxo ooo
    //      case  9735: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xxo ooo
    //      case  9736: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xxo ooo
    //      case  9737: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xxo ooo
    //      case  9738: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. xxo ooo
    //      case  9739: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xxo ooo
    //      case  9740: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. xxo ooo
    //      case  9741: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xxo ooo
    //      case  9742: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xxo ooo
    //      case  9743: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xxo ooo
    //      case  9744: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. xxo ooo
    //      case  9745: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xxo ooo
    //      case  9746: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... xxo ooo
    //      case  9747: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo ooo
    //      case  9748: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxo ooo
    //      case  9749: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx oxo ooo
    //      case  9750: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oxo ooo
    //      case  9751: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxo ooo
    //      case  9752: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oxo ooo
    //      case  9753: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x oxo ooo
    //      case  9754: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxo ooo
    //      case  9755: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x oxo ooo
    //      case  9756: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oxo ooo
    //      case  9757: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo ooo
    //      case  9758: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oxo ooo
    //      case  9759: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oxo ooo
    //      case  9760: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo ooo
    //      case  9761: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oxo ooo
    //      case  9762: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oxo ooo
    //      case  9763: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo ooo
    //      case  9764: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oxo ooo
    //      case  9765: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. oxo ooo
    //      case  9766: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxo ooo
    //      case  9767: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. oxo ooo
    //      case  9768: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oxo ooo
    //      case  9769: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxo ooo
    //      case  9770: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oxo ooo
    //      case  9771: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. oxo ooo
    //      case  9772: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxo ooo
    //      case  9773: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... oxo ooo
    //      case  9774: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo ooo
    //      case  9775: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .xo ooo
    //      case  9776: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx .xo ooo
    //      case  9777: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .xo ooo
    //      case  9778: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .xo ooo
    //      case  9779: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .xo ooo
    //      case  9780: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x .xo ooo
    //      case  9781: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .xo ooo
    //      case  9782: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x .xo ooo
    //      case  9783: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .xo ooo
    //      case  9784: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .xo ooo
    //      case  9785: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .xo ooo
    //      case  9786: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .xo ooo
    //      case  9787: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo ooo
    //      case  9788: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .xo ooo
    //      case  9789: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .xo ooo
    //      case  9790: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .xo ooo
    //      case  9791: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .xo ooo
    //      case  9792: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. .xo ooo
    //      case  9793: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .xo ooo
    //      case  9794: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. .xo ooo
    //      case  9795: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .xo ooo
    //      case  9796: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .xo ooo
    //      case  9797: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .xo ooo
    //      case  9798: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. .xo ooo
    //      case  9799: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .xo ooo
    //      case  9800: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... .xo ooo
    //      case  9801: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo ooo
    //      case  9802: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xoo ooo
    //      case  9803: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx xoo ooo
    //      case  9804: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xoo ooo
    //      case  9805: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo ooo
    //      case  9806: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xoo ooo
    //      case  9807: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x xoo ooo
    //      case  9808: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xoo ooo
    //      case  9809: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x xoo ooo
    //      case  9810: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xoo ooo
    //      case  9811: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo ooo
    //      case  9812: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo ooo
    //      case  9813: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo ooo
    //      case  9814: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo ooo
    //      case  9815: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo ooo
    //      case  9816: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xoo ooo
    //      case  9817: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo ooo
    //      case  9818: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo ooo
    //      case  9819: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. xoo ooo
    //      case  9820: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xoo ooo
    //      case  9821: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. xoo ooo
    //      case  9822: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xoo ooo
    //      case  9823: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo ooo
    //      case  9824: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xoo ooo
    //      case  9825: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. xoo ooo
    //      case  9826: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xoo ooo
    //      case  9827: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... xoo ooo
    //      case  9828: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo ooo
    //      case  9829: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo ooo
    //      case  9830: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo ooo
    //      case  9831: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo ooo
    //      case  9832: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo ooo
    //      case  9833: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo ooo
    //      case  9834: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo ooo
    //      case  9835: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo ooo
    //      case  9836: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo ooo
    //      case  9837: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo ooo
    //      case  9838: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo ooo
    //      case  9839: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo ooo
    //      case  9840: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo ooo
    //      case  9841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo ooo
    //      case  9842: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo ooo
    //      case  9843: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo ooo
    //      case  9844: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo ooo
    //      case  9845: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo ooo
    //      case  9846: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo ooo
    //      case  9847: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo ooo
    //      case  9848: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo ooo
    //      case  9849: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo ooo
    //      case  9850: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo ooo
    //      case  9851: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo ooo
    //      case  9852: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo ooo
    //      case  9853: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo ooo
    //      case  9854: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo ooo
    //      case  9855: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo ooo
    //      case  9856: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .oo ooo
    //      case  9857: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx .oo ooo
    //      case  9858: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .oo ooo
    //      case  9859: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo ooo
    //      case  9860: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .oo ooo
    //      case  9861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x .oo ooo
    //      case  9862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .oo ooo
    //      case  9863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x .oo ooo
    //      case  9864: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo ooo
    //      case  9865: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo ooo
    //      case  9866: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo ooo
    //      case  9867: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo ooo
    //      case  9868: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo ooo
    //      case  9869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo ooo
    //      case  9870: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo ooo
    //      case  9871: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo ooo
    //      case  9872: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo ooo
    //      case  9873: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. .oo ooo
    //      case  9874: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .oo ooo
    //      case  9875: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. .oo ooo
    //      case  9876: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .oo ooo
    //      case  9877: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo ooo
    //      case  9878: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .oo ooo
    //      case  9879: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. .oo ooo
    //      case  9880: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .oo ooo
    //      case  9881: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... .oo ooo
    //      case  9882: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o ooo
    //      case  9883: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx x.o ooo
    //      case  9884: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx x.o ooo
    //      case  9885: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox x.o ooo
    //      case  9886: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox x.o ooo
    //      case  9887: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox x.o ooo
    //      case  9888: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x x.o ooo
    //      case  9889: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x x.o ooo
    //      case  9890: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x x.o ooo
    //      case  9891: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo x.o ooo
    //      case  9892: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo x.o ooo
    //      case  9893: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo x.o ooo
    //      case  9894: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo x.o ooo
    //      case  9895: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o ooo
    //      case  9896: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo x.o ooo
    //      case  9897: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o x.o ooo
    //      case  9898: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o x.o ooo
    //      case  9899: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o x.o ooo
    //      case  9900: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. x.o ooo
    //      case  9901: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. x.o ooo
    //      case  9902: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. x.o ooo
    //      case  9903: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. x.o ooo
    //      case  9904: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. x.o ooo
    //      case  9905: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. x.o ooo
    //      case  9906: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. x.o ooo
    //      case  9907: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. x.o ooo
    //      case  9908: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... x.o ooo
    //      case  9909: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o ooo
    //      case  9910: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.o ooo
    //      case  9911: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx o.o ooo
    //      case  9912: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox o.o ooo
    //      case  9913: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.o ooo
    //      case  9914: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox o.o ooo
    //      case  9915: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x o.o ooo
    //      case  9916: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.o ooo
    //      case  9917: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x o.o ooo
    //      case  9918: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo o.o ooo
    //      case  9919: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o ooo
    //      case  9920: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo o.o ooo
    //      case  9921: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo o.o ooo
    //      case  9922: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o ooo
    //      case  9923: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo o.o ooo
    //      case  9924: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o o.o ooo
    //      case  9925: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o ooo
    //      case  9926: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o o.o ooo
    //      case  9927: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. o.o ooo
    //      case  9928: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.o ooo
    //      case  9929: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. o.o ooo
    //      case  9930: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. o.o ooo
    //      case  9931: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.o ooo
    //      case  9932: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. o.o ooo
    //      case  9933: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. o.o ooo
    //      case  9934: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.o ooo
    //      case  9935: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... o.o ooo
    //      case  9936: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o ooo
    //      case  9937: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ..o ooo
    //      case  9938: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ..o ooo
    //      case  9939: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ..o ooo
    //      case  9940: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ..o ooo
    //      case  9941: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ..o ooo
    //      case  9942: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ..o ooo
    //      case  9943: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ..o ooo
    //      case  9944: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ..o ooo
    //      case  9945: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ..o ooo
    //      case  9946: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ..o ooo
    //      case  9947: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ..o ooo
    //      case  9948: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ..o ooo
    //      case  9949: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o ooo
    //      case  9950: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ..o ooo
    //      case  9951: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ..o ooo
    //      case  9952: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ..o ooo
    //      case  9953: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ..o ooo
    //      case  9954: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ..o ooo
    //      case  9955: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ..o ooo
    //      case  9956: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ..o ooo
    //      case  9957: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ..o ooo
    //      case  9958: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ..o ooo
    //      case  9959: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ..o ooo
    //      case  9960: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ..o ooo
    //      case  9961: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ..o ooo
    //      case  9962: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ..o ooo
    //      case  9963: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. ooo
    //      case  9964: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xx. ooo
    //      case  9965: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx xx. ooo
    //      case  9966: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xx. ooo
    //      case  9967: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xx. ooo
    //      case  9968: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xx. ooo
    //      case  9969: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x xx. ooo
    //      case  9970: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xx. ooo
    //      case  9971: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x xx. ooo
    //      case  9972: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xx. ooo
    //      case  9973: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xx. ooo
    //      case  9974: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xx. ooo
    //      case  9975: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xx. ooo
    //      case  9976: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. ooo
    //      case  9977: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xx. ooo
    //      case  9978: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xx. ooo
    //      case  9979: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xx. ooo
    //      case  9980: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xx. ooo
    //      case  9981: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. xx. ooo
    //      case  9982: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xx. ooo
    //      case  9983: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. xx. ooo
    //      case  9984: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xx. ooo
    //      case  9985: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xx. ooo
    //      case  9986: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xx. ooo
    //      case  9987: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. xx. ooo
    //      case  9988: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xx. ooo
    //      case  9989: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... xx. ooo
    //      case  9990: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. ooo
    //      case  9991: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ox. ooo
    //      case  9992: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ox. ooo
    //      case  9993: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ox. ooo
    //      case  9994: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ox. ooo
    //      case  9995: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ox. ooo
    //      case  9996: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ox. ooo
    //      case  9997: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ox. ooo
    //      case  9998: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ox. ooo
    //      case  9999: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ox. ooo
    //      case 10000: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ox. ooo
    //      case 10001: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ox. ooo
    //      case 10002: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ox. ooo
    //      case 10003: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. ooo
    //      case 10004: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ox. ooo
    //      case 10005: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ox. ooo
    //      case 10006: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ox. ooo
    //      case 10007: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ox. ooo
    //      case 10008: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ox. ooo
    //      case 10009: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ox. ooo
    //      case 10010: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ox. ooo
    //      case 10011: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ox. ooo
    //      case 10012: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ox. ooo
    //      case 10013: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ox. ooo
    //      case 10014: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ox. ooo
    //      case 10015: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ox. ooo
    //      case 10016: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ox. ooo
    //      case 10017: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. ooo
    //      case 10018: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .x. ooo
    //      case 10019: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx .x. ooo
    //      case 10020: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .x. ooo
    //      case 10021: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .x. ooo
    //      case 10022: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .x. ooo
    //      case 10023: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x .x. ooo
    //      case 10024: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .x. ooo
    //      case 10025: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x .x. ooo
    //      case 10026: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .x. ooo
    //      case 10027: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .x. ooo
    //      case 10028: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .x. ooo
    //      case 10029: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .x. ooo
    //      case 10030: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. ooo
    //      case 10031: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .x. ooo
    //      case 10032: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .x. ooo
    //      case 10033: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .x. ooo
    //      case 10034: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .x. ooo
    //      case 10035: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. .x. ooo
    //      case 10036: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .x. ooo
    //      case 10037: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. .x. ooo
    //      case 10038: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .x. ooo
    //      case 10039: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .x. ooo
    //      case 10040: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .x. ooo
    //      case 10041: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. .x. ooo
    //      case 10042: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .x. ooo
    //      case 10043: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... .x. ooo
    //      case 10044: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. ooo
    //      case 10045: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xo. ooo
    //      case 10046: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx xo. ooo
    //      case 10047: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xo. ooo
    //      case 10048: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. ooo
    //      case 10049: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xo. ooo
    //      case 10050: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x xo. ooo
    //      case 10051: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xo. ooo
    //      case 10052: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x xo. ooo
    //      case 10053: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xo. ooo
    //      case 10054: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. ooo
    //      case 10055: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xo. ooo
    //      case 10056: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xo. ooo
    //      case 10057: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. ooo
    //      case 10058: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. ooo
    //      case 10059: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xo. ooo
    //      case 10060: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. ooo
    //      case 10061: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xo. ooo
    //      case 10062: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. xo. ooo
    //      case 10063: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xo. ooo
    //      case 10064: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. xo. ooo
    //      case 10065: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xo. ooo
    //      case 10066: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. ooo
    //      case 10067: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xo. ooo
    //      case 10068: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. xo. ooo
    //      case 10069: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xo. ooo
    //      case 10070: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... xo. ooo
    //      case 10071: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. ooo
    //      case 10072: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. ooo
    //      case 10073: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx oo. ooo
    //      case 10074: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oo. ooo
    //      case 10075: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. ooo
    //      case 10076: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oo. ooo
    //      case 10077: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x oo. ooo
    //      case 10078: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. ooo
    //      case 10079: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x oo. ooo
    //      case 10080: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oo. ooo
    //      case 10081: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. ooo
    //      case 10082: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oo. ooo
    //      case 10083: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. ooo
    //      case 10084: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. ooo
    //      case 10085: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. ooo
    //      case 10086: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oo. ooo
    //      case 10087: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. ooo
    //      case 10088: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oo. ooo
    //      case 10089: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. oo. ooo
    //      case 10090: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. ooo
    //      case 10091: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. oo. ooo
    //      case 10092: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oo. ooo
    //      case 10093: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. ooo
    //      case 10094: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oo. ooo
    //      case 10095: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. oo. ooo
    //      case 10096: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. ooo
    //      case 10097: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... oo. ooo
    //      case 10098: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. ooo
    //      case 10099: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .o. ooo
    //      case 10100: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx .o. ooo
    //      case 10101: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .o. ooo
    //      case 10102: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. ooo
    //      case 10103: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .o. ooo
    //      case 10104: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x .o. ooo
    //      case 10105: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .o. ooo
    //      case 10106: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x .o. ooo
    //      case 10107: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .o. ooo
    //      case 10108: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. ooo
    //      case 10109: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .o. ooo
    //      case 10110: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. ooo
    //      case 10111: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. ooo
    //      case 10112: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. ooo
    //      case 10113: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .o. ooo
    //      case 10114: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. ooo
    //      case 10115: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .o. ooo
    //      case 10116: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. .o. ooo
    //      case 10117: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .o. ooo
    //      case 10118: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. .o. ooo
    //      case 10119: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .o. ooo
    //      case 10120: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. ooo
    //      case 10121: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .o. ooo
    //      case 10122: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. .o. ooo
    //      case 10123: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .o. ooo
    //      case 10124: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... .o. ooo
    //      case 10125: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. ooo
    //      case 10126: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx x.. ooo
    //      case 10127: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx x.. ooo
    //      case 10128: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox x.. ooo
    //      case 10129: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox x.. ooo
    //      case 10130: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox x.. ooo
    //      case 10131: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x x.. ooo
    //      case 10132: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x x.. ooo
    //      case 10133: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x x.. ooo
    //      case 10134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo x.. ooo
    //      case 10135: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo x.. ooo
    //      case 10136: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo x.. ooo
    //      case 10137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo x.. ooo
    //      case 10138: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. ooo
    //      case 10139: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo x.. ooo
    //      case 10140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o x.. ooo
    //      case 10141: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o x.. ooo
    //      case 10142: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o x.. ooo
    //      case 10143: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. x.. ooo
    //      case 10144: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. x.. ooo
    //      case 10145: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. x.. ooo
    //      case 10146: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. x.. ooo
    //      case 10147: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. x.. ooo
    //      case 10148: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. x.. ooo
    //      case 10149: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. x.. ooo
    //      case 10150: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. x.. ooo
    //      case 10151: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... x.. ooo
    //      case 10152: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. ooo
    //      case 10153: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.. ooo
    //      case 10154: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx o.. ooo
    //      case 10155: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox o.. ooo
    //      case 10156: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.. ooo
    //      case 10157: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox o.. ooo
    //      case 10158: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x o.. ooo
    //      case 10159: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.. ooo
    //      case 10160: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x o.. ooo
    //      case 10161: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo o.. ooo
    //      case 10162: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.. ooo
    //      case 10163: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo o.. ooo
    //      case 10164: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo o.. ooo
    //      case 10165: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. ooo
    //      case 10166: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo o.. ooo
    //      case 10167: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o o.. ooo
    //      case 10168: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.. ooo
    //      case 10169: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o o.. ooo
    //      case 10170: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. o.. ooo
    //      case 10171: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.. ooo
    //      case 10172: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. o.. ooo
    //      case 10173: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. o.. ooo
    //      case 10174: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.. ooo
    //      case 10175: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. o.. ooo
    //      case 10176: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. o.. ooo
    //      case 10177: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.. ooo
    //      case 10178: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... o.. ooo
    //      case 10179: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... ooo
    //      case 10180: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ... ooo
    //      case 10181: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ... ooo
    //      case 10182: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ... ooo
    //      case 10183: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ... ooo
    //      case 10184: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ... ooo
    //      case 10185: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ... ooo
    //      case 10186: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ... ooo
    //      case 10187: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ... ooo
    //      case 10188: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ... ooo
    //      case 10189: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ... ooo
    //      case 10190: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ... ooo
    //      case 10191: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ... ooo
    //      case 10192: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... ooo
    //      case 10193: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ... ooo
    //      case 10194: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ... ooo
    //      case 10195: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ... ooo
    //      case 10196: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ... ooo
    //      case 10197: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ... ooo
    //      case 10198: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ... ooo
    //      case 10199: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ... ooo
    //      case 10200: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ... ooo
    //      case 10201: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ... ooo
    //      case 10202: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ... ooo
    //      case 10203: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ... ooo
    //      case 10204: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ... ooo
    //      case 10205: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ... ooo
    //      case 10206: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx .oo
    //      case 10207: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx .oo
    //      case 10208: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx .oo
    //      case 10209: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx .oo
    //      case 10210: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx .oo
    //      case 10211: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx .oo
    //      case 10212: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx .oo
    //      case 10213: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx .oo
    //      case 10214: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx .oo
    //      case 10215: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx .oo
    //      case 10216: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx .oo
    //      case 10217: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx .oo
    //      case 10218: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx .oo
    //      case 10219: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx .oo
    //      case 10220: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx .oo
    //      case 10221: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx .oo
    //      case 10222: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx .oo
    //      case 10223: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx .oo
    //      case 10224: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx .oo
    //      case 10225: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx .oo
    //      case 10226: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx .oo
    //      case 10227: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx .oo
    //      case 10228: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx .oo
    //      case 10229: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx .oo
    //      case 10230: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx .oo
    //      case 10231: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx .oo
    //      case 10232: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx .oo
    //      case 10233: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx .oo
    //      case 10234: Assert::IsTrue(v == PositionValue(+  230                         )); break;  // oxx oxx .oo
    //      case 10235: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // .xx oxx .oo
    //      case 10236: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // xox oxx .oo
    //      case 10237: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oox oxx .oo
    //      case 10238: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // .ox oxx .oo
    //      case 10239: Assert::IsTrue(v == PositionValue(+  202                         )); break;  // x.x oxx .oo
    //      case 10240: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // o.x oxx .oo
    //      case 10241: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // ..x oxx .oo
    //      case 10242: Assert::IsTrue(v == PositionValue(+  230                         )); break;  // xxo oxx .oo
    //      case 10243: Assert::IsTrue(v == PositionValue(-   99                         )); break;  // oxo oxx .oo
    //      case 10244: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // .xo oxx .oo
    //      case 10245: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xoo oxx .oo
    //      case 10246: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx .oo
    //      case 10247: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // .oo oxx .oo
    //      case 10248: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // x.o oxx .oo
    //      case 10249: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // o.o oxx .oo
    //      case 10250: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ..o oxx .oo
    //      case 10251: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // xx. oxx .oo
    //      case 10252: Assert::IsTrue(v == PositionValue(-   56                         )); break;  // ox. oxx .oo
    //      case 10253: Assert::IsTrue(v == PositionValue(+   74                         )); break;  // .x. oxx .oo
    //      case 10254: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // xo. oxx .oo
    //      case 10255: Assert::IsTrue(v == PositionValue(-  467                         )); break;  // oo. oxx .oo
    //      case 10256: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .o. oxx .oo
    //      case 10257: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // x.. oxx .oo
    //      case 10258: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // o.. oxx .oo
    //      case 10259: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // ... oxx .oo
    //      case 10260: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx .oo
    //      case 10261: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // oxx .xx .oo
    //      case 10262: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .xx .xx .oo
    //      case 10263: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // xox .xx .oo
    //      case 10264: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // oox .xx .oo
    //      case 10265: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .ox .xx .oo
    //      case 10266: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // x.x .xx .oo
    //      case 10267: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // o.x .xx .oo
    //      case 10268: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ..x .xx .oo
    //      case 10269: Assert::IsTrue(v == PositionValue(+  362                         )); break;  // xxo .xx .oo
    //      case 10270: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // oxo .xx .oo
    //      case 10271: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .xo .xx .oo
    //      case 10272: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xoo .xx .oo
    //      case 10273: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx .oo
    //      case 10274: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .oo .xx .oo
    //      case 10275: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // x.o .xx .oo
    //      case 10276: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.o .xx .oo
    //      case 10277: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ..o .xx .oo
    //      case 10278: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // xx. .xx .oo
    //      case 10279: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ox. .xx .oo
    //      case 10280: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // .x. .xx .oo
    //      case 10281: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xo. .xx .oo
    //      case 10282: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oo. .xx .oo
    //      case 10283: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .o. .xx .oo
    //      case 10284: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // x.. .xx .oo
    //      case 10285: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // o.. .xx .oo
    //      case 10286: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // ... .xx .oo
    //      case 10287: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox .oo
    //      case 10288: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xox .oo
    //      case 10289: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // .xx xox .oo
    //      case 10290: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xox .oo
    //      case 10291: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox .oo
    //      case 10292: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xox .oo
    //      case 10293: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // x.x xox .oo
    //      case 10294: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xox .oo
    //      case 10295: Assert::IsTrue(v == PositionValue(-  186                         )); break;  // ..x xox .oo
    //      case 10296: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // xxo xox .oo
    //      case 10297: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox .oo
    //      case 10298: Assert::IsTrue(v == PositionValue(-  227                         )); break;  // .xo xox .oo
    //      case 10299: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xox .oo
    //      case 10300: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox .oo
    //      case 10301: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox .oo
    //      case 10302: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // x.o xox .oo
    //      case 10303: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox .oo
    //      case 10304: Assert::IsTrue(v == PositionValue(-  437                         )); break;  // ..o xox .oo
    //      case 10305: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // xx. xox .oo
    //      case 10306: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xox .oo
    //      case 10307: Assert::IsTrue(v == PositionValue(-   97                         )); break;  // .x. xox .oo
    //      case 10308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xox .oo
    //      case 10309: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox .oo
    //      case 10310: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xox .oo
    //      case 10311: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // x.. xox .oo
    //      case 10312: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xox .oo
    //      case 10313: Assert::IsTrue(v == PositionValue(-  307                         )); break;  // ... xox .oo
    //      case 10314: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox .oo
    //      case 10315: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox .oo
    //      case 10316: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .xx oox .oo
    //      case 10317: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oox .oo
    //      case 10318: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox .oo
    //      case 10319: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oox .oo
    //      case 10320: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // x.x oox .oo
    //      case 10321: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox .oo
    //      case 10322: Assert::IsTrue(v == PositionValue(-  432                         )); break;  // ..x oox .oo
    //      case 10323: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // xxo oox .oo
    //      case 10324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox .oo
    //      case 10325: Assert::IsTrue(v == PositionValue(-  551                         )); break;  // .xo oox .oo
    //      case 10326: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox .oo
    //      case 10327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox .oo
    //      case 10328: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox .oo
    //      case 10329: Assert::IsTrue(v == PositionValue(-  631                         )); break;  // x.o oox .oo
    //      case 10330: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox .oo
    //      case 10331: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // ..o oox .oo
    //      case 10332: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // xx. oox .oo
    //      case 10333: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox .oo
    //      case 10334: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .x. oox .oo
    //      case 10335: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oox .oo
    //      case 10336: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox .oo
    //      case 10337: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oox .oo
    //      case 10338: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // x.. oox .oo
    //      case 10339: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox .oo
    //      case 10340: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // ... oox .oo
    //      case 10341: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox .oo
    //      case 10342: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .ox .oo
    //      case 10343: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // .xx .ox .oo
    //      case 10344: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .ox .oo
    //      case 10345: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox .oo
    //      case 10346: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .ox .oo
    //      case 10347: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // x.x .ox .oo
    //      case 10348: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .ox .oo
    //      case 10349: Assert::IsTrue(v == PositionValue(-  231                         )); break;  // ..x .ox .oo
    //      case 10350: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // xxo .ox .oo
    //      case 10351: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox .oo
    //      case 10352: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // .xo .ox .oo
    //      case 10353: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox .oo
    //      case 10354: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox .oo
    //      case 10355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox .oo
    //      case 10356: Assert::IsTrue(v == PositionValue(-  430                         )); break;  // x.o .ox .oo
    //      case 10357: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox .oo
    //      case 10358: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // ..o .ox .oo
    //      case 10359: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // xx. .ox .oo
    //      case 10360: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .ox .oo
    //      case 10361: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .x. .ox .oo
    //      case 10362: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .ox .oo
    //      case 10363: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox .oo
    //      case 10364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .ox .oo
    //      case 10365: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // x.. .ox .oo
    //      case 10366: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .ox .oo
    //      case 10367: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // ... .ox .oo
    //      case 10368: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x .oo
    //      case 10369: Assert::IsTrue(v == PositionValue(+  272                         )); break;  // oxx x.x .oo
    //      case 10370: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // .xx x.x .oo
    //      case 10371: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xox x.x .oo
    //      case 10372: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oox x.x .oo
    //      case 10373: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // .ox x.x .oo
    //      case 10374: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // x.x x.x .oo
    //      case 10375: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // o.x x.x .oo
    //      case 10376: Assert::IsTrue(v == PositionValue(+   36                         )); break;  // ..x x.x .oo
    //      case 10377: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // xxo x.x .oo
    //      case 10378: Assert::IsTrue(v == PositionValue(+   30                         )); break;  // oxo x.x .oo
    //      case 10379: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // .xo x.x .oo
    //      case 10380: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // xoo x.x .oo
    //      case 10381: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x .oo
    //      case 10382: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // .oo x.x .oo
    //      case 10383: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // x.o x.x .oo
    //      case 10384: Assert::IsTrue(v == PositionValue(-  171                         )); break;  // o.o x.x .oo
    //      case 10385: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // ..o x.x .oo
    //      case 10386: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // xx. x.x .oo
    //      case 10387: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // ox. x.x .oo
    //      case 10388: Assert::IsTrue(v == PositionValue(+  116                         )); break;  // .x. x.x .oo
    //      case 10389: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xo. x.x .oo
    //      case 10390: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // oo. x.x .oo
    //      case 10391: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .o. x.x .oo
    //      case 10392: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // x.. x.x .oo
    //      case 10393: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // o.. x.x .oo
    //      case 10394: Assert::IsTrue(v == PositionValue(-   85                         )); break;  // ... x.x .oo
    //      case 10395: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x .oo
    //      case 10396: Assert::IsTrue(v == PositionValue(-   61                         )); break;  // oxx o.x .oo
    //      case 10397: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // .xx o.x .oo
    //      case 10398: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // xox o.x .oo
    //      case 10399: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // oox o.x .oo
    //      case 10400: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // .ox o.x .oo
    //      case 10401: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // x.x o.x .oo
    //      case 10402: Assert::IsTrue(v == PositionValue(-  262                         )); break;  // o.x o.x .oo
    //      case 10403: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // ..x o.x .oo
    //      case 10404: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // xxo o.x .oo
    //      case 10405: Assert::IsTrue(v == PositionValue(-  303                         )); break;  // oxo o.x .oo
    //      case 10406: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .xo o.x .oo
    //      case 10407: Assert::IsTrue(v == PositionValue(-  454                         )); break;  // xoo o.x .oo
    //      case 10408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x .oo
    //      case 10409: Assert::IsTrue(v == PositionValue(-  506                         )); break;  // .oo o.x .oo
    //      case 10410: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // x.o o.x .oo
    //      case 10411: Assert::IsTrue(v == PositionValue(-  426                         )); break;  // o.o o.x .oo
    //      case 10412: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // ..o o.x .oo
    //      case 10413: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xx. o.x .oo
    //      case 10414: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // ox. o.x .oo
    //      case 10415: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .x. o.x .oo
    //      case 10416: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // xo. o.x .oo
    //      case 10417: Assert::IsTrue(v == PositionValue(-  593                         )); break;  // oo. o.x .oo
    //      case 10418: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // .o. o.x .oo
    //      case 10419: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // x.. o.x .oo
    //      case 10420: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // o.. o.x .oo
    //      case 10421: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // ... o.x .oo
    //      case 10422: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x .oo
    //      case 10423: Assert::IsTrue(v == PositionValue(+  149                         )); break;  // oxx ..x .oo
    //      case 10424: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // .xx ..x .oo
    //      case 10425: Assert::IsTrue(v == PositionValue(-   11                         )); break;  // xox ..x .oo
    //      case 10426: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // oox ..x .oo
    //      case 10427: Assert::IsTrue(v == PositionValue(-   54                         )); break;  // .ox ..x .oo
    //      case 10428: Assert::IsTrue(v == PositionValue(+   34                         )); break;  // x.x ..x .oo
    //      case 10429: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // o.x ..x .oo
    //      case 10430: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // ..x ..x .oo
    //      case 10431: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // xxo ..x .oo
    //      case 10432: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // oxo ..x .oo
    //      case 10433: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // .xo ..x .oo
    //      case 10434: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // xoo ..x .oo
    //      case 10435: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x .oo
    //      case 10436: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // .oo ..x .oo
    //      case 10437: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // x.o ..x .oo
    //      case 10438: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // o.o ..x .oo
    //      case 10439: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ..o ..x .oo
    //      case 10440: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xx. ..x .oo
    //      case 10441: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // ox. ..x .oo
    //      case 10442: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // .x. ..x .oo
    //      case 10443: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // xo. ..x .oo
    //      case 10444: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // oo. ..x .oo
    //      case 10445: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .o. ..x .oo
    //      case 10446: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // x.. ..x .oo
    //      case 10447: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // o.. ..x .oo
    //      case 10448: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ... ..x .oo
    //      case 10449: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo .oo
    //      case 10450: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // oxx xxo .oo
    //      case 10451: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .xx xxo .oo
    //      case 10452: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xox xxo .oo
    //      case 10453: Assert::IsTrue(v == PositionValue(-  319                         )); break;  // oox xxo .oo
    //      case 10454: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // .ox xxo .oo
    //      case 10455: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // x.x xxo .oo
    //      case 10456: Assert::IsTrue(v == PositionValue(-  118                         )); break;  // o.x xxo .oo
    //      case 10457: Assert::IsTrue(v == PositionValue(-   75                         )); break;  // ..x xxo .oo
    //      case 10458: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xxo .oo
    //      case 10459: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xxo .oo
    //      case 10460: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xxo .oo
    //      case 10461: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xxo .oo
    //      case 10462: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo .oo
    //      case 10463: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xxo .oo
    //      case 10464: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xxo .oo
    //      case 10465: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xxo .oo
    //      case 10466: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xxo .oo
    //      case 10467: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // xx. xxo .oo
    //      case 10468: Assert::IsTrue(v == PositionValue(-   56                         )); break;  // ox. xxo .oo
    //      case 10469: Assert::IsTrue(v == PositionValue(-   13                         )); break;  // .x. xxo .oo
    //      case 10470: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // xo. xxo .oo
    //      case 10471: Assert::IsTrue(v == PositionValue(-  467                         )); break;  // oo. xxo .oo
    //      case 10472: Assert::IsTrue(v == PositionValue(-  337                         )); break;  // .o. xxo .oo
    //      case 10473: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // x.. xxo .oo
    //      case 10474: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // o.. xxo .oo
    //      case 10475: Assert::IsTrue(v == PositionValue(-  214                         )); break;  // ... xxo .oo
    //      case 10476: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo .oo
    //      case 10477: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oxx oxo .oo
    //      case 10478: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // .xx oxo .oo
    //      case 10479: Assert::IsTrue(v == PositionValue(-  401                         )); break;  // xox oxo .oo
    //      case 10480: Assert::IsTrue(v == PositionValue(-  730                         )); break;  // oox oxo .oo
    //      case 10481: Assert::IsTrue(v == PositionValue(-  522                         )); break;  // .ox oxo .oo
    //      case 10482: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // x.x oxo .oo
    //      case 10483: Assert::IsTrue(v == PositionValue(-  451                         )); break;  // o.x oxo .oo
    //      case 10484: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // ..x oxo .oo
    //      case 10485: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oxo .oo
    //      case 10486: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo .oo
    //      case 10487: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oxo .oo
    //      case 10488: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oxo .oo
    //      case 10489: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo .oo
    //      case 10490: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oxo .oo
    //      case 10491: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oxo .oo
    //      case 10492: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo .oo
    //      case 10493: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oxo .oo
    //      case 10494: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // xx. oxo .oo
    //      case 10495: Assert::IsTrue(v == PositionValue(-  467                         )); break;  // ox. oxo .oo
    //      case 10496: Assert::IsTrue(v == PositionValue(-  337                         )); break;  // .x. oxo .oo
    //      case 10497: Assert::IsTrue(v == PositionValue(-  540                         )); break;  // xo. oxo .oo
    //      case 10498: Assert::IsTrue(v == PositionValue(-  878                         )); break;  // oo. oxo .oo
    //      case 10499: Assert::IsTrue(v == PositionValue(-  661                         )); break;  // .o. oxo .oo
    //      case 10500: Assert::IsTrue(v == PositionValue(-  339                         )); break;  // x.. oxo .oo
    //      case 10501: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // o.. oxo .oo
    //      case 10502: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // ... oxo .oo
    //      case 10503: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo .oo
    //      case 10504: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oxx .xo .oo
    //      case 10505: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // .xx .xo .oo
    //      case 10506: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // xox .xo .oo
    //      case 10507: Assert::IsTrue(v == PositionValue(-  442                         )); break;  // oox .xo .oo
    //      case 10508: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // .ox .xo .oo
    //      case 10509: Assert::IsTrue(v == PositionValue(-   77                         )); break;  // x.x .xo .oo
    //      case 10510: Assert::IsTrue(v == PositionValue(-  241                         )); break;  // o.x .xo .oo
    //      case 10511: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // ..x .xo .oo
    //      case 10512: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .xo .oo
    //      case 10513: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .xo .oo
    //      case 10514: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .xo .oo
    //      case 10515: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .xo .oo
    //      case 10516: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo .oo
    //      case 10517: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .xo .oo
    //      case 10518: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .xo .oo
    //      case 10519: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .xo .oo
    //      case 10520: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .xo .oo
    //      case 10521: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // xx. .xo .oo
    //      case 10522: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // ox. .xo .oo
    //      case 10523: Assert::IsTrue(v == PositionValue(-  214                         )); break;  // .x. .xo .oo
    //      case 10524: Assert::IsTrue(v == PositionValue(-  339                         )); break;  // xo. .xo .oo
    //      case 10525: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // oo. .xo .oo
    //      case 10526: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // .o. .xo .oo
    //      case 10527: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // x.. .xo .oo
    //      case 10528: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // o.. .xo .oo
    //      case 10529: Assert::IsTrue(v == PositionValue(-  337                         )); break;  // ... .xo .oo
    //      case 10530: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo .oo
    //      case 10531: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xoo .oo
    //      case 10532: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // .xx xoo .oo
    //      case 10533: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xoo .oo
    //      case 10534: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo .oo
    //      case 10535: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xoo .oo
    //      case 10536: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // x.x xoo .oo
    //      case 10537: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xoo .oo
    //      case 10538: Assert::IsTrue(v == PositionValue(-  588                         )); break;  // ..x xoo .oo
    //      case 10539: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xoo .oo
    //      case 10540: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo .oo
    //      case 10541: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo .oo
    //      case 10542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo .oo
    //      case 10543: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo .oo
    //      case 10544: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo .oo
    //      case 10545: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xoo .oo
    //      case 10546: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo .oo
    //      case 10547: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo .oo
    //      case 10548: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // xx. xoo .oo
    //      case 10549: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xoo .oo
    //      case 10550: Assert::IsTrue(v == PositionValue(-  508                         )); break;  // .x. xoo .oo
    //      case 10551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xoo .oo
    //      case 10552: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo .oo
    //      case 10553: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xoo .oo
    //      case 10554: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // x.. xoo .oo
    //      case 10555: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xoo .oo
    //      case 10556: Assert::IsTrue(v == PositionValue(-  640                         )); break;  // ... xoo .oo
    //      case 10557: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo .oo
    //      case 10558: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo .oo
    //      case 10559: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo .oo
    //      case 10560: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo .oo
    //      case 10561: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo .oo
    //      case 10562: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo .oo
    //      case 10563: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo .oo
    //      case 10564: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo .oo
    //      case 10565: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo .oo
    //      case 10566: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo .oo
    //      case 10567: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo .oo
    //      case 10568: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo .oo
    //      case 10569: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo .oo
    //      case 10570: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo .oo
    //      case 10571: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo .oo
    //      case 10572: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo .oo
    //      case 10573: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo .oo
    //      case 10574: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo .oo
    //      case 10575: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo .oo
    //      case 10576: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo .oo
    //      case 10577: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo .oo
    //      case 10578: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo .oo
    //      case 10579: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo .oo
    //      case 10580: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo .oo
    //      case 10581: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo .oo
    //      case 10582: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo .oo
    //      case 10583: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo .oo
    //      case 10584: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo .oo
    //      case 10585: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .oo .oo
    //      case 10586: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .xx .oo .oo
    //      case 10587: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .oo .oo
    //      case 10588: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo .oo
    //      case 10589: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .oo .oo
    //      case 10590: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // x.x .oo .oo
    //      case 10591: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .oo .oo
    //      case 10592: Assert::IsTrue(v == PositionValue(-  642                         )); break;  // ..x .oo .oo
    //      case 10593: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo .oo
    //      case 10594: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo .oo
    //      case 10595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo .oo
    //      case 10596: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo .oo
    //      case 10597: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo .oo
    //      case 10598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo .oo
    //      case 10599: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo .oo
    //      case 10600: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo .oo
    //      case 10601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo .oo
    //      case 10602: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // xx. .oo .oo
    //      case 10603: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .oo .oo
    //      case 10604: Assert::IsTrue(v == PositionValue(-  640                         )); break;  // .x. .oo .oo
    //      case 10605: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .oo .oo
    //      case 10606: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo .oo
    //      case 10607: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .oo .oo
    //      case 10608: Assert::IsTrue(v == PositionValue(-  642                         )); break;  // x.. .oo .oo
    //      case 10609: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .oo .oo
    //      case 10610: Assert::IsTrue(v == PositionValue(-  694                         )); break;  // ... .oo .oo
    //      case 10611: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o .oo
    //      case 10612: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oxx x.o .oo
    //      case 10613: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // .xx x.o .oo
    //      case 10614: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // xox x.o .oo
    //      case 10615: Assert::IsTrue(v == PositionValue(-  532                         )); break;  // oox x.o .oo
    //      case 10616: Assert::IsTrue(v == PositionValue(-  411                         )); break;  // .ox x.o .oo
    //      case 10617: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // x.x x.o .oo
    //      case 10618: Assert::IsTrue(v == PositionValue(-  331                         )); break;  // o.x x.o .oo
    //      case 10619: Assert::IsTrue(v == PositionValue(-  288                         )); break;  // ..x x.o .oo
    //      case 10620: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo x.o .oo
    //      case 10621: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo x.o .oo
    //      case 10622: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo x.o .oo
    //      case 10623: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo x.o .oo
    //      case 10624: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o .oo
    //      case 10625: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo x.o .oo
    //      case 10626: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o x.o .oo
    //      case 10627: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o x.o .oo
    //      case 10628: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o x.o .oo
    //      case 10629: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xx. x.o .oo
    //      case 10630: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // ox. x.o .oo
    //      case 10631: Assert::IsTrue(v == PositionValue(-  217                         )); break;  // .x. x.o .oo
    //      case 10632: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // xo. x.o .oo
    //      case 10633: Assert::IsTrue(v == PositionValue(-  593                         )); break;  // oo. x.o .oo
    //      case 10634: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // .o. x.o .oo
    //      case 10635: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // x.. x.o .oo
    //      case 10636: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // o.. x.o .oo
    //      case 10637: Assert::IsTrue(v == PositionValue(-  340                         )); break;  // ... x.o .oo
    //      case 10638: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o .oo
    //      case 10639: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // oxx o.o .oo
    //      case 10640: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // .xx o.o .oo
    //      case 10641: Assert::IsTrue(v == PositionValue(-  614                         )); break;  // xox o.o .oo
    //      case 10642: Assert::IsTrue(v == PositionValue(-  865                         )); break;  // oox o.o .oo
    //      case 10643: Assert::IsTrue(v == PositionValue(-  657                         )); break;  // .ox o.o .oo
    //      case 10644: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // x.x o.o .oo
    //      case 10645: Assert::IsTrue(v == PositionValue(-  586                         )); break;  // o.x o.o .oo
    //      case 10646: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // ..x o.o .oo
    //      case 10647: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo o.o .oo
    //      case 10648: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o .oo
    //      case 10649: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo o.o .oo
    //      case 10650: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo o.o .oo
    //      case 10651: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o .oo
    //      case 10652: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo o.o .oo
    //      case 10653: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o o.o .oo
    //      case 10654: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o .oo
    //      case 10655: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o o.o .oo
    //      case 10656: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // xx. o.o .oo
    //      case 10657: Assert::IsTrue(v == PositionValue(-  593                         )); break;  // ox. o.o .oo
    //      case 10658: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // .x. o.o .oo
    //      case 10659: Assert::IsTrue(v == PositionValue(-  666                         )); break;  // xo. o.o .oo
    //      case 10660: Assert::IsTrue(v == PositionValue(-  926                         )); break;  // oo. o.o .oo
    //      case 10661: Assert::IsTrue(v == PositionValue(-  709                         )); break;  // .o. o.o .oo
    //      case 10662: Assert::IsTrue(v == PositionValue(-  465                         )); break;  // x.. o.o .oo
    //      case 10663: Assert::IsTrue(v == PositionValue(-  638                         )); break;  // o.. o.o .oo
    //      case 10664: Assert::IsTrue(v == PositionValue(-  508                         )); break;  // ... o.o .oo
    //      case 10665: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o .oo
    //      case 10666: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oxx ..o .oo
    //      case 10667: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // .xx ..o .oo
    //      case 10668: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // xox ..o .oo
    //      case 10669: Assert::IsTrue(v == PositionValue(-  577                         )); break;  // oox ..o .oo
    //      case 10670: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // .ox ..o .oo
    //      case 10671: Assert::IsTrue(v == PositionValue(-  290                         )); break;  // x.x ..o .oo
    //      case 10672: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // o.x ..o .oo
    //      case 10673: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // ..x ..o .oo
    //      case 10674: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ..o .oo
    //      case 10675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ..o .oo
    //      case 10676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ..o .oo
    //      case 10677: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ..o .oo
    //      case 10678: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o .oo
    //      case 10679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ..o .oo
    //      case 10680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ..o .oo
    //      case 10681: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ..o .oo
    //      case 10682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ..o .oo
    //      case 10683: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // xx. ..o .oo
    //      case 10684: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // ox. ..o .oo
    //      case 10685: Assert::IsTrue(v == PositionValue(-  340                         )); break;  // .x. ..o .oo
    //      case 10686: Assert::IsTrue(v == PositionValue(-  465                         )); break;  // xo. ..o .oo
    //      case 10687: Assert::IsTrue(v == PositionValue(-  638                         )); break;  // oo. ..o .oo
    //      case 10688: Assert::IsTrue(v == PositionValue(-  508                         )); break;  // .o. ..o .oo
    //      case 10689: Assert::IsTrue(v == PositionValue(-  342                         )); break;  // x.. ..o .oo
    //      case 10690: Assert::IsTrue(v == PositionValue(-  428                         )); break;  // o.. ..o .oo
    //      case 10691: Assert::IsTrue(v == PositionValue(-  385                         )); break;  // ... ..o .oo
    //      case 10692: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. .oo
    //      case 10693: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // oxx xx. .oo
    //      case 10694: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // .xx xx. .oo
    //      case 10695: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // xox xx. .oo
    //      case 10696: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // oox xx. .oo
    //      case 10697: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .ox xx. .oo
    //      case 10698: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // x.x xx. .oo
    //      case 10699: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // o.x xx. .oo
    //      case 10700: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // ..x xx. .oo
    //      case 10701: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // xxo xx. .oo
    //      case 10702: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // oxo xx. .oo
    //      case 10703: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .xo xx. .oo
    //      case 10704: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // xoo xx. .oo
    //      case 10705: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. .oo
    //      case 10706: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .oo xx. .oo
    //      case 10707: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.o xx. .oo
    //      case 10708: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.o xx. .oo
    //      case 10709: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ..o xx. .oo
    //      case 10710: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // xx. xx. .oo
    //      case 10711: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ox. xx. .oo
    //      case 10712: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // .x. xx. .oo
    //      case 10713: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // xo. xx. .oo
    //      case 10714: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oo. xx. .oo
    //      case 10715: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .o. xx. .oo
    //      case 10716: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.. xx. .oo
    //      case 10717: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // o.. xx. .oo
    //      case 10718: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // ... xx. .oo
    //      case 10719: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. .oo
    //      case 10720: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // oxx ox. .oo
    //      case 10721: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .xx ox. .oo
    //      case 10722: Assert::IsTrue(v == PositionValue(-  122                         )); break;  // xox ox. .oo
    //      case 10723: Assert::IsTrue(v == PositionValue(-  451                         )); break;  // oox ox. .oo
    //      case 10724: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // .ox ox. .oo
    //      case 10725: Assert::IsTrue(v == PositionValue(+    1                         )); break;  // x.x ox. .oo
    //      case 10726: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // o.x ox. .oo
    //      case 10727: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // ..x ox. .oo
    //      case 10728: Assert::IsTrue(v == PositionValue(+   29                         )); break;  // xxo ox. .oo
    //      case 10729: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // oxo ox. .oo
    //      case 10730: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .xo ox. .oo
    //      case 10731: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // xoo ox. .oo
    //      case 10732: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. .oo
    //      case 10733: Assert::IsTrue(v == PositionValue(-  503                         )); break;  // .oo ox. .oo
    //      case 10734: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // x.o ox. .oo
    //      case 10735: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // o.o ox. .oo
    //      case 10736: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // ..o ox. .oo
    //      case 10737: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xx. ox. .oo
    //      case 10738: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // ox. ox. .oo
    //      case 10739: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // .x. ox. .oo
    //      case 10740: Assert::IsTrue(v == PositionValue(-  252                         )); break;  // xo. ox. .oo
    //      case 10741: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // oo. ox. .oo
    //      case 10742: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // .o. ox. .oo
    //      case 10743: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // x.. ox. .oo
    //      case 10744: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // o.. ox. .oo
    //      case 10745: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // ... ox. .oo
    //      case 10746: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. .oo
    //      case 10747: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // oxx .x. .oo
    //      case 10748: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .xx .x. .oo
    //      case 10749: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // xox .x. .oo
    //      case 10750: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // oox .x. .oo
    //      case 10751: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // .ox .x. .oo
    //      case 10752: Assert::IsTrue(v == PositionValue(+  124                         )); break;  // x.x .x. .oo
    //      case 10753: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.x .x. .oo
    //      case 10754: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // ..x .x. .oo
    //      case 10755: Assert::IsTrue(v == PositionValue(+  152                         )); break;  // xxo .x. .oo
    //      case 10756: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // oxo .x. .oo
    //      case 10757: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // .xo .x. .oo
    //      case 10758: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // xoo .x. .oo
    //      case 10759: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. .oo
    //      case 10760: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // .oo .x. .oo
    //      case 10761: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // x.o .x. .oo
    //      case 10762: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.o .x. .oo
    //      case 10763: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ..o .x. .oo
    //      case 10764: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // xx. .x. .oo
    //      case 10765: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // ox. .x. .oo
    //      case 10766: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // .x. .x. .oo
    //      case 10767: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // xo. .x. .oo
    //      case 10768: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // oo. .x. .oo
    //      case 10769: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // .o. .x. .oo
    //      case 10770: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // x.. .x. .oo
    //      case 10771: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.. .x. .oo
    //      case 10772: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // ... .x. .oo
    //      case 10773: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. .oo
    //      case 10774: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xo. .oo
    //      case 10775: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .xx xo. .oo
    //      case 10776: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xo. .oo
    //      case 10777: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. .oo
    //      case 10778: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xo. .oo
    //      case 10779: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // x.x xo. .oo
    //      case 10780: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xo. .oo
    //      case 10781: Assert::IsTrue(v == PositionValue(-  309                         )); break;  // ..x xo. .oo
    //      case 10782: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // xxo xo. .oo
    //      case 10783: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. .oo
    //      case 10784: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // .xo xo. .oo
    //      case 10785: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xo. .oo
    //      case 10786: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. .oo
    //      case 10787: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. .oo
    //      case 10788: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // x.o xo. .oo
    //      case 10789: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. .oo
    //      case 10790: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // ..o xo. .oo
    //      case 10791: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // xx. xo. .oo
    //      case 10792: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xo. .oo
    //      case 10793: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .x. xo. .oo
    //      case 10794: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xo. .oo
    //      case 10795: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. .oo
    //      case 10796: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xo. .oo
    //      case 10797: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // x.. xo. .oo
    //      case 10798: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xo. .oo
    //      case 10799: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // ... xo. .oo
    //      case 10800: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. .oo
    //      case 10801: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. .oo
    //      case 10802: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // .xx oo. .oo
    //      case 10803: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oo. .oo
    //      case 10804: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. .oo
    //      case 10805: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oo. .oo
    //      case 10806: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // x.x oo. .oo
    //      case 10807: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. .oo
    //      case 10808: Assert::IsTrue(v == PositionValue(-  564                         )); break;  // ..x oo. .oo
    //      case 10809: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // xxo oo. .oo
    //      case 10810: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. .oo
    //      case 10811: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // .xo oo. .oo
    //      case 10812: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. .oo
    //      case 10813: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. .oo
    //      case 10814: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. .oo
    //      case 10815: Assert::IsTrue(v == PositionValue(-  685                         )); break;  // x.o oo. .oo
    //      case 10816: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. .oo
    //      case 10817: Assert::IsTrue(v == PositionValue(-  737                         )); break;  // ..o oo. .oo
    //      case 10818: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // xx. oo. .oo
    //      case 10819: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. .oo
    //      case 10820: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // .x. oo. .oo
    //      case 10821: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oo. .oo
    //      case 10822: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. .oo
    //      case 10823: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oo. .oo
    //      case 10824: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // x.. oo. .oo
    //      case 10825: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. .oo
    //      case 10826: Assert::IsTrue(v == PositionValue(-  607                         )); break;  // ... oo. .oo
    //      case 10827: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. .oo
    //      case 10828: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .o. .oo
    //      case 10829: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .xx .o. .oo
    //      case 10830: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .o. .oo
    //      case 10831: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. .oo
    //      case 10832: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .o. .oo
    //      case 10833: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // x.x .o. .oo
    //      case 10834: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .o. .oo
    //      case 10835: Assert::IsTrue(v == PositionValue(-  354                         )); break;  // ..x .o. .oo
    //      case 10836: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // xxo .o. .oo
    //      case 10837: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. .oo
    //      case 10838: Assert::IsTrue(v == PositionValue(-  473                         )); break;  // .xo .o. .oo
    //      case 10839: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. .oo
    //      case 10840: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. .oo
    //      case 10841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. .oo
    //      case 10842: Assert::IsTrue(v == PositionValue(-  475                         )); break;  // x.o .o. .oo
    //      case 10843: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. .oo
    //      case 10844: Assert::IsTrue(v == PositionValue(-  527                         )); break;  // ..o .o. .oo
    //      case 10845: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // xx. .o. .oo
    //      case 10846: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .o. .oo
    //      case 10847: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // .x. .o. .oo
    //      case 10848: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .o. .oo
    //      case 10849: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. .oo
    //      case 10850: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .o. .oo
    //      case 10851: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // x.. .o. .oo
    //      case 10852: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .o. .oo
    //      case 10853: Assert::IsTrue(v == PositionValue(-  397                         )); break;  // ... .o. .oo
    //      case 10854: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. .oo
    //      case 10855: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // oxx x.. .oo
    //      case 10856: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .xx x.. .oo
    //      case 10857: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xox x.. .oo
    //      case 10858: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oox x.. .oo
    //      case 10859: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // .ox x.. .oo
    //      case 10860: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.x x.. .oo
    //      case 10861: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // o.x x.. .oo
    //      case 10862: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // ..x x.. .oo
    //      case 10863: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // xxo x.. .oo
    //      case 10864: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // oxo x.. .oo
    //      case 10865: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // .xo x.. .oo
    //      case 10866: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // xoo x.. .oo
    //      case 10867: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. .oo
    //      case 10868: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // .oo x.. .oo
    //      case 10869: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // x.o x.. .oo
    //      case 10870: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // o.o x.. .oo
    //      case 10871: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ..o x.. .oo
    //      case 10872: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // xx. x.. .oo
    //      case 10873: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // ox. x.. .oo
    //      case 10874: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // .x. x.. .oo
    //      case 10875: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // xo. x.. .oo
    //      case 10876: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // oo. x.. .oo
    //      case 10877: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .o. x.. .oo
    //      case 10878: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.. x.. .oo
    //      case 10879: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // o.. x.. .oo
    //      case 10880: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ... x.. .oo
    //      case 10881: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. .oo
    //      case 10882: Assert::IsTrue(v == PositionValue(-  262                         )); break;  // oxx o.. .oo
    //      case 10883: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .xx o.. .oo
    //      case 10884: Assert::IsTrue(v == PositionValue(-  335                         )); break;  // xox o.. .oo
    //      case 10885: Assert::IsTrue(v == PositionValue(-  586                         )); break;  // oox o.. .oo
    //      case 10886: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // .ox o.. .oo
    //      case 10887: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // x.x o.. .oo
    //      case 10888: Assert::IsTrue(v == PositionValue(-  385                         )); break;  // o.x o.. .oo
    //      case 10889: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // ..x o.. .oo
    //      case 10890: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // xxo o.. .oo
    //      case 10891: Assert::IsTrue(v == PositionValue(-  426                         )); break;  // oxo o.. .oo
    //      case 10892: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // .xo o.. .oo
    //      case 10893: Assert::IsTrue(v == PositionValue(-  499                         )); break;  // xoo o.. .oo
    //      case 10894: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. .oo
    //      case 10895: Assert::IsTrue(v == PositionValue(-  551                         )); break;  // .oo o.. .oo
    //      case 10896: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // x.o o.. .oo
    //      case 10897: Assert::IsTrue(v == PositionValue(-  471                         )); break;  // o.o o.. .oo
    //      case 10898: Assert::IsTrue(v == PositionValue(-  341                         )); break;  // ..o o.. .oo
    //      case 10899: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xx. o.. .oo
    //      case 10900: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // ox. o.. .oo
    //      case 10901: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .x. o.. .oo
    //      case 10902: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // xo. o.. .oo
    //      case 10903: Assert::IsTrue(v == PositionValue(-  638                         )); break;  // oo. o.. .oo
    //      case 10904: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .o. o.. .oo
    //      case 10905: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // x.. o.. .oo
    //      case 10906: Assert::IsTrue(v == PositionValue(-  428                         )); break;  // o.. o.. .oo
    //      case 10907: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // ... o.. .oo
    //      case 10908: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... .oo
    //      case 10909: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // oxx ... .oo
    //      case 10910: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xx ... .oo
    //      case 10911: Assert::IsTrue(v == PositionValue(-  134                         )); break;  // xox ... .oo
    //      case 10912: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // oox ... .oo
    //      case 10913: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // .ox ... .oo
    //      case 10914: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // x.x ... .oo
    //      case 10915: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // o.x ... .oo
    //      case 10916: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // ..x ... .oo
    //      case 10917: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // xxo ... .oo
    //      case 10918: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // oxo ... .oo
    //      case 10919: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .xo ... .oo
    //      case 10920: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // xoo ... .oo
    //      case 10921: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... .oo
    //      case 10922: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // .oo ... .oo
    //      case 10923: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // x.o ... .oo
    //      case 10924: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // o.o ... .oo
    //      case 10925: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // ..o ... .oo
    //      case 10926: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xx. ... .oo
    //      case 10927: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ox. ... .oo
    //      case 10928: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .x. ... .oo
    //      case 10929: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // xo. ... .oo
    //      case 10930: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // oo. ... .oo
    //      case 10931: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .o. ... .oo
    //      case 10932: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // x.. ... .oo
    //      case 10933: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // o.. ... .oo
    //      case 10934: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // ... ... .oo
    //      case 10935: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx x.o
    //      case 10936: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx x.o
    //      case 10937: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx x.o
    //      case 10938: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx x.o
    //      case 10939: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx x.o
    //      case 10940: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx x.o
    //      case 10941: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx x.o
    //      case 10942: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx x.o
    //      case 10943: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx x.o
    //      case 10944: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx x.o
    //      case 10945: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx x.o
    //      case 10946: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx x.o
    //      case 10947: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx x.o
    //      case 10948: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx x.o
    //      case 10949: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx x.o
    //      case 10950: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx x.o
    //      case 10951: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx x.o
    //      case 10952: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx x.o
    //      case 10953: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx x.o
    //      case 10954: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx x.o
    //      case 10955: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx x.o
    //      case 10956: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx x.o
    //      case 10957: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx x.o
    //      case 10958: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx x.o
    //      case 10959: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx x.o
    //      case 10960: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx x.o
    //      case 10961: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx x.o
    //      case 10962: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx x.o
    //      case 10963: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx x.o
    //      case 10964: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx x.o
    //      case 10965: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx x.o
    //      case 10966: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxx x.o
    //      case 10967: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx x.o
    //      case 10968: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx x.o
    //      case 10969: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxx x.o
    //      case 10970: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx x.o
    //      case 10971: Assert::IsTrue(v == PositionValue(+  570                         )); break;  // xxo oxx x.o
    //      case 10972: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // oxo oxx x.o
    //      case 10973: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // .xo oxx x.o
    //      case 10974: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xoo oxx x.o
    //      case 10975: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx x.o
    //      case 10976: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // .oo oxx x.o
    //      case 10977: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // x.o oxx x.o
    //      case 10978: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // o.o oxx x.o
    //      case 10979: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // ..o oxx x.o
    //      case 10980: Assert::IsTrue(v == PositionValue(+  631                         )); break;  // xx. oxx x.o
    //      case 10981: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // ox. oxx x.o
    //      case 10982: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // .x. oxx x.o
    //      case 10983: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // xo. oxx x.o
    //      case 10984: Assert::IsTrue(v == PositionValue(-  118                         )); break;  // oo. oxx x.o
    //      case 10985: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .o. oxx x.o
    //      case 10986: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // x.. oxx x.o
    //      case 10987: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // o.. oxx x.o
    //      case 10988: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ... oxx x.o
    //      case 10989: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx x.o
    //      case 10990: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx x.o
    //      case 10991: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx x.o
    //      case 10992: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx x.o
    //      case 10993: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx x.o
    //      case 10994: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx x.o
    //      case 10995: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx x.o
    //      case 10996: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx x.o
    //      case 10997: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx x.o
    //      case 10998: Assert::IsTrue(v == PositionValue(+  624                         )); break;  // xxo .xx x.o
    //      case 10999: Assert::IsTrue(v == PositionValue(+  382                         )); break;  // oxo .xx x.o
    //      case 11000: Assert::IsTrue(v == PositionValue(+  425                         )); break;  // .xo .xx x.o
    //      case 11001: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // xoo .xx x.o
    //      case 11002: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx x.o
    //      case 11003: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // .oo .xx x.o
    //      case 11004: Assert::IsTrue(v == PositionValue(+  336                         )); break;  // x.o .xx x.o
    //      case 11005: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // o.o .xx x.o
    //      case 11006: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // ..o .xx x.o
    //      case 11007: Assert::IsTrue(v == PositionValue(+  685                         )); break;  // xx. .xx x.o
    //      case 11008: Assert::IsTrue(v == PositionValue(+  434                         )); break;  // ox. .xx x.o
    //      case 11009: Assert::IsTrue(v == PositionValue(+  477                         )); break;  // .x. .xx x.o
    //      case 11010: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // xo. .xx x.o
    //      case 11011: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // oo. .xx x.o
    //      case 11012: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // .o. .xx x.o
    //      case 11013: Assert::IsTrue(v == PositionValue(+  388                         )); break;  // x.. .xx x.o
    //      case 11014: Assert::IsTrue(v == PositionValue(+  224                         )); break;  // o.. .xx x.o
    //      case 11015: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // ... .xx x.o
    //      case 11016: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox x.o
    //      case 11017: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xox x.o
    //      case 11018: Assert::IsTrue(v == PositionValue(+  451                         )); break;  // .xx xox x.o
    //      case 11019: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox x.o
    //      case 11020: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox x.o
    //      case 11021: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // .ox xox x.o
    //      case 11022: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox x.o
    //      case 11023: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xox x.o
    //      case 11024: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ..x xox x.o
    //      case 11025: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xox x.o
    //      case 11026: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox x.o
    //      case 11027: Assert::IsTrue(v == PositionValue(+  122                         )); break;  // .xo xox x.o
    //      case 11028: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xox x.o
    //      case 11029: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox x.o
    //      case 11030: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // .oo xox x.o
    //      case 11031: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xox x.o
    //      case 11032: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox x.o
    //      case 11033: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // ..o xox x.o
    //      case 11034: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xox x.o
    //      case 11035: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xox x.o
    //      case 11036: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // .x. xox x.o
    //      case 11037: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xox x.o
    //      case 11038: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox x.o
    //      case 11039: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .o. xox x.o
    //      case 11040: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xox x.o
    //      case 11041: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xox x.o
    //      case 11042: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // ... xox x.o
    //      case 11043: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox x.o
    //      case 11044: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox x.o
    //      case 11045: Assert::IsTrue(v == PositionValue(+  118                         )); break;  // .xx oox x.o
    //      case 11046: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xox oox x.o
    //      case 11047: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox x.o
    //      case 11048: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // .ox oox x.o
    //      case 11049: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // x.x oox x.o
    //      case 11050: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox x.o
    //      case 11051: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // ..x oox x.o
    //      case 11052: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // xxo oox x.o
    //      case 11053: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox x.o
    //      case 11054: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // .xo oox x.o
    //      case 11055: Assert::IsTrue(v == PositionValue(-  570                         )); break;  // xoo oox x.o
    //      case 11056: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox x.o
    //      case 11057: Assert::IsTrue(v == PositionValue(-  631                         )); break;  // .oo oox x.o
    //      case 11058: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // x.o oox x.o
    //      case 11059: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox x.o
    //      case 11060: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // ..o oox x.o
    //      case 11061: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // xx. oox x.o
    //      case 11062: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox x.o
    //      case 11063: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .x. oox x.o
    //      case 11064: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // xo. oox x.o
    //      case 11065: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox x.o
    //      case 11066: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // .o. oox x.o
    //      case 11067: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // x.. oox x.o
    //      case 11068: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox x.o
    //      case 11069: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ... oox x.o
    //      case 11070: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox x.o
    //      case 11071: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .ox x.o
    //      case 11072: Assert::IsTrue(v == PositionValue(+  241                         )); break;  // .xx .ox x.o
    //      case 11073: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // xox .ox x.o
    //      case 11074: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox x.o
    //      case 11075: Assert::IsTrue(v == PositionValue(-  101                         )); break;  // .ox .ox x.o
    //      case 11076: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // x.x .ox x.o
    //      case 11077: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .ox x.o
    //      case 11078: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // ..x .ox x.o
    //      case 11079: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // xxo .ox x.o
    //      case 11080: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox x.o
    //      case 11081: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // .xo .ox x.o
    //      case 11082: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // xoo .ox x.o
    //      case 11083: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox x.o
    //      case 11084: Assert::IsTrue(v == PositionValue(-  430                         )); break;  // .oo .ox x.o
    //      case 11085: Assert::IsTrue(v == PositionValue(-  159                         )); break;  // x.o .ox x.o
    //      case 11086: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox x.o
    //      case 11087: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // ..o .ox x.o
    //      case 11088: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // xx. .ox x.o
    //      case 11089: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .ox x.o
    //      case 11090: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // .x. .ox x.o
    //      case 11091: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // xo. .ox x.o
    //      case 11092: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox x.o
    //      case 11093: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // .o. .ox x.o
    //      case 11094: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // x.. .ox x.o
    //      case 11095: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .ox x.o
    //      case 11096: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // ... .ox x.o
    //      case 11097: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x x.o
    //      case 11098: Assert::IsTrue(v == PositionValue(+  525                         )); break;  // oxx x.x x.o
    //      case 11099: Assert::IsTrue(v == PositionValue(+  586                         )); break;  // .xx x.x x.o
    //      case 11100: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x x.o
    //      case 11101: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oox x.x x.o
    //      case 11102: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .ox x.x x.o
    //      case 11103: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x x.o
    //      case 11104: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // o.x x.x x.o
    //      case 11105: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // ..x x.x x.o
    //      case 11106: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.x x.o
    //      case 11107: Assert::IsTrue(v == PositionValue(+  283                         )); break;  // oxo x.x x.o
    //      case 11108: Assert::IsTrue(v == PositionValue(+  335                         )); break;  // .xo x.x x.o
    //      case 11109: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.x x.o
    //      case 11110: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x x.o
    //      case 11111: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .oo x.x x.o
    //      case 11112: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.x x.o
    //      case 11113: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // o.o x.x x.o
    //      case 11114: Assert::IsTrue(v == PositionValue(+  134                         )); break;  // ..o x.x x.o
    //      case 11115: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.x x.o
    //      case 11116: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // ox. x.x x.o
    //      case 11117: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // .x. x.x x.o
    //      case 11118: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.x x.o
    //      case 11119: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // oo. x.x x.o
    //      case 11120: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // .o. x.x x.o
    //      case 11121: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.x x.o
    //      case 11122: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // o.. x.x x.o
    //      case 11123: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // ... x.x x.o
    //      case 11124: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x x.o
    //      case 11125: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oxx o.x x.o
    //      case 11126: Assert::IsTrue(v == PositionValue(+  331                         )); break;  // .xx o.x x.o
    //      case 11127: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xox o.x x.o
    //      case 11128: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oox o.x x.o
    //      case 11129: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .ox o.x x.o
    //      case 11130: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // x.x o.x x.o
    //      case 11131: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x o.x x.o
    //      case 11132: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // ..x o.x x.o
    //      case 11133: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xxo o.x x.o
    //      case 11134: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // oxo o.x x.o
    //      case 11135: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .xo o.x x.o
    //      case 11136: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xoo o.x x.o
    //      case 11137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x x.o
    //      case 11138: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .oo o.x x.o
    //      case 11139: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o o.x x.o
    //      case 11140: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // o.o o.x x.o
    //      case 11141: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ..o o.x x.o
    //      case 11142: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xx. o.x x.o
    //      case 11143: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ox. o.x x.o
    //      case 11144: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .x. o.x x.o
    //      case 11145: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xo. o.x x.o
    //      case 11146: Assert::IsTrue(v == PositionValue(-  331                         )); break;  // oo. o.x x.o
    //      case 11147: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .o. o.x x.o
    //      case 11148: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.. o.x x.o
    //      case 11149: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // o.. o.x x.o
    //      case 11150: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... o.x x.o
    //      case 11151: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x x.o
    //      case 11152: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // oxx ..x x.o
    //      case 11153: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // .xx ..x x.o
    //      case 11154: Assert::IsTrue(v == PositionValue(+  164                         )); break;  // xox ..x x.o
    //      case 11155: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oox ..x x.o
    //      case 11156: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // .ox ..x x.o
    //      case 11157: Assert::IsTrue(v == PositionValue(+  209                         )); break;  // x.x ..x x.o
    //      case 11158: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // o.x ..x x.o
    //      case 11159: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // ..x ..x x.o
    //      case 11160: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // xxo ..x x.o
    //      case 11161: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // oxo ..x x.o
    //      case 11162: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // .xo ..x x.o
    //      case 11163: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // xoo ..x x.o
    //      case 11164: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x x.o
    //      case 11165: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .oo ..x x.o
    //      case 11166: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // x.o ..x x.o
    //      case 11167: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.o ..x x.o
    //      case 11168: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ..o ..x x.o
    //      case 11169: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // xx. ..x x.o
    //      case 11170: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ox. ..x x.o
    //      case 11171: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .x. ..x x.o
    //      case 11172: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // xo. ..x x.o
    //      case 11173: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oo. ..x x.o
    //      case 11174: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .o. ..x x.o
    //      case 11175: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // x.. ..x x.o
    //      case 11176: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.. ..x x.o
    //      case 11177: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ... ..x x.o
    //      case 11178: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo x.o
    //      case 11179: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo x.o
    //      case 11180: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo x.o
    //      case 11181: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo x.o
    //      case 11182: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxo x.o
    //      case 11183: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxo x.o
    //      case 11184: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo x.o
    //      case 11185: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxo x.o
    //      case 11186: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxo x.o
    //      case 11187: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo x.o
    //      case 11188: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xxo x.o
    //      case 11189: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xxo x.o
    //      case 11190: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo x.o
    //      case 11191: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo x.o
    //      case 11192: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xxo x.o
    //      case 11193: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo x.o
    //      case 11194: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xxo x.o
    //      case 11195: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xxo x.o
    //      case 11196: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo x.o
    //      case 11197: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // ox. xxo x.o
    //      case 11198: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // .x. xxo x.o
    //      case 11199: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo x.o
    //      case 11200: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // oo. xxo x.o
    //      case 11201: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .o. xxo x.o
    //      case 11202: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo x.o
    //      case 11203: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // o.. xxo x.o
    //      case 11204: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ... xxo x.o
    //      case 11205: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo x.o
    //      case 11206: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxo x.o
    //      case 11207: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo x.o
    //      case 11208: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo x.o
    //      case 11209: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxo x.o
    //      case 11210: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxo x.o
    //      case 11211: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo x.o
    //      case 11212: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxo x.o
    //      case 11213: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxo x.o
    //      case 11214: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oxo x.o
    //      case 11215: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo x.o
    //      case 11216: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oxo x.o
    //      case 11217: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oxo x.o
    //      case 11218: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo x.o
    //      case 11219: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oxo x.o
    //      case 11220: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oxo x.o
    //      case 11221: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo x.o
    //      case 11222: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oxo x.o
    //      case 11223: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // xx. oxo x.o
    //      case 11224: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // ox. oxo x.o
    //      case 11225: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .x. oxo x.o
    //      case 11226: Assert::IsTrue(v == PositionValue(-  122                         )); break;  // xo. oxo x.o
    //      case 11227: Assert::IsTrue(v == PositionValue(-  451                         )); break;  // oo. oxo x.o
    //      case 11228: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // .o. oxo x.o
    //      case 11229: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // x.. oxo x.o
    //      case 11230: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // o.. oxo x.o
    //      case 11231: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // ... oxo x.o
    //      case 11232: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo x.o
    //      case 11233: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo x.o
    //      case 11234: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo x.o
    //      case 11235: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo x.o
    //      case 11236: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xo x.o
    //      case 11237: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xo x.o
    //      case 11238: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo x.o
    //      case 11239: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xo x.o
    //      case 11240: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xo x.o
    //      case 11241: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .xo x.o
    //      case 11242: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .xo x.o
    //      case 11243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .xo x.o
    //      case 11244: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .xo x.o
    //      case 11245: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo x.o
    //      case 11246: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .xo x.o
    //      case 11247: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .xo x.o
    //      case 11248: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .xo x.o
    //      case 11249: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .xo x.o
    //      case 11250: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // xx. .xo x.o
    //      case 11251: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ox. .xo x.o
    //      case 11252: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // .x. .xo x.o
    //      case 11253: Assert::IsTrue(v == PositionValue(+    1                         )); break;  // xo. .xo x.o
    //      case 11254: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oo. .xo x.o
    //      case 11255: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // .o. .xo x.o
    //      case 11256: Assert::IsTrue(v == PositionValue(+  124                         )); break;  // x.. .xo x.o
    //      case 11257: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.. .xo x.o
    //      case 11258: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // ... .xo x.o
    //      case 11259: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo x.o
    //      case 11260: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xoo x.o
    //      case 11261: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // .xx xoo x.o
    //      case 11262: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xoo x.o
    //      case 11263: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo x.o
    //      case 11264: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // .ox xoo x.o
    //      case 11265: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xoo x.o
    //      case 11266: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xoo x.o
    //      case 11267: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // ..x xoo x.o
    //      case 11268: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xoo x.o
    //      case 11269: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo x.o
    //      case 11270: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo x.o
    //      case 11271: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xoo x.o
    //      case 11272: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo x.o
    //      case 11273: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo x.o
    //      case 11274: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xoo x.o
    //      case 11275: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo x.o
    //      case 11276: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo x.o
    //      case 11277: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xoo x.o
    //      case 11278: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xoo x.o
    //      case 11279: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .x. xoo x.o
    //      case 11280: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xoo x.o
    //      case 11281: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo x.o
    //      case 11282: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // .o. xoo x.o
    //      case 11283: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xoo x.o
    //      case 11284: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xoo x.o
    //      case 11285: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ... xoo x.o
    //      case 11286: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo x.o
    //      case 11287: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo x.o
    //      case 11288: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo x.o
    //      case 11289: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo x.o
    //      case 11290: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo x.o
    //      case 11291: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo x.o
    //      case 11292: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo x.o
    //      case 11293: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo x.o
    //      case 11294: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo x.o
    //      case 11295: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo x.o
    //      case 11296: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo x.o
    //      case 11297: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo x.o
    //      case 11298: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo x.o
    //      case 11299: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo x.o
    //      case 11300: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo x.o
    //      case 11301: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo x.o
    //      case 11302: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo x.o
    //      case 11303: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo x.o
    //      case 11304: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo x.o
    //      case 11305: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo x.o
    //      case 11306: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo x.o
    //      case 11307: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo x.o
    //      case 11308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo x.o
    //      case 11309: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo x.o
    //      case 11310: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo x.o
    //      case 11311: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo x.o
    //      case 11312: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo x.o
    //      case 11313: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo x.o
    //      case 11314: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .oo x.o
    //      case 11315: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .xx .oo x.o
    //      case 11316: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // xox .oo x.o
    //      case 11317: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo x.o
    //      case 11318: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // .ox .oo x.o
    //      case 11319: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // x.x .oo x.o
    //      case 11320: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .oo x.o
    //      case 11321: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // ..x .oo x.o
    //      case 11322: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo x.o
    //      case 11323: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo x.o
    //      case 11324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo x.o
    //      case 11325: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo x.o
    //      case 11326: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo x.o
    //      case 11327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo x.o
    //      case 11328: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo x.o
    //      case 11329: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo x.o
    //      case 11330: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo x.o
    //      case 11331: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // xx. .oo x.o
    //      case 11332: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .oo x.o
    //      case 11333: Assert::IsTrue(v == PositionValue(-  309                         )); break;  // .x. .oo x.o
    //      case 11334: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // xo. .oo x.o
    //      case 11335: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo x.o
    //      case 11336: Assert::IsTrue(v == PositionValue(-  564                         )); break;  // .o. .oo x.o
    //      case 11337: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // x.. .oo x.o
    //      case 11338: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .oo x.o
    //      case 11339: Assert::IsTrue(v == PositionValue(-  354                         )); break;  // ... .oo x.o
    //      case 11340: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o x.o
    //      case 11341: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oxx x.o x.o
    //      case 11342: Assert::IsTrue(v == PositionValue(+  262                         )); break;  // .xx x.o x.o
    //      case 11343: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.o x.o
    //      case 11344: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oox x.o x.o
    //      case 11345: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // .ox x.o x.o
    //      case 11346: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.o x.o
    //      case 11347: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x x.o x.o
    //      case 11348: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // ..x x.o x.o
    //      case 11349: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.o x.o
    //      case 11350: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo x.o x.o
    //      case 11351: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo x.o x.o
    //      case 11352: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.o x.o
    //      case 11353: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o x.o
    //      case 11354: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo x.o x.o
    //      case 11355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.o x.o
    //      case 11356: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o x.o x.o
    //      case 11357: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o x.o x.o
    //      case 11358: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.o x.o
    //      case 11359: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // ox. x.o x.o
    //      case 11360: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .x. x.o x.o
    //      case 11361: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.o x.o
    //      case 11362: Assert::IsTrue(v == PositionValue(-  262                         )); break;  // oo. x.o x.o
    //      case 11363: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .o. x.o x.o
    //      case 11364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.o x.o
    //      case 11365: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // o.. x.o x.o
    //      case 11366: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... x.o x.o
    //      case 11367: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o x.o
    //      case 11368: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // oxx o.o x.o
    //      case 11369: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // .xx o.o x.o
    //      case 11370: Assert::IsTrue(v == PositionValue(-  283                         )); break;  // xox o.o x.o
    //      case 11371: Assert::IsTrue(v == PositionValue(-  525                         )); break;  // oox o.o x.o
    //      case 11372: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // .ox o.o x.o
    //      case 11373: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // x.x o.o x.o
    //      case 11374: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // o.x o.o x.o
    //      case 11375: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // ..x o.o x.o
    //      case 11376: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo o.o x.o
    //      case 11377: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o x.o
    //      case 11378: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo o.o x.o
    //      case 11379: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo o.o x.o
    //      case 11380: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o x.o
    //      case 11381: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo o.o x.o
    //      case 11382: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o o.o x.o
    //      case 11383: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o x.o
    //      case 11384: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o o.o x.o
    //      case 11385: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xx. o.o x.o
    //      case 11386: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // ox. o.o x.o
    //      case 11387: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // .x. o.o x.o
    //      case 11388: Assert::IsTrue(v == PositionValue(-  335                         )); break;  // xo. o.o x.o
    //      case 11389: Assert::IsTrue(v == PositionValue(-  586                         )); break;  // oo. o.o x.o
    //      case 11390: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // .o. o.o x.o
    //      case 11391: Assert::IsTrue(v == PositionValue(-  134                         )); break;  // x.. o.o x.o
    //      case 11392: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // o.. o.o x.o
    //      case 11393: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // ... o.o x.o
    //      case 11394: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o x.o
    //      case 11395: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oxx ..o x.o
    //      case 11396: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // .xx ..o x.o
    //      case 11397: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // xox ..o x.o
    //      case 11398: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // oox ..o x.o
    //      case 11399: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // .ox ..o x.o
    //      case 11400: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // x.x ..o x.o
    //      case 11401: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.x ..o x.o
    //      case 11402: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // ..x ..o x.o
    //      case 11403: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ..o x.o
    //      case 11404: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ..o x.o
    //      case 11405: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ..o x.o
    //      case 11406: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ..o x.o
    //      case 11407: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o x.o
    //      case 11408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ..o x.o
    //      case 11409: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ..o x.o
    //      case 11410: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ..o x.o
    //      case 11411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ..o x.o
    //      case 11412: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // xx. ..o x.o
    //      case 11413: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ox. ..o x.o
    //      case 11414: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // .x. ..o x.o
    //      case 11415: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // xo. ..o x.o
    //      case 11416: Assert::IsTrue(v == PositionValue(-  385                         )); break;  // oo. ..o x.o
    //      case 11417: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // .o. ..o x.o
    //      case 11418: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // x.. ..o x.o
    //      case 11419: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // o.. ..o x.o
    //      case 11420: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // ... ..o x.o
    //      case 11421: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. x.o
    //      case 11422: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. x.o
    //      case 11423: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. x.o
    //      case 11424: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. x.o
    //      case 11425: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xx. x.o
    //      case 11426: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xx. x.o
    //      case 11427: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. x.o
    //      case 11428: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xx. x.o
    //      case 11429: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xx. x.o
    //      case 11430: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. x.o
    //      case 11431: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // oxo xx. x.o
    //      case 11432: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // .xo xx. x.o
    //      case 11433: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. x.o
    //      case 11434: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. x.o
    //      case 11435: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .oo xx. x.o
    //      case 11436: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. x.o
    //      case 11437: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // o.o xx. x.o
    //      case 11438: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // ..o xx. x.o
    //      case 11439: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. x.o
    //      case 11440: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // ox. xx. x.o
    //      case 11441: Assert::IsTrue(v == PositionValue(+  564                         )); break;  // .x. xx. x.o
    //      case 11442: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. x.o
    //      case 11443: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // oo. xx. x.o
    //      case 11444: Assert::IsTrue(v == PositionValue(+  309                         )); break;  // .o. xx. x.o
    //      case 11445: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. x.o
    //      case 11446: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // o.. xx. x.o
    //      case 11447: Assert::IsTrue(v == PositionValue(+  354                         )); break;  // ... xx. x.o
    //      case 11448: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. x.o
    //      case 11449: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ox. x.o
    //      case 11450: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. x.o
    //      case 11451: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. x.o
    //      case 11452: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ox. x.o
    //      case 11453: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ox. x.o
    //      case 11454: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. x.o
    //      case 11455: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ox. x.o
    //      case 11456: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ox. x.o
    //      case 11457: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // xxo ox. x.o
    //      case 11458: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // oxo ox. x.o
    //      case 11459: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .xo ox. x.o
    //      case 11460: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // xoo ox. x.o
    //      case 11461: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. x.o
    //      case 11462: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // .oo ox. x.o
    //      case 11463: Assert::IsTrue(v == PositionValue(+  159                         )); break;  // x.o ox. x.o
    //      case 11464: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // o.o ox. x.o
    //      case 11465: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // ..o ox. x.o
    //      case 11466: Assert::IsTrue(v == PositionValue(+  430                         )); break;  // xx. ox. x.o
    //      case 11467: Assert::IsTrue(v == PositionValue(+  101                         )); break;  // ox. ox. x.o
    //      case 11468: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // .x. ox. x.o
    //      case 11469: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // xo. ox. x.o
    //      case 11470: Assert::IsTrue(v == PositionValue(-  241                         )); break;  // oo. ox. x.o
    //      case 11471: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // .o. ox. x.o
    //      case 11472: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // x.. ox. x.o
    //      case 11473: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // o.. ox. x.o
    //      case 11474: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // ... ox. x.o
    //      case 11475: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. x.o
    //      case 11476: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. x.o
    //      case 11477: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. x.o
    //      case 11478: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. x.o
    //      case 11479: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .x. x.o
    //      case 11480: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .x. x.o
    //      case 11481: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. x.o
    //      case 11482: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .x. x.o
    //      case 11483: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .x. x.o
    //      case 11484: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // xxo .x. x.o
    //      case 11485: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // oxo .x. x.o
    //      case 11486: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // .xo .x. x.o
    //      case 11487: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xoo .x. x.o
    //      case 11488: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. x.o
    //      case 11489: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // .oo .x. x.o
    //      case 11490: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // x.o .x. x.o
    //      case 11491: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // o.o .x. x.o
    //      case 11492: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // ..o .x. x.o
    //      case 11493: Assert::IsTrue(v == PositionValue(+  475                         )); break;  // xx. .x. x.o
    //      case 11494: Assert::IsTrue(v == PositionValue(+  224                         )); break;  // ox. .x. x.o
    //      case 11495: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // .x. .x. x.o
    //      case 11496: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // xo. .x. x.o
    //      case 11497: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oo. .x. x.o
    //      case 11498: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .o. .x. x.o
    //      case 11499: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // x.. .x. x.o
    //      case 11500: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // o.. .x. x.o
    //      case 11501: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // ... .x. x.o
    //      case 11502: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. x.o
    //      case 11503: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xo. x.o
    //      case 11504: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .xx xo. x.o
    //      case 11505: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xo. x.o
    //      case 11506: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. x.o
    //      case 11507: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // .ox xo. x.o
    //      case 11508: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xo. x.o
    //      case 11509: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xo. x.o
    //      case 11510: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ..x xo. x.o
    //      case 11511: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xo. x.o
    //      case 11512: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. x.o
    //      case 11513: Assert::IsTrue(v == PositionValue(-    1                         )); break;  // .xo xo. x.o
    //      case 11514: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xo. x.o
    //      case 11515: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. x.o
    //      case 11516: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // .oo xo. x.o
    //      case 11517: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xo. x.o
    //      case 11518: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. x.o
    //      case 11519: Assert::IsTrue(v == PositionValue(-  124                         )); break;  // ..o xo. x.o
    //      case 11520: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xo. x.o
    //      case 11521: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xo. x.o
    //      case 11522: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // .x. xo. x.o
    //      case 11523: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xo. x.o
    //      case 11524: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. x.o
    //      case 11525: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // .o. xo. x.o
    //      case 11526: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xo. x.o
    //      case 11527: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xo. x.o
    //      case 11528: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // ... xo. x.o
    //      case 11529: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. x.o
    //      case 11530: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. x.o
    //      case 11531: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // .xx oo. x.o
    //      case 11532: Assert::IsTrue(v == PositionValue(-  382                         )); break;  // xox oo. x.o
    //      case 11533: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. x.o
    //      case 11534: Assert::IsTrue(v == PositionValue(-  434                         )); break;  // .ox oo. x.o
    //      case 11535: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // x.x oo. x.o
    //      case 11536: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. x.o
    //      case 11537: Assert::IsTrue(v == PositionValue(-  224                         )); break;  // ..x oo. x.o
    //      case 11538: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xxo oo. x.o
    //      case 11539: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. x.o
    //      case 11540: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // .xo oo. x.o
    //      case 11541: Assert::IsTrue(v == PositionValue(-  624                         )); break;  // xoo oo. x.o
    //      case 11542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. x.o
    //      case 11543: Assert::IsTrue(v == PositionValue(-  685                         )); break;  // .oo oo. x.o
    //      case 11544: Assert::IsTrue(v == PositionValue(-  336                         )); break;  // x.o oo. x.o
    //      case 11545: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. x.o
    //      case 11546: Assert::IsTrue(v == PositionValue(-  388                         )); break;  // ..o oo. x.o
    //      case 11547: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // xx. oo. x.o
    //      case 11548: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. x.o
    //      case 11549: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // .x. oo. x.o
    //      case 11550: Assert::IsTrue(v == PositionValue(-  425                         )); break;  // xo. oo. x.o
    //      case 11551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. x.o
    //      case 11552: Assert::IsTrue(v == PositionValue(-  477                         )); break;  // .o. oo. x.o
    //      case 11553: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // x.. oo. x.o
    //      case 11554: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. x.o
    //      case 11555: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // ... oo. x.o
    //      case 11556: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. x.o
    //      case 11557: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .o. x.o
    //      case 11558: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .xx .o. x.o
    //      case 11559: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // xox .o. x.o
    //      case 11560: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. x.o
    //      case 11561: Assert::IsTrue(v == PositionValue(-  224                         )); break;  // .ox .o. x.o
    //      case 11562: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // x.x .o. x.o
    //      case 11563: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .o. x.o
    //      case 11564: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // ..x .o. x.o
    //      case 11565: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // xxo .o. x.o
    //      case 11566: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. x.o
    //      case 11567: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // .xo .o. x.o
    //      case 11568: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // xoo .o. x.o
    //      case 11569: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. x.o
    //      case 11570: Assert::IsTrue(v == PositionValue(-  475                         )); break;  // .oo .o. x.o
    //      case 11571: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // x.o .o. x.o
    //      case 11572: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. x.o
    //      case 11573: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // ..o .o. x.o
    //      case 11574: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // xx. .o. x.o
    //      case 11575: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .o. x.o
    //      case 11576: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .x. .o. x.o
    //      case 11577: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // xo. .o. x.o
    //      case 11578: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. x.o
    //      case 11579: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // .o. .o. x.o
    //      case 11580: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // x.. .o. x.o
    //      case 11581: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .o. x.o
    //      case 11582: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // ... .o. x.o
    //      case 11583: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. x.o
    //      case 11584: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // oxx x.. x.o
    //      case 11585: Assert::IsTrue(v == PositionValue(+  385                         )); break;  // .xx x.. x.o
    //      case 11586: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.. x.o
    //      case 11587: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oox x.. x.o
    //      case 11588: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .ox x.. x.o
    //      case 11589: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.. x.o
    //      case 11590: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // o.x x.. x.o
    //      case 11591: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // ..x x.. x.o
    //      case 11592: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.. x.o
    //      case 11593: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // oxo x.. x.o
    //      case 11594: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // .xo x.. x.o
    //      case 11595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.. x.o
    //      case 11596: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. x.o
    //      case 11597: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .oo x.. x.o
    //      case 11598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.. x.o
    //      case 11599: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // o.o x.. x.o
    //      case 11600: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // ..o x.. x.o
    //      case 11601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.. x.o
    //      case 11602: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // ox. x.. x.o
    //      case 11603: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // .x. x.. x.o
    //      case 11604: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.. x.o
    //      case 11605: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // oo. x.. x.o
    //      case 11606: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // .o. x.. x.o
    //      case 11607: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.. x.o
    //      case 11608: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // o.. x.. x.o
    //      case 11609: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // ... x.. x.o
    //      case 11610: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. x.o
    //      case 11611: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oxx o.. x.o
    //      case 11612: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .xx o.. x.o
    //      case 11613: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // xox o.. x.o
    //      case 11614: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // oox o.. x.o
    //      case 11615: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // .ox o.. x.o
    //      case 11616: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.x o.. x.o
    //      case 11617: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.x o.. x.o
    //      case 11618: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ..x o.. x.o
    //      case 11619: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // xxo o.. x.o
    //      case 11620: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // oxo o.. x.o
    //      case 11621: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .xo o.. x.o
    //      case 11622: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // xoo o.. x.o
    //      case 11623: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. x.o
    //      case 11624: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // .oo o.. x.o
    //      case 11625: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // x.o o.. x.o
    //      case 11626: Assert::IsTrue(v == PositionValue(-  209                         )); break;  // o.o o.. x.o
    //      case 11627: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ..o o.. x.o
    //      case 11628: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xx. o.. x.o
    //      case 11629: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // ox. o.. x.o
    //      case 11630: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .x. o.. x.o
    //      case 11631: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // xo. o.. x.o
    //      case 11632: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // oo. o.. x.o
    //      case 11633: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .o. o.. x.o
    //      case 11634: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.. o.. x.o
    //      case 11635: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // o.. o.. x.o
    //      case 11636: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ... o.. x.o
    //      case 11637: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... x.o
    //      case 11638: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oxx ... x.o
    //      case 11639: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .xx ... x.o
    //      case 11640: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xox ... x.o
    //      case 11641: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // oox ... x.o
    //      case 11642: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .ox ... x.o
    //      case 11643: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.x ... x.o
    //      case 11644: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x ... x.o
    //      case 11645: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ..x ... x.o
    //      case 11646: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xxo ... x.o
    //      case 11647: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // oxo ... x.o
    //      case 11648: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .xo ... x.o
    //      case 11649: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xoo ... x.o
    //      case 11650: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... x.o
    //      case 11651: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .oo ... x.o
    //      case 11652: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o ... x.o
    //      case 11653: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.o ... x.o
    //      case 11654: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ..o ... x.o
    //      case 11655: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // xx. ... x.o
    //      case 11656: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ox. ... x.o
    //      case 11657: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .x. ... x.o
    //      case 11658: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xo. ... x.o
    //      case 11659: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // oo. ... x.o
    //      case 11660: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .o. ... x.o
    //      case 11661: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.. ... x.o
    //      case 11662: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.. ... x.o
    //      case 11663: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... ... x.o
    //      case 11664: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx o.o
    //      case 11665: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx o.o
    //      case 11666: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx o.o
    //      case 11667: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx o.o
    //      case 11668: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx o.o
    //      case 11669: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx o.o
    //      case 11670: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx o.o
    //      case 11671: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx o.o
    //      case 11672: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx o.o
    //      case 11673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx o.o
    //      case 11674: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx o.o
    //      case 11675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx o.o
    //      case 11676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx o.o
    //      case 11677: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx o.o
    //      case 11678: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx o.o
    //      case 11679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx o.o
    //      case 11680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx o.o
    //      case 11681: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx o.o
    //      case 11682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx o.o
    //      case 11683: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx o.o
    //      case 11684: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx o.o
    //      case 11685: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx o.o
    //      case 11686: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx o.o
    //      case 11687: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx o.o
    //      case 11688: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx o.o
    //      case 11689: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx o.o
    //      case 11690: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx o.o
    //      case 11691: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx o.o
    //      case 11692: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxx o.o
    //      case 11693: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // .xx oxx o.o
    //      case 11694: Assert::IsTrue(v == PositionValue(+  159                         )); break;  // xox oxx o.o
    //      case 11695: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxx o.o
    //      case 11696: Assert::IsTrue(v == PositionValue(+   29                         )); break;  // .ox oxx o.o
    //      case 11697: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // x.x oxx o.o
    //      case 11698: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxx o.o
    //      case 11699: Assert::IsTrue(v == PositionValue(+  152                         )); break;  // ..x oxx o.o
    //      case 11700: Assert::IsTrue(v == PositionValue(+  328                         )); break;  // xxo oxx o.o
    //      case 11701: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxx o.o
    //      case 11702: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // .xo oxx o.o
    //      case 11703: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xoo oxx o.o
    //      case 11704: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx o.o
    //      case 11705: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // .oo oxx o.o
    //      case 11706: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.o oxx o.o
    //      case 11707: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxx o.o
    //      case 11708: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // ..o oxx o.o
    //      case 11709: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // xx. oxx o.o
    //      case 11710: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxx o.o
    //      case 11711: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .x. oxx o.o
    //      case 11712: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xo. oxx o.o
    //      case 11713: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxx o.o
    //      case 11714: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .o. oxx o.o
    //      case 11715: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // x.. oxx o.o
    //      case 11716: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxx o.o
    //      case 11717: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // ... oxx o.o
    //      case 11718: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx o.o
    //      case 11719: Assert::IsTrue(v == PositionValue(+  538                         )); break;  // oxx .xx o.o
    //      case 11720: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // .xx .xx o.o
    //      case 11721: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // xox .xx o.o
    //      case 11722: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // oox .xx o.o
    //      case 11723: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // .ox .xx o.o
    //      case 11724: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // x.x .xx o.o
    //      case 11725: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // o.x .xx o.o
    //      case 11726: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // ..x .xx o.o
    //      case 11727: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // xxo .xx o.o
    //      case 11728: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // oxo .xx o.o
    //      case 11729: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // .xo .xx o.o
    //      case 11730: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // xoo .xx o.o
    //      case 11731: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx o.o
    //      case 11732: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .oo .xx o.o
    //      case 11733: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // x.o .xx o.o
    //      case 11734: Assert::IsTrue(v == PositionValue(+    8                         )); break;  // o.o .xx o.o
    //      case 11735: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // ..o .xx o.o
    //      case 11736: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // xx. .xx o.o
    //      case 11737: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // ox. .xx o.o
    //      case 11738: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // .x. .xx o.o
    //      case 11739: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xo. .xx o.o
    //      case 11740: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // oo. .xx o.o
    //      case 11741: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // .o. .xx o.o
    //      case 11742: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // x.. .xx o.o
    //      case 11743: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // o.. .xx o.o
    //      case 11744: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // ... .xx o.o
    //      case 11745: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox o.o
    //      case 11746: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xox o.o
    //      case 11747: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // .xx xox o.o
    //      case 11748: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // xox xox o.o
    //      case 11749: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox o.o
    //      case 11750: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .ox xox o.o
    //      case 11751: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // x.x xox o.o
    //      case 11752: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xox o.o
    //      case 11753: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ..x xox o.o
    //      case 11754: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xox o.o
    //      case 11755: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox o.o
    //      case 11756: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xox o.o
    //      case 11757: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xox o.o
    //      case 11758: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox o.o
    //      case 11759: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox o.o
    //      case 11760: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xox o.o
    //      case 11761: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox o.o
    //      case 11762: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xox o.o
    //      case 11763: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // xx. xox o.o
    //      case 11764: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xox o.o
    //      case 11765: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // .x. xox o.o
    //      case 11766: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // xo. xox o.o
    //      case 11767: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox o.o
    //      case 11768: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // .o. xox o.o
    //      case 11769: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // x.. xox o.o
    //      case 11770: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xox o.o
    //      case 11771: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // ... xox o.o
    //      case 11772: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox o.o
    //      case 11773: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox o.o
    //      case 11774: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .xx oox o.o
    //      case 11775: Assert::IsTrue(v == PositionValue(-  492                         )); break;  // xox oox o.o
    //      case 11776: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox o.o
    //      case 11777: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // .ox oox o.o
    //      case 11778: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // x.x oox o.o
    //      case 11779: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox o.o
    //      case 11780: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // ..x oox o.o
    //      case 11781: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oox o.o
    //      case 11782: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox o.o
    //      case 11783: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oox o.o
    //      case 11784: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox o.o
    //      case 11785: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox o.o
    //      case 11786: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox o.o
    //      case 11787: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oox o.o
    //      case 11788: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox o.o
    //      case 11789: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oox o.o
    //      case 11790: Assert::IsTrue(v == PositionValue(-  202                         )); break;  // xx. oox o.o
    //      case 11791: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox o.o
    //      case 11792: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // .x. oox o.o
    //      case 11793: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // xo. oox o.o
    //      case 11794: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox o.o
    //      case 11795: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // .o. oox o.o
    //      case 11796: Assert::IsTrue(v == PositionValue(-  412                         )); break;  // x.. oox o.o
    //      case 11797: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox o.o
    //      case 11798: Assert::IsTrue(v == PositionValue(-  473                         )); break;  // ... oox o.o
    //      case 11799: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox o.o
    //      case 11800: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .ox o.o
    //      case 11801: Assert::IsTrue(v == PositionValue(+   77                         )); break;  // .xx .ox o.o
    //      case 11802: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xox .ox o.o
    //      case 11803: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox o.o
    //      case 11804: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // .ox .ox o.o
    //      case 11805: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // x.x .ox o.o
    //      case 11806: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .ox o.o
    //      case 11807: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ..x .ox o.o
    //      case 11808: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .ox o.o
    //      case 11809: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox o.o
    //      case 11810: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .ox o.o
    //      case 11811: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox o.o
    //      case 11812: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox o.o
    //      case 11813: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox o.o
    //      case 11814: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .ox o.o
    //      case 11815: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox o.o
    //      case 11816: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .ox o.o
    //      case 11817: Assert::IsTrue(v == PositionValue(-    1                         )); break;  // xx. .ox o.o
    //      case 11818: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .ox o.o
    //      case 11819: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // .x. .ox o.o
    //      case 11820: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // xo. .ox o.o
    //      case 11821: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox o.o
    //      case 11822: Assert::IsTrue(v == PositionValue(-  395                         )); break;  // .o. .ox o.o
    //      case 11823: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // x.. .ox o.o
    //      case 11824: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .ox o.o
    //      case 11825: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // ... .ox o.o
    //      case 11826: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x o.o
    //      case 11827: Assert::IsTrue(v == PositionValue(+  361                         )); break;  // oxx x.x o.o
    //      case 11828: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // .xx x.x o.o
    //      case 11829: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xox x.x o.o
    //      case 11830: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // oox x.x o.o
    //      case 11831: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .ox x.x o.o
    //      case 11832: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // x.x x.x o.o
    //      case 11833: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // o.x x.x o.o
    //      case 11834: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ..x x.x o.o
    //      case 11835: Assert::IsTrue(v == PositionValue(+  361                         )); break;  // xxo x.x o.o
    //      case 11836: Assert::IsTrue(v == PositionValue(+  119                         )); break;  // oxo x.x o.o
    //      case 11837: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // .xo x.x o.o
    //      case 11838: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // xoo x.x o.o
    //      case 11839: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x o.o
    //      case 11840: Assert::IsTrue(v == PositionValue(-  171                         )); break;  // .oo x.x o.o
    //      case 11841: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // x.o x.x o.o
    //      case 11842: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // o.o x.x o.o
    //      case 11843: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // ..o x.x o.o
    //      case 11844: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // xx. x.x o.o
    //      case 11845: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // ox. x.x o.o
    //      case 11846: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // .x. x.x o.o
    //      case 11847: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // xo. x.x o.o
    //      case 11848: Assert::IsTrue(v == PositionValue(-  171                         )); break;  // oo. x.x o.o
    //      case 11849: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // .o. x.x o.o
    //      case 11850: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // x.. x.x o.o
    //      case 11851: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // o.. x.x o.o
    //      case 11852: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // ... x.x o.o
    //      case 11853: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x o.o
    //      case 11854: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.x o.o
    //      case 11855: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // .xx o.x o.o
    //      case 11856: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xox o.x o.o
    //      case 11857: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.x o.o
    //      case 11858: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .ox o.x o.o
    //      case 11859: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.x o.x o.o
    //      case 11860: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.x o.o
    //      case 11861: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // ..x o.x o.o
    //      case 11862: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // xxo o.x o.o
    //      case 11863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.x o.o
    //      case 11864: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // .xo o.x o.o
    //      case 11865: Assert::IsTrue(v == PositionValue(-  365                         )); break;  // xoo o.x o.o
    //      case 11866: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x o.o
    //      case 11867: Assert::IsTrue(v == PositionValue(-  426                         )); break;  // .oo o.x o.o
    //      case 11868: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // x.o o.x o.o
    //      case 11869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.x o.o
    //      case 11870: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // ..o o.x o.o
    //      case 11871: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // xx. o.x o.o
    //      case 11872: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.x o.o
    //      case 11873: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // .x. o.x o.o
    //      case 11874: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // xo. o.x o.o
    //      case 11875: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.x o.o
    //      case 11876: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // .o. o.x o.o
    //      case 11877: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // x.. o.x o.o
    //      case 11878: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.x o.o
    //      case 11879: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ... o.x o.o
    //      case 11880: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x o.o
    //      case 11881: Assert::IsTrue(v == PositionValue(+  238                         )); break;  // oxx ..x o.o
    //      case 11882: Assert::IsTrue(v == PositionValue(+  290                         )); break;  // .xx ..x o.o
    //      case 11883: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // xox ..x o.o
    //      case 11884: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // oox ..x o.o
    //      case 11885: Assert::IsTrue(v == PositionValue(+   35                         )); break;  // .ox ..x o.o
    //      case 11886: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.x ..x o.o
    //      case 11887: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // o.x ..x o.o
    //      case 11888: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ..x ..x o.o
    //      case 11889: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // xxo ..x o.o
    //      case 11890: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // oxo ..x o.o
    //      case 11891: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // .xo ..x o.o
    //      case 11892: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // xoo ..x o.o
    //      case 11893: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x o.o
    //      case 11894: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // .oo ..x o.o
    //      case 11895: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // x.o ..x o.o
    //      case 11896: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // o.o ..x o.o
    //      case 11897: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // ..o ..x o.o
    //      case 11898: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // xx. ..x o.o
    //      case 11899: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // ox. ..x o.o
    //      case 11900: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // .x. ..x o.o
    //      case 11901: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // xo. ..x o.o
    //      case 11902: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // oo. ..x o.o
    //      case 11903: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // .o. ..x o.o
    //      case 11904: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // x.. ..x o.o
    //      case 11905: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // o.. ..x o.o
    //      case 11906: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // ... ..x o.o
    //      case 11907: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo o.o
    //      case 11908: Assert::IsTrue(v == PositionValue(+  328                         )); break;  // oxx xxo o.o
    //      case 11909: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // .xx xxo o.o
    //      case 11910: Assert::IsTrue(v == PositionValue(+  159                         )); break;  // xox xxo o.o
    //      case 11911: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // oox xxo o.o
    //      case 11912: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .ox xxo o.o
    //      case 11913: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // x.x xxo o.o
    //      case 11914: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // o.x xxo o.o
    //      case 11915: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // ..x xxo o.o
    //      case 11916: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xxo o.o
    //      case 11917: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xxo o.o
    //      case 11918: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xxo o.o
    //      case 11919: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xxo o.o
    //      case 11920: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo o.o
    //      case 11921: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xxo o.o
    //      case 11922: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xxo o.o
    //      case 11923: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xxo o.o
    //      case 11924: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xxo o.o
    //      case 11925: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // xx. xxo o.o
    //      case 11926: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // ox. xxo o.o
    //      case 11927: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .x. xxo o.o
    //      case 11928: Assert::IsTrue(v == PositionValue(+   29                         )); break;  // xo. xxo o.o
    //      case 11929: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // oo. xxo o.o
    //      case 11930: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .o. xxo o.o
    //      case 11931: Assert::IsTrue(v == PositionValue(+  152                         )); break;  // x.. xxo o.o
    //      case 11932: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // o.. xxo o.o
    //      case 11933: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // ... xxo o.o
    //      case 11934: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo o.o
    //      case 11935: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxo o.o
    //      case 11936: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // .xx oxo o.o
    //      case 11937: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // xox oxo o.o
    //      case 11938: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxo o.o
    //      case 11939: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // .ox oxo o.o
    //      case 11940: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // x.x oxo o.o
    //      case 11941: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxo o.o
    //      case 11942: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // ..x oxo o.o
    //      case 11943: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oxo o.o
    //      case 11944: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo o.o
    //      case 11945: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oxo o.o
    //      case 11946: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oxo o.o
    //      case 11947: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo o.o
    //      case 11948: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oxo o.o
    //      case 11949: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oxo o.o
    //      case 11950: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo o.o
    //      case 11951: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oxo o.o
    //      case 11952: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // xx. oxo o.o
    //      case 11953: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxo o.o
    //      case 11954: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .x. oxo o.o
    //      case 11955: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // xo. oxo o.o
    //      case 11956: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxo o.o
    //      case 11957: Assert::IsTrue(v == PositionValue(-  503                         )); break;  // .o. oxo o.o
    //      case 11958: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // x.. oxo o.o
    //      case 11959: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxo o.o
    //      case 11960: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // ... oxo o.o
    //      case 11961: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo o.o
    //      case 11962: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // oxx .xo o.o
    //      case 11963: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // .xx .xo o.o
    //      case 11964: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // xox .xo o.o
    //      case 11965: Assert::IsTrue(v == PositionValue(-  284                         )); break;  // oox .xo o.o
    //      case 11966: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .ox .xo o.o
    //      case 11967: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.x .xo o.o
    //      case 11968: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // o.x .xo o.o
    //      case 11969: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ..x .xo o.o
    //      case 11970: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .xo o.o
    //      case 11971: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .xo o.o
    //      case 11972: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .xo o.o
    //      case 11973: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .xo o.o
    //      case 11974: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo o.o
    //      case 11975: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .xo o.o
    //      case 11976: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .xo o.o
    //      case 11977: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .xo o.o
    //      case 11978: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .xo o.o
    //      case 11979: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xx. .xo o.o
    //      case 11980: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ox. .xo o.o
    //      case 11981: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // .x. .xo o.o
    //      case 11982: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // xo. .xo o.o
    //      case 11983: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // oo. .xo o.o
    //      case 11984: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .o. .xo o.o
    //      case 11985: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // x.. .xo o.o
    //      case 11986: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.. .xo o.o
    //      case 11987: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ... .xo o.o
    //      case 11988: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo o.o
    //      case 11989: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xoo o.o
    //      case 11990: Assert::IsTrue(v == PositionValue(-  202                         )); break;  // .xx xoo o.o
    //      case 11991: Assert::IsTrue(v == PositionValue(-  492                         )); break;  // xox xoo o.o
    //      case 11992: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo o.o
    //      case 11993: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // .ox xoo o.o
    //      case 11994: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // x.x xoo o.o
    //      case 11995: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xoo o.o
    //      case 11996: Assert::IsTrue(v == PositionValue(-  412                         )); break;  // ..x xoo o.o
    //      case 11997: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xoo o.o
    //      case 11998: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo o.o
    //      case 11999: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo o.o
    //      case 12000: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo o.o
    //      case 12001: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo o.o
    //      case 12002: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo o.o
    //      case 12003: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xoo o.o
    //      case 12004: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo o.o
    //      case 12005: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo o.o
    //      case 12006: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // xx. xoo o.o
    //      case 12007: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xoo o.o
    //      case 12008: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // .x. xoo o.o
    //      case 12009: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // xo. xoo o.o
    //      case 12010: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo o.o
    //      case 12011: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // .o. xoo o.o
    //      case 12012: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // x.. xoo o.o
    //      case 12013: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xoo o.o
    //      case 12014: Assert::IsTrue(v == PositionValue(-  473                         )); break;  // ... xoo o.o
    //      case 12015: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo o.o
    //      case 12016: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo o.o
    //      case 12017: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo o.o
    //      case 12018: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo o.o
    //      case 12019: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo o.o
    //      case 12020: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo o.o
    //      case 12021: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo o.o
    //      case 12022: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo o.o
    //      case 12023: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo o.o
    //      case 12024: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo o.o
    //      case 12025: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo o.o
    //      case 12026: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo o.o
    //      case 12027: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo o.o
    //      case 12028: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo o.o
    //      case 12029: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo o.o
    //      case 12030: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo o.o
    //      case 12031: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo o.o
    //      case 12032: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo o.o
    //      case 12033: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo o.o
    //      case 12034: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo o.o
    //      case 12035: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo o.o
    //      case 12036: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo o.o
    //      case 12037: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo o.o
    //      case 12038: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo o.o
    //      case 12039: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo o.o
    //      case 12040: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo o.o
    //      case 12041: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo o.o
    //      case 12042: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo o.o
    //      case 12043: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .oo o.o
    //      case 12044: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // .xx .oo o.o
    //      case 12045: Assert::IsTrue(v == PositionValue(-  624                         )); break;  // xox .oo o.o
    //      case 12046: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo o.o
    //      case 12047: Assert::IsTrue(v == PositionValue(-  676                         )); break;  // .ox .oo o.o
    //      case 12048: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // x.x .oo o.o
    //      case 12049: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .oo o.o
    //      case 12050: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // ..x .oo o.o
    //      case 12051: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo o.o
    //      case 12052: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo o.o
    //      case 12053: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo o.o
    //      case 12054: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo o.o
    //      case 12055: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo o.o
    //      case 12056: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo o.o
    //      case 12057: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo o.o
    //      case 12058: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo o.o
    //      case 12059: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo o.o
    //      case 12060: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // xx. .oo o.o
    //      case 12061: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .oo o.o
    //      case 12062: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // .x. .oo o.o
    //      case 12063: Assert::IsTrue(v == PositionValue(-  685                         )); break;  // xo. .oo o.o
    //      case 12064: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo o.o
    //      case 12065: Assert::IsTrue(v == PositionValue(-  737                         )); break;  // .o. .oo o.o
    //      case 12066: Assert::IsTrue(v == PositionValue(-  475                         )); break;  // x.. .oo o.o
    //      case 12067: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .oo o.o
    //      case 12068: Assert::IsTrue(v == PositionValue(-  527                         )); break;  // ... .oo o.o
    //      case 12069: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o o.o
    //      case 12070: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // oxx x.o o.o
    //      case 12071: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // .xx x.o o.o
    //      case 12072: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xox x.o o.o
    //      case 12073: Assert::IsTrue(v == PositionValue(-  365                         )); break;  // oox x.o o.o
    //      case 12074: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // .ox x.o o.o
    //      case 12075: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.x x.o o.o
    //      case 12076: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // o.x x.o o.o
    //      case 12077: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // ..x x.o o.o
    //      case 12078: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo x.o o.o
    //      case 12079: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo x.o o.o
    //      case 12080: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo x.o o.o
    //      case 12081: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo x.o o.o
    //      case 12082: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o o.o
    //      case 12083: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo x.o o.o
    //      case 12084: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o x.o o.o
    //      case 12085: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o x.o o.o
    //      case 12086: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o x.o o.o
    //      case 12087: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // xx. x.o o.o
    //      case 12088: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // ox. x.o o.o
    //      case 12089: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // .x. x.o o.o
    //      case 12090: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // xo. x.o o.o
    //      case 12091: Assert::IsTrue(v == PositionValue(-  426                         )); break;  // oo. x.o o.o
    //      case 12092: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // .o. x.o o.o
    //      case 12093: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // x.. x.o o.o
    //      case 12094: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // o.. x.o o.o
    //      case 12095: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ... x.o o.o
    //      case 12096: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o o.o
    //      case 12097: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.o o.o
    //      case 12098: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // .xx o.o o.o
    //      case 12099: Assert::IsTrue(v == PositionValue(-  447                         )); break;  // xox o.o o.o
    //      case 12100: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.o o.o
    //      case 12101: Assert::IsTrue(v == PositionValue(-  499                         )); break;  // .ox o.o o.o
    //      case 12102: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // x.x o.o o.o
    //      case 12103: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.o o.o
    //      case 12104: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // ..x o.o o.o
    //      case 12105: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo o.o o.o
    //      case 12106: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o o.o
    //      case 12107: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo o.o o.o
    //      case 12108: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo o.o o.o
    //      case 12109: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o o.o
    //      case 12110: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo o.o o.o
    //      case 12111: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o o.o o.o
    //      case 12112: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o o.o
    //      case 12113: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o o.o o.o
    //      case 12114: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // xx. o.o o.o
    //      case 12115: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.o o.o
    //      case 12116: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // .x. o.o o.o
    //      case 12117: Assert::IsTrue(v == PositionValue(-  499                         )); break;  // xo. o.o o.o
    //      case 12118: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.o o.o
    //      case 12119: Assert::IsTrue(v == PositionValue(-  551                         )); break;  // .o. o.o o.o
    //      case 12120: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // x.. o.o o.o
    //      case 12121: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.o o.o
    //      case 12122: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // ... o.o o.o
    //      case 12123: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o o.o
    //      case 12124: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // oxx ..o o.o
    //      case 12125: Assert::IsTrue(v == PositionValue(-   34                         )); break;  // .xx ..o o.o
    //      case 12126: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // xox ..o o.o
    //      case 12127: Assert::IsTrue(v == PositionValue(-  410                         )); break;  // oox ..o o.o
    //      case 12128: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // .ox ..o o.o
    //      case 12129: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // x.x ..o o.o
    //      case 12130: Assert::IsTrue(v == PositionValue(-  209                         )); break;  // o.x ..o o.o
    //      case 12131: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // ..x ..o o.o
    //      case 12132: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ..o o.o
    //      case 12133: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ..o o.o
    //      case 12134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ..o o.o
    //      case 12135: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ..o o.o
    //      case 12136: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o o.o
    //      case 12137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ..o o.o
    //      case 12138: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ..o o.o
    //      case 12139: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ..o o.o
    //      case 12140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ..o o.o
    //      case 12141: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // xx. ..o o.o
    //      case 12142: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // ox. ..o o.o
    //      case 12143: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .x. ..o o.o
    //      case 12144: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // xo. ..o o.o
    //      case 12145: Assert::IsTrue(v == PositionValue(-  471                         )); break;  // oo. ..o o.o
    //      case 12146: Assert::IsTrue(v == PositionValue(-  341                         )); break;  // .o. ..o o.o
    //      case 12147: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // x.. ..o o.o
    //      case 12148: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // o.. ..o o.o
    //      case 12149: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // ... ..o o.o
    //      case 12150: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. o.o
    //      case 12151: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // oxx xx. o.o
    //      case 12152: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // .xx xx. o.o
    //      case 12153: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // xox xx. o.o
    //      case 12154: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // oox xx. o.o
    //      case 12155: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .ox xx. o.o
    //      case 12156: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // x.x xx. o.o
    //      case 12157: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // o.x xx. o.o
    //      case 12158: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // ..x xx. o.o
    //      case 12159: Assert::IsTrue(v == PositionValue(+  538                         )); break;  // xxo xx. o.o
    //      case 12160: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // oxo xx. o.o
    //      case 12161: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // .xo xx. o.o
    //      case 12162: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // xoo xx. o.o
    //      case 12163: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. o.o
    //      case 12164: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .oo xx. o.o
    //      case 12165: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // x.o xx. o.o
    //      case 12166: Assert::IsTrue(v == PositionValue(+    8                         )); break;  // o.o xx. o.o
    //      case 12167: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // ..o xx. o.o
    //      case 12168: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // xx. xx. o.o
    //      case 12169: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // ox. xx. o.o
    //      case 12170: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // .x. xx. o.o
    //      case 12171: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // xo. xx. o.o
    //      case 12172: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // oo. xx. o.o
    //      case 12173: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // .o. xx. o.o
    //      case 12174: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // x.. xx. o.o
    //      case 12175: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // o.. xx. o.o
    //      case 12176: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // ... xx. o.o
    //      case 12177: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. o.o
    //      case 12178: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ox. o.o
    //      case 12179: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .xx ox. o.o
    //      case 12180: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // xox ox. o.o
    //      case 12181: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ox. o.o
    //      case 12182: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // .ox ox. o.o
    //      case 12183: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.x ox. o.o
    //      case 12184: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ox. o.o
    //      case 12185: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // ..x ox. o.o
    //      case 12186: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // xxo ox. o.o
    //      case 12187: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ox. o.o
    //      case 12188: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .xo ox. o.o
    //      case 12189: Assert::IsTrue(v == PositionValue(-  284                         )); break;  // xoo ox. o.o
    //      case 12190: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. o.o
    //      case 12191: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // .oo ox. o.o
    //      case 12192: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // x.o ox. o.o
    //      case 12193: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ox. o.o
    //      case 12194: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ..o ox. o.o
    //      case 12195: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // xx. ox. o.o
    //      case 12196: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ox. o.o
    //      case 12197: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // .x. ox. o.o
    //      case 12198: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xo. ox. o.o
    //      case 12199: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ox. o.o
    //      case 12200: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .o. ox. o.o
    //      case 12201: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // x.. ox. o.o
    //      case 12202: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ox. o.o
    //      case 12203: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ... ox. o.o
    //      case 12204: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. o.o
    //      case 12205: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // oxx .x. o.o
    //      case 12206: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // .xx .x. o.o
    //      case 12207: Assert::IsTrue(v == PositionValue(+  159                         )); break;  // xox .x. o.o
    //      case 12208: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // oox .x. o.o
    //      case 12209: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // .ox .x. o.o
    //      case 12210: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // x.x .x. o.o
    //      case 12211: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // o.x .x. o.o
    //      case 12212: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // ..x .x. o.o
    //      case 12213: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xxo .x. o.o
    //      case 12214: Assert::IsTrue(v == PositionValue(+    8                         )); break;  // oxo .x. o.o
    //      case 12215: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // .xo .x. o.o
    //      case 12216: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // xoo .x. o.o
    //      case 12217: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. o.o
    //      case 12218: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .oo .x. o.o
    //      case 12219: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.o .x. o.o
    //      case 12220: Assert::IsTrue(v == PositionValue(-  124                         )); break;  // o.o .x. o.o
    //      case 12221: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ..o .x. o.o
    //      case 12222: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // xx. .x. o.o
    //      case 12223: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // ox. .x. o.o
    //      case 12224: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // .x. .x. o.o
    //      case 12225: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // xo. .x. o.o
    //      case 12226: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // oo. .x. o.o
    //      case 12227: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // .o. .x. o.o
    //      case 12228: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // x.. .x. o.o
    //      case 12229: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.. .x. o.o
    //      case 12230: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ... .x. o.o
    //      case 12231: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. o.o
    //      case 12232: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xo. o.o
    //      case 12233: Assert::IsTrue(v == PositionValue(-    1                         )); break;  // .xx xo. o.o
    //      case 12234: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xox xo. o.o
    //      case 12235: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. o.o
    //      case 12236: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // .ox xo. o.o
    //      case 12237: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // x.x xo. o.o
    //      case 12238: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xo. o.o
    //      case 12239: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // ..x xo. o.o
    //      case 12240: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xo. o.o
    //      case 12241: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. o.o
    //      case 12242: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xo. o.o
    //      case 12243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xo. o.o
    //      case 12244: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. o.o
    //      case 12245: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. o.o
    //      case 12246: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xo. o.o
    //      case 12247: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. o.o
    //      case 12248: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xo. o.o
    //      case 12249: Assert::IsTrue(v == PositionValue(+   77                         )); break;  // xx. xo. o.o
    //      case 12250: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xo. o.o
    //      case 12251: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // .x. xo. o.o
    //      case 12252: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // xo. xo. o.o
    //      case 12253: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. o.o
    //      case 12254: Assert::IsTrue(v == PositionValue(-  395                         )); break;  // .o. xo. o.o
    //      case 12255: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // x.. xo. o.o
    //      case 12256: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xo. o.o
    //      case 12257: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // ... xo. o.o
    //      case 12258: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. o.o
    //      case 12259: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. o.o
    //      case 12260: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // .xx oo. o.o
    //      case 12261: Assert::IsTrue(v == PositionValue(-  624                         )); break;  // xox oo. o.o
    //      case 12262: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. o.o
    //      case 12263: Assert::IsTrue(v == PositionValue(-  685                         )); break;  // .ox oo. o.o
    //      case 12264: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // x.x oo. o.o
    //      case 12265: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. o.o
    //      case 12266: Assert::IsTrue(v == PositionValue(-  475                         )); break;  // ..x oo. o.o
    //      case 12267: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oo. o.o
    //      case 12268: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. o.o
    //      case 12269: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oo. o.o
    //      case 12270: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. o.o
    //      case 12271: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. o.o
    //      case 12272: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. o.o
    //      case 12273: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oo. o.o
    //      case 12274: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. o.o
    //      case 12275: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oo. o.o
    //      case 12276: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // xx. oo. o.o
    //      case 12277: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. o.o
    //      case 12278: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // .x. oo. o.o
    //      case 12279: Assert::IsTrue(v == PositionValue(-  676                         )); break;  // xo. oo. o.o
    //      case 12280: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. o.o
    //      case 12281: Assert::IsTrue(v == PositionValue(-  737                         )); break;  // .o. oo. o.o
    //      case 12282: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // x.. oo. o.o
    //      case 12283: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. o.o
    //      case 12284: Assert::IsTrue(v == PositionValue(-  527                         )); break;  // ... oo. o.o
    //      case 12285: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. o.o
    //      case 12286: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .o. o.o
    //      case 12287: Assert::IsTrue(v == PositionValue(-  124                         )); break;  // .xx .o. o.o
    //      case 12288: Assert::IsTrue(v == PositionValue(-  336                         )); break;  // xox .o. o.o
    //      case 12289: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. o.o
    //      case 12290: Assert::IsTrue(v == PositionValue(-  388                         )); break;  // .ox .o. o.o
    //      case 12291: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // x.x .o. o.o
    //      case 12292: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .o. o.o
    //      case 12293: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // ..x .o. o.o
    //      case 12294: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .o. o.o
    //      case 12295: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. o.o
    //      case 12296: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .o. o.o
    //      case 12297: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. o.o
    //      case 12298: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. o.o
    //      case 12299: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. o.o
    //      case 12300: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .o. o.o
    //      case 12301: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. o.o
    //      case 12302: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .o. o.o
    //      case 12303: Assert::IsTrue(v == PositionValue(-  124                         )); break;  // xx. .o. o.o
    //      case 12304: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .o. o.o
    //      case 12305: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // .x. .o. o.o
    //      case 12306: Assert::IsTrue(v == PositionValue(-  388                         )); break;  // xo. .o. o.o
    //      case 12307: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. o.o
    //      case 12308: Assert::IsTrue(v == PositionValue(-  440                         )); break;  // .o. .o. o.o
    //      case 12309: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // x.. .o. o.o
    //      case 12310: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .o. o.o
    //      case 12311: Assert::IsTrue(v == PositionValue(-  308                         )); break;  // ... .o. o.o
    //      case 12312: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. o.o
    //      case 12313: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // oxx x.. o.o
    //      case 12314: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // .xx x.. o.o
    //      case 12315: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // xox x.. o.o
    //      case 12316: Assert::IsTrue(v == PositionValue(-  164                         )); break;  // oox x.. o.o
    //      case 12317: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .ox x.. o.o
    //      case 12318: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.x x.. o.o
    //      case 12319: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.x x.. o.o
    //      case 12320: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ..x x.. o.o
    //      case 12321: Assert::IsTrue(v == PositionValue(+  238                         )); break;  // xxo x.. o.o
    //      case 12322: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // oxo x.. o.o
    //      case 12323: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // .xo x.. o.o
    //      case 12324: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // xoo x.. o.o
    //      case 12325: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. o.o
    //      case 12326: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // .oo x.. o.o
    //      case 12327: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // x.o x.. o.o
    //      case 12328: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // o.o x.. o.o
    //      case 12329: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // ..o x.. o.o
    //      case 12330: Assert::IsTrue(v == PositionValue(+  290                         )); break;  // xx. x.. o.o
    //      case 12331: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // ox. x.. o.o
    //      case 12332: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // .x. x.. o.o
    //      case 12333: Assert::IsTrue(v == PositionValue(+   35                         )); break;  // xo. x.. o.o
    //      case 12334: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // oo. x.. o.o
    //      case 12335: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // .o. x.. o.o
    //      case 12336: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // x.. x.. o.o
    //      case 12337: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // o.. x.. o.o
    //      case 12338: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // ... x.. o.o
    //      case 12339: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. o.o
    //      case 12340: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.. o.o
    //      case 12341: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .xx o.. o.o
    //      case 12342: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // xox o.. o.o
    //      case 12343: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.. o.o
    //      case 12344: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // .ox o.. o.o
    //      case 12345: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // x.x o.. o.o
    //      case 12346: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.. o.o
    //      case 12347: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // ..x o.. o.o
    //      case 12348: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // xxo o.. o.o
    //      case 12349: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.. o.o
    //      case 12350: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // .xo o.. o.o
    //      case 12351: Assert::IsTrue(v == PositionValue(-  410                         )); break;  // xoo o.. o.o
    //      case 12352: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. o.o
    //      case 12353: Assert::IsTrue(v == PositionValue(-  471                         )); break;  // .oo o.. o.o
    //      case 12354: Assert::IsTrue(v == PositionValue(-  209                         )); break;  // x.o o.. o.o
    //      case 12355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.. o.o
    //      case 12356: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // ..o o.. o.o
    //      case 12357: Assert::IsTrue(v == PositionValue(-   34                         )); break;  // xx. o.. o.o
    //      case 12358: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.. o.o
    //      case 12359: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .x. o.. o.o
    //      case 12360: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // xo. o.. o.o
    //      case 12361: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.. o.o
    //      case 12362: Assert::IsTrue(v == PositionValue(-  341                         )); break;  // .o. o.. o.o
    //      case 12363: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // x.. o.. o.o
    //      case 12364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.. o.o
    //      case 12365: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // ... o.. o.o
    //      case 12366: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... o.o
    //      case 12367: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // oxx ... o.o
    //      case 12368: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // .xx ... o.o
    //      case 12369: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // xox ... o.o
    //      case 12370: Assert::IsTrue(v == PositionValue(-  209                         )); break;  // oox ... o.o
    //      case 12371: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // .ox ... o.o
    //      case 12372: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.x ... o.o
    //      case 12373: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.x ... o.o
    //      case 12374: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ..x ... o.o
    //      case 12375: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // xxo ... o.o
    //      case 12376: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // oxo ... o.o
    //      case 12377: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // .xo ... o.o
    //      case 12378: Assert::IsTrue(v == PositionValue(-  209                         )); break;  // xoo ... o.o
    //      case 12379: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... o.o
    //      case 12380: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // .oo ... o.o
    //      case 12381: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // x.o ... o.o
    //      case 12382: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // o.o ... o.o
    //      case 12383: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // ..o ... o.o
    //      case 12384: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // xx. ... o.o
    //      case 12385: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // ox. ... o.o
    //      case 12386: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // .x. ... o.o
    //      case 12387: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // xo. ... o.o
    //      case 12388: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // oo. ... o.o
    //      case 12389: Assert::IsTrue(v == PositionValue(-  131                         )); break;  // .o. ... o.o
    //      case 12390: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // x.. ... o.o
    //      case 12391: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // o.. ... o.o
    //      case 12392: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // ... ... o.o
    //      case 12393: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx ..o
    //      case 12394: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx ..o
    //      case 12395: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx ..o
    //      case 12396: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx ..o
    //      case 12397: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx ..o
    //      case 12398: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx ..o
    //      case 12399: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx ..o
    //      case 12400: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx ..o
    //      case 12401: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx ..o
    //      case 12402: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx ..o
    //      case 12403: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx ..o
    //      case 12404: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx ..o
    //      case 12405: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx ..o
    //      case 12406: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx ..o
    //      case 12407: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx ..o
    //      case 12408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx ..o
    //      case 12409: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx ..o
    //      case 12410: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx ..o
    //      case 12411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx ..o
    //      case 12412: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx ..o
    //      case 12413: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx ..o
    //      case 12414: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx ..o
    //      case 12415: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx ..o
    //      case 12416: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx ..o
    //      case 12417: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx ..o
    //      case 12418: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx ..o
    //      case 12419: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx ..o
    //      case 12420: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx ..o
    //      case 12421: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // oxx oxx ..o
    //      case 12422: Assert::IsTrue(v == PositionValue(+  588                         )); break;  // .xx oxx ..o
    //      case 12423: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // xox oxx ..o
    //      case 12424: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oox oxx ..o
    //      case 12425: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .ox oxx ..o
    //      case 12426: Assert::IsTrue(v == PositionValue(+  412                         )); break;  // x.x oxx ..o
    //      case 12427: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // o.x oxx ..o
    //      case 12428: Assert::IsTrue(v == PositionValue(+  291                         )); break;  // ..x oxx ..o
    //      case 12429: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // xxo oxx ..o
    //      case 12430: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // oxo oxx ..o
    //      case 12431: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .xo oxx ..o
    //      case 12432: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xoo oxx ..o
    //      case 12433: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx ..o
    //      case 12434: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .oo oxx ..o
    //      case 12435: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // x.o oxx ..o
    //      case 12436: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // o.o oxx ..o
    //      case 12437: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ..o oxx ..o
    //      case 12438: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // xx. oxx ..o
    //      case 12439: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ox. oxx ..o
    //      case 12440: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .x. oxx ..o
    //      case 12441: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xo. oxx ..o
    //      case 12442: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // oo. oxx ..o
    //      case 12443: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .o. oxx ..o
    //      case 12444: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // x.. oxx ..o
    //      case 12445: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // o.. oxx ..o
    //      case 12446: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // ... oxx ..o
    //      case 12447: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx ..o
    //      case 12448: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // oxx .xx ..o
    //      case 12449: Assert::IsTrue(v == PositionValue(+  642                         )); break;  // .xx .xx ..o
    //      case 12450: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // xox .xx ..o
    //      case 12451: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // oox .xx ..o
    //      case 12452: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // .ox .xx ..o
    //      case 12453: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // x.x .xx ..o
    //      case 12454: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // o.x .xx ..o
    //      case 12455: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // ..x .xx ..o
    //      case 12456: Assert::IsTrue(v == PositionValue(+  503                         )); break;  // xxo .xx ..o
    //      case 12457: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // oxo .xx ..o
    //      case 12458: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // .xo .xx ..o
    //      case 12459: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // xoo .xx ..o
    //      case 12460: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx ..o
    //      case 12461: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // .oo .xx ..o
    //      case 12462: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // x.o .xx ..o
    //      case 12463: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // o.o .xx ..o
    //      case 12464: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // ..o .xx ..o
    //      case 12465: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // xx. .xx ..o
    //      case 12466: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // ox. .xx ..o
    //      case 12467: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // .x. .xx ..o
    //      case 12468: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // xo. .xx ..o
    //      case 12469: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // oo. .xx ..o
    //      case 12470: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // .o. .xx ..o
    //      case 12471: Assert::IsTrue(v == PositionValue(+  258                         )); break;  // x.. .xx ..o
    //      case 12472: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // o.. .xx ..o
    //      case 12473: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // ... .xx ..o
    //      case 12474: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox ..o
    //      case 12475: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xox ..o
    //      case 12476: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // .xx xox ..o
    //      case 12477: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xox xox ..o
    //      case 12478: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox ..o
    //      case 12479: Assert::IsTrue(v == PositionValue(-   99                         )); break;  // .ox xox ..o
    //      case 12480: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // x.x xox ..o
    //      case 12481: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xox ..o
    //      case 12482: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // ..x xox ..o
    //      case 12483: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // xxo xox ..o
    //      case 12484: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox ..o
    //      case 12485: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // .xo xox ..o
    //      case 12486: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // xoo xox ..o
    //      case 12487: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox ..o
    //      case 12488: Assert::IsTrue(v == PositionValue(-  437                         )); break;  // .oo xox ..o
    //      case 12489: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // x.o xox ..o
    //      case 12490: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox ..o
    //      case 12491: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // ..o xox ..o
    //      case 12492: Assert::IsTrue(v == PositionValue(+  339                         )); break;  // xx. xox ..o
    //      case 12493: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xox ..o
    //      case 12494: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // .x. xox ..o
    //      case 12495: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // xo. xox ..o
    //      case 12496: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox ..o
    //      case 12497: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .o. xox ..o
    //      case 12498: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // x.. xox ..o
    //      case 12499: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xox ..o
    //      case 12500: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ... xox ..o
    //      case 12501: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox ..o
    //      case 12502: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox ..o
    //      case 12503: Assert::IsTrue(v == PositionValue(+   75                         )); break;  // .xx oox ..o
    //      case 12504: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // xox oox ..o
    //      case 12505: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox ..o
    //      case 12506: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // .ox oox ..o
    //      case 12507: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // x.x oox ..o
    //      case 12508: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox ..o
    //      case 12509: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // ..x oox ..o
    //      case 12510: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // xxo oox ..o
    //      case 12511: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox ..o
    //      case 12512: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // .xo oox ..o
    //      case 12513: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // xoo oox ..o
    //      case 12514: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox ..o
    //      case 12515: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // .oo oox ..o
    //      case 12516: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // x.o oox ..o
    //      case 12517: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox ..o
    //      case 12518: Assert::IsTrue(v == PositionValue(-  386                         )); break;  // ..o oox ..o
    //      case 12519: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // xx. oox ..o
    //      case 12520: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox ..o
    //      case 12521: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .x. oox ..o
    //      case 12522: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // xo. oox ..o
    //      case 12523: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox ..o
    //      case 12524: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // .o. oox ..o
    //      case 12525: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // x.. oox ..o
    //      case 12526: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox ..o
    //      case 12527: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // ... oox ..o
    //      case 12528: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox ..o
    //      case 12529: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .ox ..o
    //      case 12530: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // .xx .ox ..o
    //      case 12531: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // xox .ox ..o
    //      case 12532: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox ..o
    //      case 12533: Assert::IsTrue(v == PositionValue(-  144                         )); break;  // .ox .ox ..o
    //      case 12534: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.x .ox ..o
    //      case 12535: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .ox ..o
    //      case 12536: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // ..x .ox ..o
    //      case 12537: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // xxo .ox ..o
    //      case 12538: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox ..o
    //      case 12539: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // .xo .ox ..o
    //      case 12540: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // xoo .ox ..o
    //      case 12541: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox ..o
    //      case 12542: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // .oo .ox ..o
    //      case 12543: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // x.o .ox ..o
    //      case 12544: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox ..o
    //      case 12545: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // ..o .ox ..o
    //      case 12546: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // xx. .ox ..o
    //      case 12547: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .ox ..o
    //      case 12548: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .x. .ox ..o
    //      case 12549: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xo. .ox ..o
    //      case 12550: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox ..o
    //      case 12551: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // .o. .ox ..o
    //      case 12552: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // x.. .ox ..o
    //      case 12553: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .ox ..o
    //      case 12554: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ... .ox ..o
    //      case 12555: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x ..o
    //      case 12556: Assert::IsTrue(v == PositionValue(+  404                         )); break;  // oxx x.x ..o
    //      case 12557: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // .xx x.x ..o
    //      case 12558: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xox x.x ..o
    //      case 12559: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // oox x.x ..o
    //      case 12560: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .ox x.x ..o
    //      case 12561: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // x.x x.x ..o
    //      case 12562: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // o.x x.x ..o
    //      case 12563: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // ..x x.x ..o
    //      case 12564: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // xxo x.x ..o
    //      case 12565: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // oxo x.x ..o
    //      case 12566: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // .xo x.x ..o
    //      case 12567: Assert::IsTrue(v == PositionValue(+   11                         )); break;  // xoo x.x ..o
    //      case 12568: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x ..o
    //      case 12569: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // .oo x.x ..o
    //      case 12570: Assert::IsTrue(v == PositionValue(+  134                         )); break;  // x.o x.x ..o
    //      case 12571: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // o.o x.x ..o
    //      case 12572: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // ..o x.x ..o
    //      case 12573: Assert::IsTrue(v == PositionValue(+  465                         )); break;  // xx. x.x ..o
    //      case 12574: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // ox. x.x ..o
    //      case 12575: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // .x. x.x ..o
    //      case 12576: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // xo. x.x ..o
    //      case 12577: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // oo. x.x ..o
    //      case 12578: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .o. x.x ..o
    //      case 12579: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // x.. x.x ..o
    //      case 12580: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // o.. x.x ..o
    //      case 12581: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // ... x.x ..o
    //      case 12582: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x ..o
    //      case 12583: Assert::IsTrue(v == PositionValue(+  149                         )); break;  // oxx o.x ..o
    //      case 12584: Assert::IsTrue(v == PositionValue(+  288                         )); break;  // .xx o.x ..o
    //      case 12585: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xox o.x ..o
    //      case 12586: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oox o.x ..o
    //      case 12587: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .ox o.x ..o
    //      case 12588: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // x.x o.x ..o
    //      case 12589: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // o.x o.x ..o
    //      case 12590: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // ..x o.x ..o
    //      case 12591: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // xxo o.x ..o
    //      case 12592: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // oxo o.x ..o
    //      case 12593: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // .xo o.x ..o
    //      case 12594: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // xoo o.x ..o
    //      case 12595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x ..o
    //      case 12596: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // .oo o.x ..o
    //      case 12597: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // x.o o.x ..o
    //      case 12598: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // o.o o.x ..o
    //      case 12599: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // ..o o.x ..o
    //      case 12600: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // xx. o.x ..o
    //      case 12601: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // ox. o.x ..o
    //      case 12602: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .x. o.x ..o
    //      case 12603: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xo. o.x ..o
    //      case 12604: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // oo. o.x ..o
    //      case 12605: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // .o. o.x ..o
    //      case 12606: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.. o.x ..o
    //      case 12607: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // o.. o.x ..o
    //      case 12608: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ... o.x ..o
    //      case 12609: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x ..o
    //      case 12610: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // oxx ..x ..o
    //      case 12611: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // .xx ..x ..o
    //      case 12612: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xox ..x ..o
    //      case 12613: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // oox ..x ..o
    //      case 12614: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // .ox ..x ..o
    //      case 12615: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // x.x ..x ..o
    //      case 12616: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // o.x ..x ..o
    //      case 12617: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ..x ..x ..o
    //      case 12618: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // xxo ..x ..o
    //      case 12619: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // oxo ..x ..o
    //      case 12620: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // .xo ..x ..o
    //      case 12621: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // xoo ..x ..o
    //      case 12622: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x ..o
    //      case 12623: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .oo ..x ..o
    //      case 12624: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // x.o ..x ..o
    //      case 12625: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // o.o ..x ..o
    //      case 12626: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // ..o ..x ..o
    //      case 12627: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // xx. ..x ..o
    //      case 12628: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // ox. ..x ..o
    //      case 12629: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // .x. ..x ..o
    //      case 12630: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xo. ..x ..o
    //      case 12631: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // oo. ..x ..o
    //      case 12632: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .o. ..x ..o
    //      case 12633: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // x.. ..x ..o
    //      case 12634: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.. ..x ..o
    //      case 12635: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ... ..x ..o
    //      case 12636: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo ..o
    //      case 12637: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // oxx xxo ..o
    //      case 12638: Assert::IsTrue(v == PositionValue(+  432                         )); break;  // .xx xxo ..o
    //      case 12639: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // xox xxo ..o
    //      case 12640: Assert::IsTrue(v == PositionValue(-  109                         )); break;  // oox xxo ..o
    //      case 12641: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // .ox xxo ..o
    //      case 12642: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // x.x xxo ..o
    //      case 12643: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // o.x xxo ..o
    //      case 12644: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // ..x xxo ..o
    //      case 12645: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xxo ..o
    //      case 12646: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xxo ..o
    //      case 12647: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xxo ..o
    //      case 12648: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xxo ..o
    //      case 12649: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo ..o
    //      case 12650: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xxo ..o
    //      case 12651: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xxo ..o
    //      case 12652: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xxo ..o
    //      case 12653: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xxo ..o
    //      case 12654: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // xx. xxo ..o
    //      case 12655: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ox. xxo ..o
    //      case 12656: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // .x. xxo ..o
    //      case 12657: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xo. xxo ..o
    //      case 12658: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // oo. xxo ..o
    //      case 12659: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // .o. xxo ..o
    //      case 12660: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // x.. xxo ..o
    //      case 12661: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // o.. xxo ..o
    //      case 12662: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // ... xxo ..o
    //      case 12663: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo ..o
    //      case 12664: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // oxx oxo ..o
    //      case 12665: Assert::IsTrue(v == PositionValue(+  186                         )); break;  // .xx oxo ..o
    //      case 12666: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // xox oxo ..o
    //      case 12667: Assert::IsTrue(v == PositionValue(-  442                         )); break;  // oox oxo ..o
    //      case 12668: Assert::IsTrue(v == PositionValue(-  234                         )); break;  // .ox oxo ..o
    //      case 12669: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // x.x oxo ..o
    //      case 12670: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // o.x oxo ..o
    //      case 12671: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // ..x oxo ..o
    //      case 12672: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oxo ..o
    //      case 12673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo ..o
    //      case 12674: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oxo ..o
    //      case 12675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oxo ..o
    //      case 12676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo ..o
    //      case 12677: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oxo ..o
    //      case 12678: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oxo ..o
    //      case 12679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo ..o
    //      case 12680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oxo ..o
    //      case 12681: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // xx. oxo ..o
    //      case 12682: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ox. oxo ..o
    //      case 12683: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .x. oxo ..o
    //      case 12684: Assert::IsTrue(v == PositionValue(-  252                         )); break;  // xo. oxo ..o
    //      case 12685: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // oo. oxo ..o
    //      case 12686: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // .o. oxo ..o
    //      case 12687: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // x.. oxo ..o
    //      case 12688: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // o.. oxo ..o
    //      case 12689: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // ... oxo ..o
    //      case 12690: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo ..o
    //      case 12691: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // oxx .xo ..o
    //      case 12692: Assert::IsTrue(v == PositionValue(+  231                         )); break;  // .xx .xo ..o
    //      case 12693: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xox .xo ..o
    //      case 12694: Assert::IsTrue(v == PositionValue(-  232                         )); break;  // oox .xo ..o
    //      case 12695: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // .ox .xo ..o
    //      case 12696: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // x.x .xo ..o
    //      case 12697: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // o.x .xo ..o
    //      case 12698: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // ..x .xo ..o
    //      case 12699: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .xo ..o
    //      case 12700: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .xo ..o
    //      case 12701: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .xo ..o
    //      case 12702: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .xo ..o
    //      case 12703: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo ..o
    //      case 12704: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .xo ..o
    //      case 12705: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .xo ..o
    //      case 12706: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .xo ..o
    //      case 12707: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .xo ..o
    //      case 12708: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // xx. .xo ..o
    //      case 12709: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ox. .xo ..o
    //      case 12710: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // .x. .xo ..o
    //      case 12711: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // xo. .xo ..o
    //      case 12712: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // oo. .xo ..o
    //      case 12713: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .o. .xo ..o
    //      case 12714: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // x.. .xo ..o
    //      case 12715: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.. .xo ..o
    //      case 12716: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // ... .xo ..o
    //      case 12717: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo ..o
    //      case 12718: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xoo ..o
    //      case 12719: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .xx xoo ..o
    //      case 12720: Assert::IsTrue(v == PositionValue(-  362                         )); break;  // xox xoo ..o
    //      case 12721: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo ..o
    //      case 12722: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .ox xoo ..o
    //      case 12723: Assert::IsTrue(v == PositionValue(-  152                         )); break;  // x.x xoo ..o
    //      case 12724: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xoo ..o
    //      case 12725: Assert::IsTrue(v == PositionValue(-  291                         )); break;  // ..x xoo ..o
    //      case 12726: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xoo ..o
    //      case 12727: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo ..o
    //      case 12728: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo ..o
    //      case 12729: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo ..o
    //      case 12730: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo ..o
    //      case 12731: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo ..o
    //      case 12732: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xoo ..o
    //      case 12733: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo ..o
    //      case 12734: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo ..o
    //      case 12735: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // xx. xoo ..o
    //      case 12736: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xoo ..o
    //      case 12737: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .x. xoo ..o
    //      case 12738: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // xo. xoo ..o
    //      case 12739: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo ..o
    //      case 12740: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // .o. xoo ..o
    //      case 12741: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // x.. xoo ..o
    //      case 12742: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xoo ..o
    //      case 12743: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // ... xoo ..o
    //      case 12744: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo ..o
    //      case 12745: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo ..o
    //      case 12746: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo ..o
    //      case 12747: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo ..o
    //      case 12748: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo ..o
    //      case 12749: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo ..o
    //      case 12750: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo ..o
    //      case 12751: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo ..o
    //      case 12752: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo ..o
    //      case 12753: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo ..o
    //      case 12754: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo ..o
    //      case 12755: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo ..o
    //      case 12756: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo ..o
    //      case 12757: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo ..o
    //      case 12758: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo ..o
    //      case 12759: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo ..o
    //      case 12760: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo ..o
    //      case 12761: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo ..o
    //      case 12762: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo ..o
    //      case 12763: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo ..o
    //      case 12764: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo ..o
    //      case 12765: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo ..o
    //      case 12766: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo ..o
    //      case 12767: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo ..o
    //      case 12768: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo ..o
    //      case 12769: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo ..o
    //      case 12770: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo ..o
    //      case 12771: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo ..o
    //      case 12772: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .oo ..o
    //      case 12773: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .xx .oo ..o
    //      case 12774: Assert::IsTrue(v == PositionValue(-  503                         )); break;  // xox .oo ..o
    //      case 12775: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo ..o
    //      case 12776: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // .ox .oo ..o
    //      case 12777: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // x.x .oo ..o
    //      case 12778: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .oo ..o
    //      case 12779: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // ..x .oo ..o
    //      case 12780: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo ..o
    //      case 12781: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo ..o
    //      case 12782: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo ..o
    //      case 12783: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo ..o
    //      case 12784: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo ..o
    //      case 12785: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo ..o
    //      case 12786: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo ..o
    //      case 12787: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo ..o
    //      case 12788: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo ..o
    //      case 12789: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xx. .oo ..o
    //      case 12790: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .oo ..o
    //      case 12791: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // .x. .oo ..o
    //      case 12792: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // xo. .oo ..o
    //      case 12793: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo ..o
    //      case 12794: Assert::IsTrue(v == PositionValue(-  607                         )); break;  // .o. .oo ..o
    //      case 12795: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // x.. .oo ..o
    //      case 12796: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .oo ..o
    //      case 12797: Assert::IsTrue(v == PositionValue(-  397                         )); break;  // ... .oo ..o
    //      case 12798: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o ..o
    //      case 12799: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // oxx x.o ..o
    //      case 12800: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // .xx x.o ..o
    //      case 12801: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // xox x.o ..o
    //      case 12802: Assert::IsTrue(v == PositionValue(-  322                         )); break;  // oox x.o ..o
    //      case 12803: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // .ox x.o ..o
    //      case 12804: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // x.x x.o ..o
    //      case 12805: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // o.x x.o ..o
    //      case 12806: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // ..x x.o ..o
    //      case 12807: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo x.o ..o
    //      case 12808: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo x.o ..o
    //      case 12809: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo x.o ..o
    //      case 12810: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo x.o ..o
    //      case 12811: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o ..o
    //      case 12812: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo x.o ..o
    //      case 12813: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o x.o ..o
    //      case 12814: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o x.o ..o
    //      case 12815: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o x.o ..o
    //      case 12816: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // xx. x.o ..o
    //      case 12817: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // ox. x.o ..o
    //      case 12818: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // .x. x.o ..o
    //      case 12819: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xo. x.o ..o
    //      case 12820: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // oo. x.o ..o
    //      case 12821: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .o. x.o ..o
    //      case 12822: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.. x.o ..o
    //      case 12823: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // o.. x.o ..o
    //      case 12824: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ... x.o ..o
    //      case 12825: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o ..o
    //      case 12826: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // oxx o.o ..o
    //      case 12827: Assert::IsTrue(v == PositionValue(-   36                         )); break;  // .xx o.o ..o
    //      case 12828: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // xox o.o ..o
    //      case 12829: Assert::IsTrue(v == PositionValue(-  577                         )); break;  // oox o.o ..o
    //      case 12830: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // .ox o.o ..o
    //      case 12831: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // x.x o.o ..o
    //      case 12832: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // o.x o.o ..o
    //      case 12833: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ..x o.o ..o
    //      case 12834: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo o.o ..o
    //      case 12835: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o ..o
    //      case 12836: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo o.o ..o
    //      case 12837: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo o.o ..o
    //      case 12838: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o ..o
    //      case 12839: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo o.o ..o
    //      case 12840: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o o.o ..o
    //      case 12841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o ..o
    //      case 12842: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o o.o ..o
    //      case 12843: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // xx. o.o ..o
    //      case 12844: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // ox. o.o ..o
    //      case 12845: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .x. o.o ..o
    //      case 12846: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // xo. o.o ..o
    //      case 12847: Assert::IsTrue(v == PositionValue(-  638                         )); break;  // oo. o.o ..o
    //      case 12848: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .o. o.o ..o
    //      case 12849: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // x.. o.o ..o
    //      case 12850: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // o.. o.o ..o
    //      case 12851: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // ... o.o ..o
    //      case 12852: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o ..o
    //      case 12853: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // oxx ..o ..o
    //      case 12854: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // .xx ..o ..o
    //      case 12855: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // xox ..o ..o
    //      case 12856: Assert::IsTrue(v == PositionValue(-  367                         )); break;  // oox ..o ..o
    //      case 12857: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // .ox ..o ..o
    //      case 12858: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // x.x ..o ..o
    //      case 12859: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // o.x ..o ..o
    //      case 12860: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // ..x ..o ..o
    //      case 12861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ..o ..o
    //      case 12862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ..o ..o
    //      case 12863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ..o ..o
    //      case 12864: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ..o ..o
    //      case 12865: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o ..o
    //      case 12866: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ..o ..o
    //      case 12867: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ..o ..o
    //      case 12868: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ..o ..o
    //      case 12869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ..o ..o
    //      case 12870: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xx. ..o ..o
    //      case 12871: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ox. ..o ..o
    //      case 12872: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .x. ..o ..o
    //      case 12873: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // xo. ..o ..o
    //      case 12874: Assert::IsTrue(v == PositionValue(-  428                         )); break;  // oo. ..o ..o
    //      case 12875: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // .o. ..o ..o
    //      case 12876: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // x.. ..o ..o
    //      case 12877: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // o.. ..o ..o
    //      case 12878: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // ... ..o ..o
    //      case 12879: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. ..o
    //      case 12880: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // oxx xx. ..o
    //      case 12881: Assert::IsTrue(v == PositionValue(+  564                         )); break;  // .xx xx. ..o
    //      case 12882: Assert::IsTrue(v == PositionValue(+  430                         )); break;  // xox xx. ..o
    //      case 12883: Assert::IsTrue(v == PositionValue(+  101                         )); break;  // oox xx. ..o
    //      case 12884: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // .ox xx. ..o
    //      case 12885: Assert::IsTrue(v == PositionValue(+  475                         )); break;  // x.x xx. ..o
    //      case 12886: Assert::IsTrue(v == PositionValue(+  224                         )); break;  // o.x xx. ..o
    //      case 12887: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // ..x xx. ..o
    //      case 12888: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // xxo xx. ..o
    //      case 12889: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // oxo xx. ..o
    //      case 12890: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // .xo xx. ..o
    //      case 12891: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // xoo xx. ..o
    //      case 12892: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. ..o
    //      case 12893: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // .oo xx. ..o
    //      case 12894: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // x.o xx. ..o
    //      case 12895: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // o.o xx. ..o
    //      case 12896: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // ..o xx. ..o
    //      case 12897: Assert::IsTrue(v == PositionValue(+  642                         )); break;  // xx. xx. ..o
    //      case 12898: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // ox. xx. ..o
    //      case 12899: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // .x. xx. ..o
    //      case 12900: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // xo. xx. ..o
    //      case 12901: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // oo. xx. ..o
    //      case 12902: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // .o. xx. ..o
    //      case 12903: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // x.. xx. ..o
    //      case 12904: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // o.. xx. ..o
    //      case 12905: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // ... xx. ..o
    //      case 12906: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. ..o
    //      case 12907: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // oxx ox. ..o
    //      case 12908: Assert::IsTrue(v == PositionValue(+  309                         )); break;  // .xx ox. ..o
    //      case 12909: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // xox ox. ..o
    //      case 12910: Assert::IsTrue(v == PositionValue(-  241                         )); break;  // oox ox. ..o
    //      case 12911: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // .ox ox. ..o
    //      case 12912: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // x.x ox. ..o
    //      case 12913: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.x ox. ..o
    //      case 12914: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // ..x ox. ..o
    //      case 12915: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // xxo ox. ..o
    //      case 12916: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // oxo ox. ..o
    //      case 12917: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // .xo ox. ..o
    //      case 12918: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xoo ox. ..o
    //      case 12919: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. ..o
    //      case 12920: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .oo ox. ..o
    //      case 12921: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // x.o ox. ..o
    //      case 12922: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.o ox. ..o
    //      case 12923: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // ..o ox. ..o
    //      case 12924: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // xx. ox. ..o
    //      case 12925: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ox. ox. ..o
    //      case 12926: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // .x. ox. ..o
    //      case 12927: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // xo. ox. ..o
    //      case 12928: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // oo. ox. ..o
    //      case 12929: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .o. ox. ..o
    //      case 12930: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.. ox. ..o
    //      case 12931: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.. ox. ..o
    //      case 12932: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ... ox. ..o
    //      case 12933: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. ..o
    //      case 12934: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // oxx .x. ..o
    //      case 12935: Assert::IsTrue(v == PositionValue(+  354                         )); break;  // .xx .x. ..o
    //      case 12936: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // xox .x. ..o
    //      case 12937: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // oox .x. ..o
    //      case 12938: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .ox .x. ..o
    //      case 12939: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // x.x .x. ..o
    //      case 12940: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // o.x .x. ..o
    //      case 12941: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // ..x .x. ..o
    //      case 12942: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // xxo .x. ..o
    //      case 12943: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // oxo .x. ..o
    //      case 12944: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // .xo .x. ..o
    //      case 12945: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xoo .x. ..o
    //      case 12946: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. ..o
    //      case 12947: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .oo .x. ..o
    //      case 12948: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // x.o .x. ..o
    //      case 12949: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.o .x. ..o
    //      case 12950: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ..o .x. ..o
    //      case 12951: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // xx. .x. ..o
    //      case 12952: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // ox. .x. ..o
    //      case 12953: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // .x. .x. ..o
    //      case 12954: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xo. .x. ..o
    //      case 12955: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oo. .x. ..o
    //      case 12956: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .o. .x. ..o
    //      case 12957: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // x.. .x. ..o
    //      case 12958: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // o.. .x. ..o
    //      case 12959: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // ... .x. ..o
    //      case 12960: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. ..o
    //      case 12961: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx xo. ..o
    //      case 12962: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // .xx xo. ..o
    //      case 12963: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // xox xo. ..o
    //      case 12964: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. ..o
    //      case 12965: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // .ox xo. ..o
    //      case 12966: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // x.x xo. ..o
    //      case 12967: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x xo. ..o
    //      case 12968: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // ..x xo. ..o
    //      case 12969: Assert::IsTrue(v == PositionValue(+   77                         )); break;  // xxo xo. ..o
    //      case 12970: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. ..o
    //      case 12971: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // .xo xo. ..o
    //      case 12972: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // xoo xo. ..o
    //      case 12973: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. ..o
    //      case 12974: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // .oo xo. ..o
    //      case 12975: Assert::IsTrue(v == PositionValue(-  124                         )); break;  // x.o xo. ..o
    //      case 12976: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. ..o
    //      case 12977: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // ..o xo. ..o
    //      case 12978: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // xx. xo. ..o
    //      case 12979: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. xo. ..o
    //      case 12980: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .x. xo. ..o
    //      case 12981: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // xo. xo. ..o
    //      case 12982: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. ..o
    //      case 12983: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // .o. xo. ..o
    //      case 12984: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // x.. xo. ..o
    //      case 12985: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. xo. ..o
    //      case 12986: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ... xo. ..o
    //      case 12987: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. ..o
    //      case 12988: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. ..o
    //      case 12989: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // .xx oo. ..o
    //      case 12990: Assert::IsTrue(v == PositionValue(-  425                         )); break;  // xox oo. ..o
    //      case 12991: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. ..o
    //      case 12992: Assert::IsTrue(v == PositionValue(-  477                         )); break;  // .ox oo. ..o
    //      case 12993: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // x.x oo. ..o
    //      case 12994: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. ..o
    //      case 12995: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // ..x oo. ..o
    //      case 12996: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // xxo oo. ..o
    //      case 12997: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. ..o
    //      case 12998: Assert::IsTrue(v == PositionValue(-  395                         )); break;  // .xo oo. ..o
    //      case 12999: Assert::IsTrue(v == PositionValue(-  676                         )); break;  // xoo oo. ..o
    //      case 13000: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. ..o
    //      case 13001: Assert::IsTrue(v == PositionValue(-  737                         )); break;  // .oo oo. ..o
    //      case 13002: Assert::IsTrue(v == PositionValue(-  388                         )); break;  // x.o oo. ..o
    //      case 13003: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. ..o
    //      case 13004: Assert::IsTrue(v == PositionValue(-  440                         )); break;  // ..o oo. ..o
    //      case 13005: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // xx. oo. ..o
    //      case 13006: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. ..o
    //      case 13007: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // .x. oo. ..o
    //      case 13008: Assert::IsTrue(v == PositionValue(-  468                         )); break;  // xo. oo. ..o
    //      case 13009: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. ..o
    //      case 13010: Assert::IsTrue(v == PositionValue(-  520                         )); break;  // .o. oo. ..o
    //      case 13011: Assert::IsTrue(v == PositionValue(-  258                         )); break;  // x.. oo. ..o
    //      case 13012: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. ..o
    //      case 13013: Assert::IsTrue(v == PositionValue(-  310                         )); break;  // ... oo. ..o
    //      case 13014: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. ..o
    //      case 13015: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx .o. ..o
    //      case 13016: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // .xx .o. ..o
    //      case 13017: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // xox .o. ..o
    //      case 13018: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. ..o
    //      case 13019: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // .ox .o. ..o
    //      case 13020: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // x.x .o. ..o
    //      case 13021: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x .o. ..o
    //      case 13022: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // ..x .o. ..o
    //      case 13023: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // xxo .o. ..o
    //      case 13024: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. ..o
    //      case 13025: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // .xo .o. ..o
    //      case 13026: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // xoo .o. ..o
    //      case 13027: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. ..o
    //      case 13028: Assert::IsTrue(v == PositionValue(-  527                         )); break;  // .oo .o. ..o
    //      case 13029: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // x.o .o. ..o
    //      case 13030: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. ..o
    //      case 13031: Assert::IsTrue(v == PositionValue(-  308                         )); break;  // ..o .o. ..o
    //      case 13032: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // xx. .o. ..o
    //      case 13033: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. .o. ..o
    //      case 13034: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .x. .o. ..o
    //      case 13035: Assert::IsTrue(v == PositionValue(-  258                         )); break;  // xo. .o. ..o
    //      case 13036: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. ..o
    //      case 13037: Assert::IsTrue(v == PositionValue(-  310                         )); break;  // .o. .o. ..o
    //      case 13038: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // x.. .o. ..o
    //      case 13039: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. .o. ..o
    //      case 13040: Assert::IsTrue(v == PositionValue(-  178                         )); break;  // ... .o. ..o
    //      case 13041: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. ..o
    //      case 13042: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // oxx x.. ..o
    //      case 13043: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // .xx x.. ..o
    //      case 13044: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xox x.. ..o
    //      case 13045: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oox x.. ..o
    //      case 13046: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .ox x.. ..o
    //      case 13047: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // x.x x.. ..o
    //      case 13048: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.x x.. ..o
    //      case 13049: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ..x x.. ..o
    //      case 13050: Assert::IsTrue(v == PositionValue(+  290                         )); break;  // xxo x.. ..o
    //      case 13051: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // oxo x.. ..o
    //      case 13052: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // .xo x.. ..o
    //      case 13053: Assert::IsTrue(v == PositionValue(-   34                         )); break;  // xoo x.. ..o
    //      case 13054: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. ..o
    //      case 13055: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .oo x.. ..o
    //      case 13056: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // x.o x.. ..o
    //      case 13057: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // o.o x.. ..o
    //      case 13058: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // ..o x.. ..o
    //      case 13059: Assert::IsTrue(v == PositionValue(+  342                         )); break;  // xx. x.. ..o
    //      case 13060: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // ox. x.. ..o
    //      case 13061: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // .x. x.. ..o
    //      case 13062: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // xo. x.. ..o
    //      case 13063: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // oo. x.. ..o
    //      case 13064: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .o. x.. ..o
    //      case 13065: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // x.. x.. ..o
    //      case 13066: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.. x.. ..o
    //      case 13067: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ... x.. ..o
    //      case 13068: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. ..o
    //      case 13069: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // oxx o.. ..o
    //      case 13070: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // .xx o.. ..o
    //      case 13071: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // xox o.. ..o
    //      case 13072: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // oox o.. ..o
    //      case 13073: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .ox o.. ..o
    //      case 13074: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.x o.. ..o
    //      case 13075: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // o.x o.. ..o
    //      case 13076: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ..x o.. ..o
    //      case 13077: Assert::IsTrue(v == PositionValue(+   35                         )); break;  // xxo o.. ..o
    //      case 13078: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // oxo o.. ..o
    //      case 13079: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // .xo o.. ..o
    //      case 13080: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // xoo o.. ..o
    //      case 13081: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. ..o
    //      case 13082: Assert::IsTrue(v == PositionValue(-  341                         )); break;  // .oo o.. ..o
    //      case 13083: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // x.o o.. ..o
    //      case 13084: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // o.o o.. ..o
    //      case 13085: Assert::IsTrue(v == PositionValue(-  131                         )); break;  // ..o o.. ..o
    //      case 13086: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // xx. o.. ..o
    //      case 13087: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ox. o.. ..o
    //      case 13088: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .x. o.. ..o
    //      case 13089: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // xo. o.. ..o
    //      case 13090: Assert::IsTrue(v == PositionValue(-  428                         )); break;  // oo. o.. ..o
    //      case 13091: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // .o. o.. ..o
    //      case 13092: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // x.. o.. ..o
    //      case 13093: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // o.. o.. ..o
    //      case 13094: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ... o.. ..o
    //      case 13095: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... ..o
    //      case 13096: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // oxx ... ..o
    //      case 13097: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // .xx ... ..o
    //      case 13098: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xox ... ..o
    //      case 13099: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // oox ... ..o
    //      case 13100: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .ox ... ..o
    //      case 13101: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.x ... ..o
    //      case 13102: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.x ... ..o
    //      case 13103: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..x ... ..o
    //      case 13104: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // xxo ... ..o
    //      case 13105: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // oxo ... ..o
    //      case 13106: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // .xo ... ..o
    //      case 13107: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // xoo ... ..o
    //      case 13108: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... ..o
    //      case 13109: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // .oo ... ..o
    //      case 13110: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // x.o ... ..o
    //      case 13111: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // o.o ... ..o
    //      case 13112: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // ..o ... ..o
    //      case 13113: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // xx. ... ..o
    //      case 13114: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // ox. ... ..o
    //      case 13115: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .x. ... ..o
    //      case 13116: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // xo. ... ..o
    //      case 13117: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // oo. ... ..o
    //      case 13118: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // .o. ... ..o
    //      case 13119: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.. ... ..o
    //      case 13120: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.. ... ..o
    //      case 13121: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ... ... ..o
    //      case 13122: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx xx.
    //      case 13123: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx xx.
    //      case 13124: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx xx.
    //      case 13125: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx xx.
    //      case 13126: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx xx.
    //      case 13127: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx xx.
    //      case 13128: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx xx.
    //      case 13129: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx xx.
    //      case 13130: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx xx.
    //      case 13131: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx xx.
    //      case 13132: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx xx.
    //      case 13133: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx xx.
    //      case 13134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx xx.
    //      case 13135: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx xx.
    //      case 13136: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx xx.
    //      case 13137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx xx.
    //      case 13138: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx xx.
    //      case 13139: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx xx.
    //      case 13140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx xx.
    //      case 13141: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx xx.
    //      case 13142: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx xx.
    //      case 13143: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx xx.
    //      case 13144: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx xx.
    //      case 13145: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx xx.
    //      case 13146: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx xx.
    //      case 13147: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx xx.
    //      case 13148: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx xx.
    //      case 13149: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx xx.
    //      case 13150: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx xx.
    //      case 13151: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx xx.
    //      case 13152: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx xx.
    //      case 13153: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxx xx.
    //      case 13154: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx xx.
    //      case 13155: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx xx.
    //      case 13156: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxx xx.
    //      case 13157: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx xx.
    //      case 13158: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx xx.
    //      case 13159: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oxx xx.
    //      case 13160: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxx xx.
    //      case 13161: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // xoo oxx xx.
    //      case 13162: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx xx.
    //      case 13163: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // .oo oxx xx.
    //      case 13164: Assert::IsTrue(v == PositionValue(+  631                         )); break;  // x.o oxx xx.
    //      case 13165: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // o.o oxx xx.
    //      case 13166: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // ..o oxx xx.
    //      case 13167: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx xx.
    //      case 13168: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oxx xx.
    //      case 13169: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxx xx.
    //      case 13170: Assert::IsTrue(v == PositionValue(+  551                         )); break;  // xo. oxx xx.
    //      case 13171: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // oo. oxx xx.
    //      case 13172: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .o. oxx xx.
    //      case 13173: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // x.. oxx xx.
    //      case 13174: Assert::IsTrue(v == PositionValue(+  432                         )); break;  // o.. oxx xx.
    //      case 13175: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // ... oxx xx.
    //      case 13176: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx xx.
    //      case 13177: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx xx.
    //      case 13178: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx xx.
    //      case 13179: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx xx.
    //      case 13180: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx xx.
    //      case 13181: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx xx.
    //      case 13182: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx xx.
    //      case 13183: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx xx.
    //      case 13184: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx xx.
    //      case 13185: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx xx.
    //      case 13186: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xx xx.
    //      case 13187: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xx xx.
    //      case 13188: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // xoo .xx xx.
    //      case 13189: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx xx.
    //      case 13190: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // .oo .xx xx.
    //      case 13191: Assert::IsTrue(v == PositionValue(+  685                         )); break;  // x.o .xx xx.
    //      case 13192: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // o.o .xx xx.
    //      case 13193: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // ..o .xx xx.
    //      case 13194: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx xx.
    //      case 13195: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xx xx.
    //      case 13196: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xx xx.
    //      case 13197: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // xo. .xx xx.
    //      case 13198: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // oo. .xx xx.
    //      case 13199: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // .o. .xx xx.
    //      case 13200: Assert::IsTrue(v == PositionValue(+  737                         )); break;  // x.. .xx xx.
    //      case 13201: Assert::IsTrue(v == PositionValue(+  564                         )); break;  // o.. .xx xx.
    //      case 13202: Assert::IsTrue(v == PositionValue(+  607                         )); break;  // ... .xx xx.
    //      case 13203: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox xx.
    //      case 13204: Assert::IsTrue(v == PositionValue(+  730                         )); break;  // oxx xox xx.
    //      case 13205: Assert::IsTrue(v == PositionValue(+  878                         )); break;  // .xx xox xx.
    //      case 13206: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox xx.
    //      case 13207: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // oox xox xx.
    //      case 13208: Assert::IsTrue(v == PositionValue(+  467                         )); break;  // .ox xox xx.
    //      case 13209: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox xx.
    //      case 13210: Assert::IsTrue(v == PositionValue(+  451                         )); break;  // o.x xox xx.
    //      case 13211: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // ..x xox xx.
    //      case 13212: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xox xx.
    //      case 13213: Assert::IsTrue(v == PositionValue(+  401                         )); break;  // oxo xox xx.
    //      case 13214: Assert::IsTrue(v == PositionValue(+  540                         )); break;  // .xo xox xx.
    //      case 13215: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xox xx.
    //      case 13216: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox xx.
    //      case 13217: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // .oo xox xx.
    //      case 13218: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xox xx.
    //      case 13219: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // o.o xox xx.
    //      case 13220: Assert::IsTrue(v == PositionValue(+  339                         )); break;  // ..o xox xx.
    //      case 13221: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xox xx.
    //      case 13222: Assert::IsTrue(v == PositionValue(+  522                         )); break;  // ox. xox xx.
    //      case 13223: Assert::IsTrue(v == PositionValue(+  661                         )); break;  // .x. xox xx.
    //      case 13224: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xox xx.
    //      case 13225: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // oo. xox xx.
    //      case 13226: Assert::IsTrue(v == PositionValue(+  337                         )); break;  // .o. xox xx.
    //      case 13227: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xox xx.
    //      case 13228: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // o.. xox xx.
    //      case 13229: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // ... xox xx.
    //      case 13230: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox xx.
    //      case 13231: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // oxx oox xx.
    //      case 13232: Assert::IsTrue(v == PositionValue(+  467                         )); break;  // .xx oox xx.
    //      case 13233: Assert::IsTrue(v == PositionValue(+   99                         )); break;  // xox oox xx.
    //      case 13234: Assert::IsTrue(v == PositionValue(-  230                         )); break;  // oox oox xx.
    //      case 13235: Assert::IsTrue(v == PositionValue(+   56                         )); break;  // .ox oox xx.
    //      case 13236: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // x.x oox xx.
    //      case 13237: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // o.x oox xx.
    //      case 13238: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // ..x oox xx.
    //      case 13239: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xxo oox xx.
    //      case 13240: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // oxo oox xx.
    //      case 13241: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // .xo oox xx.
    //      case 13242: Assert::IsTrue(v == PositionValue(-  230                         )); break;  // xoo oox xx.
    //      case 13243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox xx.
    //      case 13244: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // .oo oox xx.
    //      case 13245: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // x.o oox xx.
    //      case 13246: Assert::IsTrue(v == PositionValue(-  202                         )); break;  // o.o oox xx.
    //      case 13247: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // ..o oox xx.
    //      case 13248: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // xx. oox xx.
    //      case 13249: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // ox. oox xx.
    //      case 13250: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .x. oox xx.
    //      case 13251: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // xo. oox xx.
    //      case 13252: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // oo. oox xx.
    //      case 13253: Assert::IsTrue(v == PositionValue(-   74                         )); break;  // .o. oox xx.
    //      case 13254: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.. oox xx.
    //      case 13255: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.. oox xx.
    //      case 13256: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // ... oox xx.
    //      case 13257: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox xx.
    //      case 13258: Assert::IsTrue(v == PositionValue(+  451                         )); break;  // oxx .ox xx.
    //      case 13259: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // .xx .ox xx.
    //      case 13260: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // xox .ox xx.
    //      case 13261: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // oox .ox xx.
    //      case 13262: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // .ox .ox xx.
    //      case 13263: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // x.x .ox xx.
    //      case 13264: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // o.x .ox xx.
    //      case 13265: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // ..x .ox xx.
    //      case 13266: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // xxo .ox xx.
    //      case 13267: Assert::IsTrue(v == PositionValue(+  122                         )); break;  // oxo .ox xx.
    //      case 13268: Assert::IsTrue(v == PositionValue(+  252                         )); break;  // .xo .ox xx.
    //      case 13269: Assert::IsTrue(v == PositionValue(-   29                         )); break;  // xoo .ox xx.
    //      case 13270: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox xx.
    //      case 13271: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .oo .ox xx.
    //      case 13272: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // x.o .ox xx.
    //      case 13273: Assert::IsTrue(v == PositionValue(-    1                         )); break;  // o.o .ox xx.
    //      case 13274: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // ..o .ox xx.
    //      case 13275: Assert::IsTrue(v == PositionValue(+  503                         )); break;  // xx. .ox xx.
    //      case 13276: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // ox. .ox xx.
    //      case 13277: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // .x. .ox xx.
    //      case 13278: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xo. .ox xx.
    //      case 13279: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // oo. .ox xx.
    //      case 13280: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // .o. .ox xx.
    //      case 13281: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // x.. .ox xx.
    //      case 13282: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // o.. .ox xx.
    //      case 13283: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // ... .ox xx.
    //      case 13284: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x xx.
    //      case 13285: Assert::IsTrue(v == PositionValue(+  865                         )); break;  // oxx x.x xx.
    //      case 13286: Assert::IsTrue(v == PositionValue(+  926                         )); break;  // .xx x.x xx.
    //      case 13287: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x xx.
    //      case 13288: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // oox x.x xx.
    //      case 13289: Assert::IsTrue(v == PositionValue(+  593                         )); break;  // .ox x.x xx.
    //      case 13290: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x xx.
    //      case 13291: Assert::IsTrue(v == PositionValue(+  586                         )); break;  // o.x x.x xx.
    //      case 13292: Assert::IsTrue(v == PositionValue(+  638                         )); break;  // ..x x.x xx.
    //      case 13293: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.x xx.
    //      case 13294: Assert::IsTrue(v == PositionValue(+  614                         )); break;  // oxo x.x xx.
    //      case 13295: Assert::IsTrue(v == PositionValue(+  666                         )); break;  // .xo x.x xx.
    //      case 13296: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.x xx.
    //      case 13297: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x xx.
    //      case 13298: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // .oo x.x xx.
    //      case 13299: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.x xx.
    //      case 13300: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // o.o x.x xx.
    //      case 13301: Assert::IsTrue(v == PositionValue(+  465                         )); break;  // ..o x.x xx.
    //      case 13302: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.x xx.
    //      case 13303: Assert::IsTrue(v == PositionValue(+  657                         )); break;  // ox. x.x xx.
    //      case 13304: Assert::IsTrue(v == PositionValue(+  709                         )); break;  // .x. x.x xx.
    //      case 13305: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.x xx.
    //      case 13306: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // oo. x.x xx.
    //      case 13307: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // .o. x.x xx.
    //      case 13308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.x xx.
    //      case 13309: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // o.. x.x xx.
    //      case 13310: Assert::IsTrue(v == PositionValue(+  508                         )); break;  // ... x.x xx.
    //      case 13311: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x xx.
    //      case 13312: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // oxx o.x xx.
    //      case 13313: Assert::IsTrue(v == PositionValue(+  593                         )); break;  // .xx o.x xx.
    //      case 13314: Assert::IsTrue(v == PositionValue(+  303                         )); break;  // xox o.x xx.
    //      case 13315: Assert::IsTrue(v == PositionValue(+   61                         )); break;  // oox o.x xx.
    //      case 13316: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // .ox o.x xx.
    //      case 13317: Assert::IsTrue(v == PositionValue(+  426                         )); break;  // x.x o.x xx.
    //      case 13318: Assert::IsTrue(v == PositionValue(+  262                         )); break;  // o.x o.x xx.
    //      case 13319: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // ..x o.x xx.
    //      case 13320: Assert::IsTrue(v == PositionValue(+  454                         )); break;  // xxo o.x xx.
    //      case 13321: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // oxo o.x xx.
    //      case 13322: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // .xo o.x xx.
    //      case 13323: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // xoo o.x xx.
    //      case 13324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x xx.
    //      case 13325: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .oo o.x xx.
    //      case 13326: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // x.o o.x xx.
    //      case 13327: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // o.o o.x xx.
    //      case 13328: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // ..o o.x xx.
    //      case 13329: Assert::IsTrue(v == PositionValue(+  506                         )); break;  // xx. o.x xx.
    //      case 13330: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // ox. o.x xx.
    //      case 13331: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // .x. o.x xx.
    //      case 13332: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xo. o.x xx.
    //      case 13333: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // oo. o.x xx.
    //      case 13334: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .o. o.x xx.
    //      case 13335: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // x.. o.x xx.
    //      case 13336: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // o.. o.x xx.
    //      case 13337: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // ... o.x xx.
    //      case 13338: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x xx.
    //      case 13339: Assert::IsTrue(v == PositionValue(+  586                         )); break;  // oxx ..x xx.
    //      case 13340: Assert::IsTrue(v == PositionValue(+  638                         )); break;  // .xx ..x xx.
    //      case 13341: Assert::IsTrue(v == PositionValue(+  426                         )); break;  // xox ..x xx.
    //      case 13342: Assert::IsTrue(v == PositionValue(+  262                         )); break;  // oox ..x xx.
    //      case 13343: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // .ox ..x xx.
    //      case 13344: Assert::IsTrue(v == PositionValue(+  471                         )); break;  // x.x ..x xx.
    //      case 13345: Assert::IsTrue(v == PositionValue(+  385                         )); break;  // o.x ..x xx.
    //      case 13346: Assert::IsTrue(v == PositionValue(+  428                         )); break;  // ..x ..x xx.
    //      case 13347: Assert::IsTrue(v == PositionValue(+  499                         )); break;  // xxo ..x xx.
    //      case 13348: Assert::IsTrue(v == PositionValue(+  335                         )); break;  // oxo ..x xx.
    //      case 13349: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // .xo ..x xx.
    //      case 13350: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // xoo ..x xx.
    //      case 13351: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x xx.
    //      case 13352: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .oo ..x xx.
    //      case 13353: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // x.o ..x xx.
    //      case 13354: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // o.o ..x xx.
    //      case 13355: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // ..o ..x xx.
    //      case 13356: Assert::IsTrue(v == PositionValue(+  551                         )); break;  // xx. ..x xx.
    //      case 13357: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // ox. ..x xx.
    //      case 13358: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .x. ..x xx.
    //      case 13359: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // xo. ..x xx.
    //      case 13360: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oo. ..x xx.
    //      case 13361: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .o. ..x xx.
    //      case 13362: Assert::IsTrue(v == PositionValue(+  341                         )); break;  // x.. ..x xx.
    //      case 13363: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // o.. ..x xx.
    //      case 13364: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // ... ..x xx.
    //      case 13365: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo xx.
    //      case 13366: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo xx.
    //      case 13367: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo xx.
    //      case 13368: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo xx.
    //      case 13369: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxo xx.
    //      case 13370: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxo xx.
    //      case 13371: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo xx.
    //      case 13372: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxo xx.
    //      case 13373: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxo xx.
    //      case 13374: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo xx.
    //      case 13375: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxo xx.
    //      case 13376: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxo xx.
    //      case 13377: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo xx.
    //      case 13378: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo xx.
    //      case 13379: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // .oo xxo xx.
    //      case 13380: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo xx.
    //      case 13381: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // o.o xxo xx.
    //      case 13382: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // ..o xxo xx.
    //      case 13383: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo xx.
    //      case 13384: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxo xx.
    //      case 13385: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxo xx.
    //      case 13386: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo xx.
    //      case 13387: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // oo. xxo xx.
    //      case 13388: Assert::IsTrue(v == PositionValue(+  508                         )); break;  // .o. xxo xx.
    //      case 13389: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo xx.
    //      case 13390: Assert::IsTrue(v == PositionValue(+  588                         )); break;  // o.. xxo xx.
    //      case 13391: Assert::IsTrue(v == PositionValue(+  640                         )); break;  // ... xxo xx.
    //      case 13392: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo xx.
    //      case 13393: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxo xx.
    //      case 13394: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo xx.
    //      case 13395: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo xx.
    //      case 13396: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxo xx.
    //      case 13397: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxo xx.
    //      case 13398: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo xx.
    //      case 13399: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxo xx.
    //      case 13400: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxo xx.
    //      case 13401: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo xx.
    //      case 13402: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oxo xx.
    //      case 13403: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxo xx.
    //      case 13404: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xoo oxo xx.
    //      case 13405: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo xx.
    //      case 13406: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // .oo oxo xx.
    //      case 13407: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // x.o oxo xx.
    //      case 13408: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // o.o oxo xx.
    //      case 13409: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // ..o oxo xx.
    //      case 13410: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo xx.
    //      case 13411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oxo xx.
    //      case 13412: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxo xx.
    //      case 13413: Assert::IsTrue(v == PositionValue(+  227                         )); break;  // xo. oxo xx.
    //      case 13414: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // oo. oxo xx.
    //      case 13415: Assert::IsTrue(v == PositionValue(+   97                         )); break;  // .o. oxo xx.
    //      case 13416: Assert::IsTrue(v == PositionValue(+  437                         )); break;  // x.. oxo xx.
    //      case 13417: Assert::IsTrue(v == PositionValue(+  186                         )); break;  // o.. oxo xx.
    //      case 13418: Assert::IsTrue(v == PositionValue(+  307                         )); break;  // ... oxo xx.
    //      case 13419: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo xx.
    //      case 13420: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo xx.
    //      case 13421: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo xx.
    //      case 13422: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo xx.
    //      case 13423: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xo xx.
    //      case 13424: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xo xx.
    //      case 13425: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo xx.
    //      case 13426: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xo xx.
    //      case 13427: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xo xx.
    //      case 13428: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo xx.
    //      case 13429: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xo xx.
    //      case 13430: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xo xx.
    //      case 13431: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // xoo .xo xx.
    //      case 13432: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo xx.
    //      case 13433: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // .oo .xo xx.
    //      case 13434: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // x.o .xo xx.
    //      case 13435: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // o.o .xo xx.
    //      case 13436: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ..o .xo xx.
    //      case 13437: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo xx.
    //      case 13438: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xo xx.
    //      case 13439: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xo xx.
    //      case 13440: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // xo. .xo xx.
    //      case 13441: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // oo. .xo xx.
    //      case 13442: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .o. .xo xx.
    //      case 13443: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // x.. .xo xx.
    //      case 13444: Assert::IsTrue(v == PositionValue(+  309                         )); break;  // o.. .xo xx.
    //      case 13445: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // ... .xo xx.
    //      case 13446: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo xx.
    //      case 13447: Assert::IsTrue(v == PositionValue(+  319                         )); break;  // oxx xoo xx.
    //      case 13448: Assert::IsTrue(v == PositionValue(+  467                         )); break;  // .xx xoo xx.
    //      case 13449: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xoo xx.
    //      case 13450: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // oox xoo xx.
    //      case 13451: Assert::IsTrue(v == PositionValue(+   56                         )); break;  // .ox xoo xx.
    //      case 13452: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xoo xx.
    //      case 13453: Assert::IsTrue(v == PositionValue(+  118                         )); break;  // o.x xoo xx.
    //      case 13454: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // ..x xoo xx.
    //      case 13455: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xoo xx.
    //      case 13456: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // oxo xoo xx.
    //      case 13457: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // .xo xoo xx.
    //      case 13458: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xoo xx.
    //      case 13459: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo xx.
    //      case 13460: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // .oo xoo xx.
    //      case 13461: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xoo xx.
    //      case 13462: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // o.o xoo xx.
    //      case 13463: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // ..o xoo xx.
    //      case 13464: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xoo xx.
    //      case 13465: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // ox. xoo xx.
    //      case 13466: Assert::IsTrue(v == PositionValue(+  337                         )); break;  // .x. xoo xx.
    //      case 13467: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xoo xx.
    //      case 13468: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // oo. xoo xx.
    //      case 13469: Assert::IsTrue(v == PositionValue(+   13                         )); break;  // .o. xoo xx.
    //      case 13470: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xoo xx.
    //      case 13471: Assert::IsTrue(v == PositionValue(+   75                         )); break;  // o.. xoo xx.
    //      case 13472: Assert::IsTrue(v == PositionValue(+  214                         )); break;  // ... xoo xx.
    //      case 13473: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo xx.
    //      case 13474: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo xx.
    //      case 13475: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo xx.
    //      case 13476: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo xx.
    //      case 13477: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo xx.
    //      case 13478: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo xx.
    //      case 13479: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo xx.
    //      case 13480: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo xx.
    //      case 13481: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo xx.
    //      case 13482: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo xx.
    //      case 13483: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo xx.
    //      case 13484: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo xx.
    //      case 13485: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo xx.
    //      case 13486: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo xx.
    //      case 13487: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo xx.
    //      case 13488: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo xx.
    //      case 13489: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo xx.
    //      case 13490: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo xx.
    //      case 13491: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo xx.
    //      case 13492: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo xx.
    //      case 13493: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo xx.
    //      case 13494: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo xx.
    //      case 13495: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo xx.
    //      case 13496: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo xx.
    //      case 13497: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo xx.
    //      case 13498: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo xx.
    //      case 13499: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo xx.
    //      case 13500: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo xx.
    //      case 13501: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // oxx .oo xx.
    //      case 13502: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .xx .oo xx.
    //      case 13503: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // xox .oo xx.
    //      case 13504: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // oox .oo xx.
    //      case 13505: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .ox .oo xx.
    //      case 13506: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.x .oo xx.
    //      case 13507: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // o.x .oo xx.
    //      case 13508: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // ..x .oo xx.
    //      case 13509: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // xxo .oo xx.
    //      case 13510: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // oxo .oo xx.
    //      case 13511: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .xo .oo xx.
    //      case 13512: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // xoo .oo xx.
    //      case 13513: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo xx.
    //      case 13514: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .oo .oo xx.
    //      case 13515: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // x.o .oo xx.
    //      case 13516: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // o.o .oo xx.
    //      case 13517: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ..o .oo xx.
    //      case 13518: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xx. .oo xx.
    //      case 13519: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // ox. .oo xx.
    //      case 13520: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .x. .oo xx.
    //      case 13521: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xo. .oo xx.
    //      case 13522: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // oo. .oo xx.
    //      case 13523: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // .o. .oo xx.
    //      case 13524: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // x.. .oo xx.
    //      case 13525: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // o.. .oo xx.
    //      case 13526: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // ... .oo xx.
    //      case 13527: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o xx.
    //      case 13528: Assert::IsTrue(v == PositionValue(+  532                         )); break;  // oxx x.o xx.
    //      case 13529: Assert::IsTrue(v == PositionValue(+  593                         )); break;  // .xx x.o xx.
    //      case 13530: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.o xx.
    //      case 13531: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // oox x.o xx.
    //      case 13532: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // .ox x.o xx.
    //      case 13533: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.o xx.
    //      case 13534: Assert::IsTrue(v == PositionValue(+  331                         )); break;  // o.x x.o xx.
    //      case 13535: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // ..x x.o xx.
    //      case 13536: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.o xx.
    //      case 13537: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // oxo x.o xx.
    //      case 13538: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // .xo x.o xx.
    //      case 13539: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.o xx.
    //      case 13540: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o xx.
    //      case 13541: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .oo x.o xx.
    //      case 13542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.o xx.
    //      case 13543: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // o.o x.o xx.
    //      case 13544: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // ..o x.o xx.
    //      case 13545: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.o xx.
    //      case 13546: Assert::IsTrue(v == PositionValue(+  411                         )); break;  // ox. x.o xx.
    //      case 13547: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // .x. x.o xx.
    //      case 13548: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.o xx.
    //      case 13549: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // oo. x.o xx.
    //      case 13550: Assert::IsTrue(v == PositionValue(+  217                         )); break;  // .o. x.o xx.
    //      case 13551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.o xx.
    //      case 13552: Assert::IsTrue(v == PositionValue(+  288                         )); break;  // o.. x.o xx.
    //      case 13553: Assert::IsTrue(v == PositionValue(+  340                         )); break;  // ... x.o xx.
    //      case 13554: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o xx.
    //      case 13555: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // oxx o.o xx.
    //      case 13556: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // .xx o.o xx.
    //      case 13557: Assert::IsTrue(v == PositionValue(-   30                         )); break;  // xox o.o xx.
    //      case 13558: Assert::IsTrue(v == PositionValue(-  272                         )); break;  // oox o.o xx.
    //      case 13559: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // .ox o.o xx.
    //      case 13560: Assert::IsTrue(v == PositionValue(+  171                         )); break;  // x.x o.o xx.
    //      case 13561: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // o.x o.o xx.
    //      case 13562: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // ..x o.o xx.
    //      case 13563: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xxo o.o xx.
    //      case 13564: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oxo o.o xx.
    //      case 13565: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xo o.o xx.
    //      case 13566: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // xoo o.o xx.
    //      case 13567: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o xx.
    //      case 13568: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // .oo o.o xx.
    //      case 13569: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.o o.o xx.
    //      case 13570: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // o.o o.o xx.
    //      case 13571: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ..o o.o xx.
    //      case 13572: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // xx. o.o xx.
    //      case 13573: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // ox. o.o xx.
    //      case 13574: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .x. o.o xx.
    //      case 13575: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // xo. o.o xx.
    //      case 13576: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // oo. o.o xx.
    //      case 13577: Assert::IsTrue(v == PositionValue(-  116                         )); break;  // .o. o.o xx.
    //      case 13578: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // x.. o.o xx.
    //      case 13579: Assert::IsTrue(v == PositionValue(-   36                         )); break;  // o.. o.o xx.
    //      case 13580: Assert::IsTrue(v == PositionValue(+   85                         )); break;  // ... o.o xx.
    //      case 13581: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o xx.
    //      case 13582: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // oxx ..o xx.
    //      case 13583: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // .xx ..o xx.
    //      case 13584: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // xox ..o xx.
    //      case 13585: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // oox ..o xx.
    //      case 13586: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // .ox ..o xx.
    //      case 13587: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // x.x ..o xx.
    //      case 13588: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // o.x ..o xx.
    //      case 13589: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // ..x ..o xx.
    //      case 13590: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // xxo ..o xx.
    //      case 13591: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // oxo ..o xx.
    //      case 13592: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .xo ..o xx.
    //      case 13593: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // xoo ..o xx.
    //      case 13594: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o xx.
    //      case 13595: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // .oo ..o xx.
    //      case 13596: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.o ..o xx.
    //      case 13597: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.o ..o xx.
    //      case 13598: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..o ..o xx.
    //      case 13599: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // xx. ..o xx.
    //      case 13600: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // ox. ..o xx.
    //      case 13601: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .x. ..o xx.
    //      case 13602: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // xo. ..o xx.
    //      case 13603: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // oo. ..o xx.
    //      case 13604: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // .o. ..o xx.
    //      case 13605: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // x.. ..o xx.
    //      case 13606: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // o.. ..o xx.
    //      case 13607: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // ... ..o xx.
    //      case 13608: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. xx.
    //      case 13609: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. xx.
    //      case 13610: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. xx.
    //      case 13611: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. xx.
    //      case 13612: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xx. xx.
    //      case 13613: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xx. xx.
    //      case 13614: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. xx.
    //      case 13615: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xx. xx.
    //      case 13616: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xx. xx.
    //      case 13617: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. xx.
    //      case 13618: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xx. xx.
    //      case 13619: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xx. xx.
    //      case 13620: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. xx.
    //      case 13621: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. xx.
    //      case 13622: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .oo xx. xx.
    //      case 13623: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. xx.
    //      case 13624: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // o.o xx. xx.
    //      case 13625: Assert::IsTrue(v == PositionValue(+  642                         )); break;  // ..o xx. xx.
    //      case 13626: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. xx.
    //      case 13627: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xx. xx.
    //      case 13628: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xx. xx.
    //      case 13629: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. xx.
    //      case 13630: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // oo. xx. xx.
    //      case 13631: Assert::IsTrue(v == PositionValue(+  640                         )); break;  // .o. xx. xx.
    //      case 13632: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. xx.
    //      case 13633: Assert::IsTrue(v == PositionValue(+  642                         )); break;  // o.. xx. xx.
    //      case 13634: Assert::IsTrue(v == PositionValue(+  694                         )); break;  // ... xx. xx.
    //      case 13635: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. xx.
    //      case 13636: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ox. xx.
    //      case 13637: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. xx.
    //      case 13638: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. xx.
    //      case 13639: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ox. xx.
    //      case 13640: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ox. xx.
    //      case 13641: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. xx.
    //      case 13642: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ox. xx.
    //      case 13643: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ox. xx.
    //      case 13644: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. xx.
    //      case 13645: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo ox. xx.
    //      case 13646: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo ox. xx.
    //      case 13647: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // xoo ox. xx.
    //      case 13648: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. xx.
    //      case 13649: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .oo ox. xx.
    //      case 13650: Assert::IsTrue(v == PositionValue(+  430                         )); break;  // x.o ox. xx.
    //      case 13651: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // o.o ox. xx.
    //      case 13652: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // ..o ox. xx.
    //      case 13653: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. xx.
    //      case 13654: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. ox. xx.
    //      case 13655: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. ox. xx.
    //      case 13656: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // xo. ox. xx.
    //      case 13657: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // oo. ox. xx.
    //      case 13658: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .o. ox. xx.
    //      case 13659: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // x.. ox. xx.
    //      case 13660: Assert::IsTrue(v == PositionValue(+  231                         )); break;  // o.. ox. xx.
    //      case 13661: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // ... ox. xx.
    //      case 13662: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. xx.
    //      case 13663: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. xx.
    //      case 13664: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. xx.
    //      case 13665: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. xx.
    //      case 13666: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .x. xx.
    //      case 13667: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .x. xx.
    //      case 13668: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. xx.
    //      case 13669: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .x. xx.
    //      case 13670: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .x. xx.
    //      case 13671: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. xx.
    //      case 13672: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .x. xx.
    //      case 13673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .x. xx.
    //      case 13674: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // xoo .x. xx.
    //      case 13675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. xx.
    //      case 13676: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // .oo .x. xx.
    //      case 13677: Assert::IsTrue(v == PositionValue(+  475                         )); break;  // x.o .x. xx.
    //      case 13678: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // o.o .x. xx.
    //      case 13679: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // ..o .x. xx.
    //      case 13680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. xx.
    //      case 13681: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .x. xx.
    //      case 13682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .x. xx.
    //      case 13683: Assert::IsTrue(v == PositionValue(+  473                         )); break;  // xo. .x. xx.
    //      case 13684: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // oo. .x. xx.
    //      case 13685: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // .o. .x. xx.
    //      case 13686: Assert::IsTrue(v == PositionValue(+  527                         )); break;  // x.. .x. xx.
    //      case 13687: Assert::IsTrue(v == PositionValue(+  354                         )); break;  // o.. .x. xx.
    //      case 13688: Assert::IsTrue(v == PositionValue(+  397                         )); break;  // ... .x. xx.
    //      case 13689: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. xx.
    //      case 13690: Assert::IsTrue(v == PositionValue(+  442                         )); break;  // oxx xo. xx.
    //      case 13691: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // .xx xo. xx.
    //      case 13692: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xo. xx.
    //      case 13693: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oox xo. xx.
    //      case 13694: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // .ox xo. xx.
    //      case 13695: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xo. xx.
    //      case 13696: Assert::IsTrue(v == PositionValue(+  241                         )); break;  // o.x xo. xx.
    //      case 13697: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // ..x xo. xx.
    //      case 13698: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xo. xx.
    //      case 13699: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // oxo xo. xx.
    //      case 13700: Assert::IsTrue(v == PositionValue(+  339                         )); break;  // .xo xo. xx.
    //      case 13701: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xo. xx.
    //      case 13702: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. xx.
    //      case 13703: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // .oo xo. xx.
    //      case 13704: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xo. xx.
    //      case 13705: Assert::IsTrue(v == PositionValue(+   77                         )); break;  // o.o xo. xx.
    //      case 13706: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // ..o xo. xx.
    //      case 13707: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xo. xx.
    //      case 13708: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // ox. xo. xx.
    //      case 13709: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // .x. xo. xx.
    //      case 13710: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xo. xx.
    //      case 13711: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // oo. xo. xx.
    //      case 13712: Assert::IsTrue(v == PositionValue(+  214                         )); break;  // .o. xo. xx.
    //      case 13713: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xo. xx.
    //      case 13714: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // o.. xo. xx.
    //      case 13715: Assert::IsTrue(v == PositionValue(+  337                         )); break;  // ... xo. xx.
    //      case 13716: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. xx.
    //      case 13717: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // oxx oo. xx.
    //      case 13718: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .xx oo. xx.
    //      case 13719: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // xox oo. xx.
    //      case 13720: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // oox oo. xx.
    //      case 13721: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .ox oo. xx.
    //      case 13722: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.x oo. xx.
    //      case 13723: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.x oo. xx.
    //      case 13724: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // ..x oo. xx.
    //      case 13725: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xxo oo. xx.
    //      case 13726: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // oxo oo. xx.
    //      case 13727: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .xo oo. xx.
    //      case 13728: Assert::IsTrue(v == PositionValue(-  362                         )); break;  // xoo oo. xx.
    //      case 13729: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. xx.
    //      case 13730: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // .oo oo. xx.
    //      case 13731: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // x.o oo. xx.
    //      case 13732: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // o.o oo. xx.
    //      case 13733: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // ..o oo. xx.
    //      case 13734: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xx. oo. xx.
    //      case 13735: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ox. oo. xx.
    //      case 13736: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .x. oo. xx.
    //      case 13737: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xo. oo. xx.
    //      case 13738: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // oo. oo. xx.
    //      case 13739: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // .o. oo. xx.
    //      case 13740: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // x.. oo. xx.
    //      case 13741: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.. oo. xx.
    //      case 13742: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // ... oo. xx.
    //      case 13743: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. xx.
    //      case 13744: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // oxx .o. xx.
    //      case 13745: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // .xx .o. xx.
    //      case 13746: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // xox .o. xx.
    //      case 13747: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // oox .o. xx.
    //      case 13748: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // .ox .o. xx.
    //      case 13749: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.x .o. xx.
    //      case 13750: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // o.x .o. xx.
    //      case 13751: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // ..x .o. xx.
    //      case 13752: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // xxo .o. xx.
    //      case 13753: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // oxo .o. xx.
    //      case 13754: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // .xo .o. xx.
    //      case 13755: Assert::IsTrue(v == PositionValue(-  152                         )); break;  // xoo .o. xx.
    //      case 13756: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. xx.
    //      case 13757: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // .oo .o. xx.
    //      case 13758: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // x.o .o. xx.
    //      case 13759: Assert::IsTrue(v == PositionValue(-  124                         )); break;  // o.o .o. xx.
    //      case 13760: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // ..o .o. xx.
    //      case 13761: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // xx. .o. xx.
    //      case 13762: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // ox. .o. xx.
    //      case 13763: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // .x. .o. xx.
    //      case 13764: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // xo. .o. xx.
    //      case 13765: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // oo. .o. xx.
    //      case 13766: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // .o. .o. xx.
    //      case 13767: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.. .o. xx.
    //      case 13768: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // o.. .o. xx.
    //      case 13769: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // ... .o. xx.
    //      case 13770: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. xx.
    //      case 13771: Assert::IsTrue(v == PositionValue(+  577                         )); break;  // oxx x.. xx.
    //      case 13772: Assert::IsTrue(v == PositionValue(+  638                         )); break;  // .xx x.. xx.
    //      case 13773: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.. xx.
    //      case 13774: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // oox x.. xx.
    //      case 13775: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // .ox x.. xx.
    //      case 13776: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.. xx.
    //      case 13777: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // o.x x.. xx.
    //      case 13778: Assert::IsTrue(v == PositionValue(+  428                         )); break;  // ..x x.. xx.
    //      case 13779: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.. xx.
    //      case 13780: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // oxo x.. xx.
    //      case 13781: Assert::IsTrue(v == PositionValue(+  465                         )); break;  // .xo x.. xx.
    //      case 13782: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.. xx.
    //      case 13783: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. xx.
    //      case 13784: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // .oo x.. xx.
    //      case 13785: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.. xx.
    //      case 13786: Assert::IsTrue(v == PositionValue(+  290                         )); break;  // o.o x.. xx.
    //      case 13787: Assert::IsTrue(v == PositionValue(+  342                         )); break;  // ..o x.. xx.
    //      case 13788: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.. xx.
    //      case 13789: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // ox. x.. xx.
    //      case 13790: Assert::IsTrue(v == PositionValue(+  508                         )); break;  // .x. x.. xx.
    //      case 13791: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.. xx.
    //      case 13792: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oo. x.. xx.
    //      case 13793: Assert::IsTrue(v == PositionValue(+  340                         )); break;  // .o. x.. xx.
    //      case 13794: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.. xx.
    //      case 13795: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // o.. x.. xx.
    //      case 13796: Assert::IsTrue(v == PositionValue(+  385                         )); break;  // ... x.. xx.
    //      case 13797: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. xx.
    //      case 13798: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // oxx o.. xx.
    //      case 13799: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // .xx o.. xx.
    //      case 13800: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // xox o.. xx.
    //      case 13801: Assert::IsTrue(v == PositionValue(-  149                         )); break;  // oox o.. xx.
    //      case 13802: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // .ox o.. xx.
    //      case 13803: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // x.x o.. xx.
    //      case 13804: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // o.x o.. xx.
    //      case 13805: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // ..x o.. xx.
    //      case 13806: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xxo o.. xx.
    //      case 13807: Assert::IsTrue(v == PositionValue(+   11                         )); break;  // oxo o.. xx.
    //      case 13808: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // .xo o.. xx.
    //      case 13809: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // xoo o.. xx.
    //      case 13810: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. xx.
    //      case 13811: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .oo o.. xx.
    //      case 13812: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // x.o o.. xx.
    //      case 13813: Assert::IsTrue(v == PositionValue(-   34                         )); break;  // o.o o.. xx.
    //      case 13814: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // ..o o.. xx.
    //      case 13815: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // xx. o.. xx.
    //      case 13816: Assert::IsTrue(v == PositionValue(+   54                         )); break;  // ox. o.. xx.
    //      case 13817: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .x. o.. xx.
    //      case 13818: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // xo. o.. xx.
    //      case 13819: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oo. o.. xx.
    //      case 13820: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // .o. o.. xx.
    //      case 13821: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // x.. o.. xx.
    //      case 13822: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // o.. o.. xx.
    //      case 13823: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // ... o.. xx.
    //      case 13824: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... xx.
    //      case 13825: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // oxx ... xx.
    //      case 13826: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // .xx ... xx.
    //      case 13827: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // xox ... xx.
    //      case 13828: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // oox ... xx.
    //      case 13829: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .ox ... xx.
    //      case 13830: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // x.x ... xx.
    //      case 13831: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // o.x ... xx.
    //      case 13832: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // ..x ... xx.
    //      case 13833: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // xxo ... xx.
    //      case 13834: Assert::IsTrue(v == PositionValue(+  134                         )); break;  // oxo ... xx.
    //      case 13835: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // .xo ... xx.
    //      case 13836: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // xoo ... xx.
    //      case 13837: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... xx.
    //      case 13838: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .oo ... xx.
    //      case 13839: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // x.o ... xx.
    //      case 13840: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // o.o ... xx.
    //      case 13841: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // ..o ... xx.
    //      case 13842: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // xx. ... xx.
    //      case 13843: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // ox. ... xx.
    //      case 13844: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .x. ... xx.
    //      case 13845: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xo. ... xx.
    //      case 13846: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // oo. ... xx.
    //      case 13847: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .o. ... xx.
    //      case 13848: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // x.. ... xx.
    //      case 13849: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // o.. ... xx.
    //      case 13850: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // ... ... xx.
    //      case 13851: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx ox.
    //      case 13852: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx ox.
    //      case 13853: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx ox.
    //      case 13854: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx ox.
    //      case 13855: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx ox.
    //      case 13856: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx ox.
    //      case 13857: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx ox.
    //      case 13858: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx ox.
    //      case 13859: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx ox.
    //      case 13860: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx ox.
    //      case 13861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx ox.
    //      case 13862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx ox.
    //      case 13863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx ox.
    //      case 13864: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx ox.
    //      case 13865: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx ox.
    //      case 13866: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx ox.
    //      case 13867: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx ox.
    //      case 13868: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx ox.
    //      case 13869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx ox.
    //      case 13870: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx ox.
    //      case 13871: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx ox.
    //      case 13872: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx ox.
    //      case 13873: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx ox.
    //      case 13874: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx ox.
    //      case 13875: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx ox.
    //      case 13876: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx ox.
    //      case 13877: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx ox.
    //      case 13878: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx ox.
    //      case 13879: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxx ox.
    //      case 13880: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx ox.
    //      case 13881: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // xox oxx ox.
    //      case 13882: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxx ox.
    //      case 13883: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // .ox oxx ox.
    //      case 13884: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // x.x oxx ox.
    //      case 13885: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxx ox.
    //      case 13886: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // ..x oxx ox.
    //      case 13887: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx ox.
    //      case 13888: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxx ox.
    //      case 13889: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxx ox.
    //      case 13890: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // xoo oxx ox.
    //      case 13891: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx ox.
    //      case 13892: Assert::IsTrue(v == PositionValue(-   56                         )); break;  // .oo oxx ox.
    //      case 13893: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // x.o oxx ox.
    //      case 13894: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxx ox.
    //      case 13895: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ..o oxx ox.
    //      case 13896: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx ox.
    //      case 13897: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxx ox.
    //      case 13898: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxx ox.
    //      case 13899: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // xo. oxx ox.
    //      case 13900: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxx ox.
    //      case 13901: Assert::IsTrue(v == PositionValue(+   74                         )); break;  // .o. oxx ox.
    //      case 13902: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // x.. oxx ox.
    //      case 13903: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxx ox.
    //      case 13904: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // ... oxx ox.
    //      case 13905: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx ox.
    //      case 13906: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx ox.
    //      case 13907: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx ox.
    //      case 13908: Assert::IsTrue(v == PositionValue(+  631                         )); break;  // xox .xx ox.
    //      case 13909: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // oox .xx ox.
    //      case 13910: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .ox .xx ox.
    //      case 13911: Assert::IsTrue(v == PositionValue(+  685                         )); break;  // x.x .xx ox.
    //      case 13912: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // o.x .xx ox.
    //      case 13913: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // ..x .xx ox.
    //      case 13914: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx ox.
    //      case 13915: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xx ox.
    //      case 13916: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xx ox.
    //      case 13917: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // xoo .xx ox.
    //      case 13918: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx ox.
    //      case 13919: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .oo .xx ox.
    //      case 13920: Assert::IsTrue(v == PositionValue(+  434                         )); break;  // x.o .xx ox.
    //      case 13921: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // o.o .xx ox.
    //      case 13922: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // ..o .xx ox.
    //      case 13923: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx ox.
    //      case 13924: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xx ox.
    //      case 13925: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xx ox.
    //      case 13926: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // xo. .xx ox.
    //      case 13927: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // oo. .xx ox.
    //      case 13928: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .o. .xx ox.
    //      case 13929: Assert::IsTrue(v == PositionValue(+  477                         )); break;  // x.. .xx ox.
    //      case 13930: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // o.. .xx ox.
    //      case 13931: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // ... .xx ox.
    //      case 13932: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox ox.
    //      case 13933: Assert::IsTrue(v == PositionValue(+  401                         )); break;  // oxx xox ox.
    //      case 13934: Assert::IsTrue(v == PositionValue(+  540                         )); break;  // .xx xox ox.
    //      case 13935: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xox xox ox.
    //      case 13936: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // oox xox ox.
    //      case 13937: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // .ox xox ox.
    //      case 13938: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // x.x xox ox.
    //      case 13939: Assert::IsTrue(v == PositionValue(+  122                         )); break;  // o.x xox ox.
    //      case 13940: Assert::IsTrue(v == PositionValue(+  252                         )); break;  // ..x xox ox.
    //      case 13941: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xox ox.
    //      case 13942: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox ox.
    //      case 13943: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xox ox.
    //      case 13944: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xox ox.
    //      case 13945: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox ox.
    //      case 13946: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox ox.
    //      case 13947: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xox ox.
    //      case 13948: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox ox.
    //      case 13949: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xox ox.
    //      case 13950: Assert::IsTrue(v == PositionValue(+  522                         )); break;  // xx. xox ox.
    //      case 13951: Assert::IsTrue(v == PositionValue(+  184                         )); break;  // ox. xox ox.
    //      case 13952: Assert::IsTrue(v == PositionValue(+  314                         )); break;  // .x. xox ox.
    //      case 13953: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // xo. xox ox.
    //      case 13954: Assert::IsTrue(v == PositionValue(-  227                         )); break;  // oo. xox ox.
    //      case 13955: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .o. xox ox.
    //      case 13956: Assert::IsTrue(v == PositionValue(+  234                         )); break;  // x.. xox ox.
    //      case 13957: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // o.. xox ox.
    //      case 13958: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // ... xox ox.
    //      case 13959: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox ox.
    //      case 13960: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox ox.
    //      case 13961: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // .xx oox ox.
    //      case 13962: Assert::IsTrue(v == PositionValue(-  230                         )); break;  // xox oox ox.
    //      case 13963: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox ox.
    //      case 13964: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // .ox oox ox.
    //      case 13965: Assert::IsTrue(v == PositionValue(-   29                         )); break;  // x.x oox ox.
    //      case 13966: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox ox.
    //      case 13967: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ..x oox ox.
    //      case 13968: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oox ox.
    //      case 13969: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox ox.
    //      case 13970: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oox ox.
    //      case 13971: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox ox.
    //      case 13972: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox ox.
    //      case 13973: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox ox.
    //      case 13974: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oox ox.
    //      case 13975: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox ox.
    //      case 13976: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oox ox.
    //      case 13977: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // xx. oox ox.
    //      case 13978: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox ox.
    //      case 13979: Assert::IsTrue(v == PositionValue(-   97                         )); break;  // .x. oox ox.
    //      case 13980: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // xo. oox ox.
    //      case 13981: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox ox.
    //      case 13982: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .o. oox ox.
    //      case 13983: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // x.. oox ox.
    //      case 13984: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox ox.
    //      case 13985: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // ... oox ox.
    //      case 13986: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox ox.
    //      case 13987: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // oxx .ox ox.
    //      case 13988: Assert::IsTrue(v == PositionValue(+  339                         )); break;  // .xx .ox ox.
    //      case 13989: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // xox .ox ox.
    //      case 13990: Assert::IsTrue(v == PositionValue(-  202                         )); break;  // oox .ox ox.
    //      case 13991: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // .ox .ox ox.
    //      case 13992: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // x.x .ox ox.
    //      case 13993: Assert::IsTrue(v == PositionValue(-    1                         )); break;  // o.x .ox ox.
    //      case 13994: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // ..x .ox ox.
    //      case 13995: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .ox ox.
    //      case 13996: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox ox.
    //      case 13997: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .ox ox.
    //      case 13998: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox ox.
    //      case 13999: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox ox.
    //      case 14000: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox ox.
    //      case 14001: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .ox ox.
    //      case 14002: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox ox.
    //      case 14003: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .ox ox.
    //      case 14004: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // xx. .ox ox.
    //      case 14005: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // ox. .ox ox.
    //      case 14006: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // .x. .ox ox.
    //      case 14007: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // xo. .ox ox.
    //      case 14008: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // oo. .ox ox.
    //      case 14009: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .o. .ox ox.
    //      case 14010: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // x.. .ox ox.
    //      case 14011: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // o.. .ox ox.
    //      case 14012: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ... .ox ox.
    //      case 14013: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x ox.
    //      case 14014: Assert::IsTrue(v == PositionValue(+  614                         )); break;  // oxx x.x ox.
    //      case 14015: Assert::IsTrue(v == PositionValue(+  666                         )); break;  // .xx x.x ox.
    //      case 14016: Assert::IsTrue(v == PositionValue(+  454                         )); break;  // xox x.x ox.
    //      case 14017: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // oox x.x ox.
    //      case 14018: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // .ox x.x ox.
    //      case 14019: Assert::IsTrue(v == PositionValue(+  499                         )); break;  // x.x x.x ox.
    //      case 14020: Assert::IsTrue(v == PositionValue(+  335                         )); break;  // o.x x.x ox.
    //      case 14021: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // ..x x.x ox.
    //      case 14022: Assert::IsTrue(v == PositionValue(+  605                         )); break;  // xxo x.x ox.
    //      case 14023: Assert::IsTrue(v == PositionValue(+  363                         )); break;  // oxo x.x ox.
    //      case 14024: Assert::IsTrue(v == PositionValue(+  406                         )); break;  // .xo x.x ox.
    //      case 14025: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // xoo x.x ox.
    //      case 14026: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x ox.
    //      case 14027: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // .oo x.x ox.
    //      case 14028: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // x.o x.x ox.
    //      case 14029: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // o.o x.x ox.
    //      case 14030: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // ..o x.x ox.
    //      case 14031: Assert::IsTrue(v == PositionValue(+  657                         )); break;  // xx. x.x ox.
    //      case 14032: Assert::IsTrue(v == PositionValue(+  406                         )); break;  // ox. x.x ox.
    //      case 14033: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // .x. x.x ox.
    //      case 14034: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // xo. x.x ox.
    //      case 14035: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // oo. x.x ox.
    //      case 14036: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // .o. x.x ox.
    //      case 14037: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // x.. x.x ox.
    //      case 14038: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // o.. x.x ox.
    //      case 14039: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // ... x.x ox.
    //      case 14040: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x ox.
    //      case 14041: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.x ox.
    //      case 14042: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // .xx o.x ox.
    //      case 14043: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // xox o.x ox.
    //      case 14044: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.x ox.
    //      case 14045: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .ox o.x ox.
    //      case 14046: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // x.x o.x ox.
    //      case 14047: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.x ox.
    //      case 14048: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ..x o.x ox.
    //      case 14049: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // xxo o.x ox.
    //      case 14050: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.x ox.
    //      case 14051: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // .xo o.x ox.
    //      case 14052: Assert::IsTrue(v == PositionValue(-  199                         )); break;  // xoo o.x ox.
    //      case 14053: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x ox.
    //      case 14054: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // .oo o.x ox.
    //      case 14055: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // x.o o.x ox.
    //      case 14056: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.x ox.
    //      case 14057: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // ..o o.x ox.
    //      case 14058: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // xx. o.x ox.
    //      case 14059: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.x ox.
    //      case 14060: Assert::IsTrue(v == PositionValue(+  116                         )); break;  // .x. o.x ox.
    //      case 14061: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // xo. o.x ox.
    //      case 14062: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.x ox.
    //      case 14063: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .o. o.x ox.
    //      case 14064: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // x.. o.x ox.
    //      case 14065: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.x ox.
    //      case 14066: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // ... o.x ox.
    //      case 14067: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x ox.
    //      case 14068: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // oxx ..x ox.
    //      case 14069: Assert::IsTrue(v == PositionValue(+  465                         )); break;  // .xx ..x ox.
    //      case 14070: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xox ..x ox.
    //      case 14071: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // oox ..x ox.
    //      case 14072: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // .ox ..x ox.
    //      case 14073: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // x.x ..x ox.
    //      case 14074: Assert::IsTrue(v == PositionValue(+  212                         )); break;  // o.x ..x ox.
    //      case 14075: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // ..x ..x ox.
    //      case 14076: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // xxo ..x ox.
    //      case 14077: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // oxo ..x ox.
    //      case 14078: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // .xo ..x ox.
    //      case 14079: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // xoo ..x ox.
    //      case 14080: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x ox.
    //      case 14081: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // .oo ..x ox.
    //      case 14082: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // x.o ..x ox.
    //      case 14083: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // o.o ..x ox.
    //      case 14084: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // ..o ..x ox.
    //      case 14085: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // xx. ..x ox.
    //      case 14086: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // ox. ..x ox.
    //      case 14087: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // .x. ..x ox.
    //      case 14088: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xo. ..x ox.
    //      case 14089: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // oo. ..x ox.
    //      case 14090: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .o. ..x ox.
    //      case 14091: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // x.. ..x ox.
    //      case 14092: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // o.. ..x ox.
    //      case 14093: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ... ..x ox.
    //      case 14094: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo ox.
    //      case 14095: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo ox.
    //      case 14096: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo ox.
    //      case 14097: Assert::IsTrue(v == PositionValue(+  490                         )); break;  // xox xxo ox.
    //      case 14098: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // oox xxo ox.
    //      case 14099: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // .ox xxo ox.
    //      case 14100: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // x.x xxo ox.
    //      case 14101: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // o.x xxo ox.
    //      case 14102: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // ..x xxo ox.
    //      case 14103: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo ox.
    //      case 14104: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxo ox.
    //      case 14105: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxo ox.
    //      case 14106: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // xoo xxo ox.
    //      case 14107: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo ox.
    //      case 14108: Assert::IsTrue(v == PositionValue(-   56                         )); break;  // .oo xxo ox.
    //      case 14109: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // x.o xxo ox.
    //      case 14110: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // o.o xxo ox.
    //      case 14111: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ..o xxo ox.
    //      case 14112: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo ox.
    //      case 14113: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxo ox.
    //      case 14114: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxo ox.
    //      case 14115: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // xo. xxo ox.
    //      case 14116: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // oo. xxo ox.
    //      case 14117: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // .o. xxo ox.
    //      case 14118: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // x.. xxo ox.
    //      case 14119: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // o.. xxo ox.
    //      case 14120: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // ... xxo ox.
    //      case 14121: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo ox.
    //      case 14122: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxo ox.
    //      case 14123: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo ox.
    //      case 14124: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xox oxo ox.
    //      case 14125: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxo ox.
    //      case 14126: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // .ox oxo ox.
    //      case 14127: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // x.x oxo ox.
    //      case 14128: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxo ox.
    //      case 14129: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // ..x oxo ox.
    //      case 14130: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo ox.
    //      case 14131: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo ox.
    //      case 14132: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxo ox.
    //      case 14133: Assert::IsTrue(v == PositionValue(-  319                         )); break;  // xoo oxo ox.
    //      case 14134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo ox.
    //      case 14135: Assert::IsTrue(v == PositionValue(-  467                         )); break;  // .oo oxo ox.
    //      case 14136: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // x.o oxo ox.
    //      case 14137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo ox.
    //      case 14138: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ..o oxo ox.
    //      case 14139: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo ox.
    //      case 14140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxo ox.
    //      case 14141: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxo ox.
    //      case 14142: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // xo. oxo ox.
    //      case 14143: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxo ox.
    //      case 14144: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .o. oxo ox.
    //      case 14145: Assert::IsTrue(v == PositionValue(+   99                         )); break;  // x.. oxo ox.
    //      case 14146: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxo ox.
    //      case 14147: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ... oxo ox.
    //      case 14148: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo ox.
    //      case 14149: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo ox.
    //      case 14150: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo ox.
    //      case 14151: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // xox .xo ox.
    //      case 14152: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oox .xo ox.
    //      case 14153: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .ox .xo ox.
    //      case 14154: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // x.x .xo ox.
    //      case 14155: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // o.x .xo ox.
    //      case 14156: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ..x .xo ox.
    //      case 14157: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo ox.
    //      case 14158: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xo ox.
    //      case 14159: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xo ox.
    //      case 14160: Assert::IsTrue(v == PositionValue(-  118                         )); break;  // xoo .xo ox.
    //      case 14161: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo ox.
    //      case 14162: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // .oo .xo ox.
    //      case 14163: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // x.o .xo ox.
    //      case 14164: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.o .xo ox.
    //      case 14165: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ..o .xo ox.
    //      case 14166: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo ox.
    //      case 14167: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xo ox.
    //      case 14168: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xo ox.
    //      case 14169: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // xo. .xo ox.
    //      case 14170: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oo. .xo ox.
    //      case 14171: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .o. .xo ox.
    //      case 14172: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // x.. .xo ox.
    //      case 14173: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // o.. .xo ox.
    //      case 14174: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ... .xo ox.
    //      case 14175: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo ox.
    //      case 14176: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // oxx xoo ox.
    //      case 14177: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // .xx xoo ox.
    //      case 14178: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xox xoo ox.
    //      case 14179: Assert::IsTrue(v == PositionValue(-  490                         )); break;  // oox xoo ox.
    //      case 14180: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // .ox xoo ox.
    //      case 14181: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.x xoo ox.
    //      case 14182: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // o.x xoo ox.
    //      case 14183: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ..x xoo ox.
    //      case 14184: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xoo ox.
    //      case 14185: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo ox.
    //      case 14186: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo ox.
    //      case 14187: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo ox.
    //      case 14188: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo ox.
    //      case 14189: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo ox.
    //      case 14190: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xoo ox.
    //      case 14191: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo ox.
    //      case 14192: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo ox.
    //      case 14193: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // xx. xoo ox.
    //      case 14194: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // ox. xoo ox.
    //      case 14195: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .x. xoo ox.
    //      case 14196: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xo. xoo ox.
    //      case 14197: Assert::IsTrue(v == PositionValue(-  551                         )); break;  // oo. xoo ox.
    //      case 14198: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // .o. xoo ox.
    //      case 14199: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // x.. xoo ox.
    //      case 14200: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // o.. xoo ox.
    //      case 14201: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ... xoo ox.
    //      case 14202: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo ox.
    //      case 14203: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo ox.
    //      case 14204: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo ox.
    //      case 14205: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo ox.
    //      case 14206: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo ox.
    //      case 14207: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo ox.
    //      case 14208: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo ox.
    //      case 14209: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo ox.
    //      case 14210: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo ox.
    //      case 14211: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo ox.
    //      case 14212: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo ox.
    //      case 14213: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo ox.
    //      case 14214: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo ox.
    //      case 14215: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo ox.
    //      case 14216: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo ox.
    //      case 14217: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo ox.
    //      case 14218: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo ox.
    //      case 14219: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo ox.
    //      case 14220: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo ox.
    //      case 14221: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo ox.
    //      case 14222: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo ox.
    //      case 14223: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo ox.
    //      case 14224: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo ox.
    //      case 14225: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo ox.
    //      case 14226: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo ox.
    //      case 14227: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo ox.
    //      case 14228: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo ox.
    //      case 14229: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo ox.
    //      case 14230: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // oxx .oo ox.
    //      case 14231: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .xx .oo ox.
    //      case 14232: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // xox .oo ox.
    //      case 14233: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // oox .oo ox.
    //      case 14234: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // .ox .oo ox.
    //      case 14235: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // x.x .oo ox.
    //      case 14236: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // o.x .oo ox.
    //      case 14237: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ..x .oo ox.
    //      case 14238: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo ox.
    //      case 14239: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo ox.
    //      case 14240: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo ox.
    //      case 14241: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo ox.
    //      case 14242: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo ox.
    //      case 14243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo ox.
    //      case 14244: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo ox.
    //      case 14245: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo ox.
    //      case 14246: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo ox.
    //      case 14247: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // xx. .oo ox.
    //      case 14248: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // ox. .oo ox.
    //      case 14249: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .x. .oo ox.
    //      case 14250: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // xo. .oo ox.
    //      case 14251: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // oo. .oo ox.
    //      case 14252: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // .o. .oo ox.
    //      case 14253: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // x.. .oo ox.
    //      case 14254: Assert::IsTrue(v == PositionValue(-  395                         )); break;  // o.. .oo ox.
    //      case 14255: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // ... .oo ox.
    //      case 14256: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o ox.
    //      case 14257: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // oxx x.o ox.
    //      case 14258: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // .xx x.o ox.
    //      case 14259: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xox x.o ox.
    //      case 14260: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oox x.o ox.
    //      case 14261: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .ox x.o ox.
    //      case 14262: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // x.x x.o ox.
    //      case 14263: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // o.x x.o ox.
    //      case 14264: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ..x x.o ox.
    //      case 14265: Assert::IsTrue(v == PositionValue(+  272                         )); break;  // xxo x.o ox.
    //      case 14266: Assert::IsTrue(v == PositionValue(+   30                         )); break;  // oxo x.o ox.
    //      case 14267: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // .xo x.o ox.
    //      case 14268: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // xoo x.o ox.
    //      case 14269: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o ox.
    //      case 14270: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // .oo x.o ox.
    //      case 14271: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // x.o x.o ox.
    //      case 14272: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // o.o x.o ox.
    //      case 14273: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // ..o x.o ox.
    //      case 14274: Assert::IsTrue(v == PositionValue(+  411                         )); break;  // xx. x.o ox.
    //      case 14275: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // ox. x.o ox.
    //      case 14276: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // .x. x.o ox.
    //      case 14277: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // xo. x.o ox.
    //      case 14278: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // oo. x.o ox.
    //      case 14279: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .o. x.o ox.
    //      case 14280: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // x.. x.o ox.
    //      case 14281: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // o.. x.o ox.
    //      case 14282: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ... x.o ox.
    //      case 14283: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o ox.
    //      case 14284: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.o ox.
    //      case 14285: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xx o.o ox.
    //      case 14286: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // xox o.o ox.
    //      case 14287: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.o ox.
    //      case 14288: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // .ox o.o ox.
    //      case 14289: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // x.x o.o ox.
    //      case 14290: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.o ox.
    //      case 14291: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // ..x o.o ox.
    //      case 14292: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // xxo o.o ox.
    //      case 14293: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o ox.
    //      case 14294: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // .xo o.o ox.
    //      case 14295: Assert::IsTrue(v == PositionValue(-  532                         )); break;  // xoo o.o ox.
    //      case 14296: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o ox.
    //      case 14297: Assert::IsTrue(v == PositionValue(-  593                         )); break;  // .oo o.o ox.
    //      case 14298: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // x.o o.o ox.
    //      case 14299: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o ox.
    //      case 14300: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // ..o o.o ox.
    //      case 14301: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // xx. o.o ox.
    //      case 14302: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.o ox.
    //      case 14303: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .x. o.o ox.
    //      case 14304: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // xo. o.o ox.
    //      case 14305: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.o ox.
    //      case 14306: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // .o. o.o ox.
    //      case 14307: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // x.. o.o ox.
    //      case 14308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.o ox.
    //      case 14309: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // ... o.o ox.
    //      case 14310: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o ox.
    //      case 14311: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // oxx ..o ox.
    //      case 14312: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // .xx ..o ox.
    //      case 14313: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xox ..o ox.
    //      case 14314: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // oox ..o ox.
    //      case 14315: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .ox ..o ox.
    //      case 14316: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.x ..o ox.
    //      case 14317: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.x ..o ox.
    //      case 14318: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..x ..o ox.
    //      case 14319: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // xxo ..o ox.
    //      case 14320: Assert::IsTrue(v == PositionValue(-  171                         )); break;  // oxo ..o ox.
    //      case 14321: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // .xo ..o ox.
    //      case 14322: Assert::IsTrue(v == PositionValue(-  331                         )); break;  // xoo ..o ox.
    //      case 14323: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o ox.
    //      case 14324: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // .oo ..o ox.
    //      case 14325: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // x.o ..o ox.
    //      case 14326: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // o.o ..o ox.
    //      case 14327: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ..o ..o ox.
    //      case 14328: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // xx. ..o ox.
    //      case 14329: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // ox. ..o ox.
    //      case 14330: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .x. ..o ox.
    //      case 14331: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xo. ..o ox.
    //      case 14332: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // oo. ..o ox.
    //      case 14333: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // .o. ..o ox.
    //      case 14334: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.. ..o ox.
    //      case 14335: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.. ..o ox.
    //      case 14336: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ... ..o ox.
    //      case 14337: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. ox.
    //      case 14338: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. ox.
    //      case 14339: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. ox.
    //      case 14340: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // xox xx. ox.
    //      case 14341: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // oox xx. ox.
    //      case 14342: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // .ox xx. ox.
    //      case 14343: Assert::IsTrue(v == PositionValue(+  676                         )); break;  // x.x xx. ox.
    //      case 14344: Assert::IsTrue(v == PositionValue(+  425                         )); break;  // o.x xx. ox.
    //      case 14345: Assert::IsTrue(v == PositionValue(+  468                         )); break;  // ..x xx. ox.
    //      case 14346: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. ox.
    //      case 14347: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xx. ox.
    //      case 14348: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xx. ox.
    //      case 14349: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // xoo xx. ox.
    //      case 14350: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. ox.
    //      case 14351: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .oo xx. ox.
    //      case 14352: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // x.o xx. ox.
    //      case 14353: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // o.o xx. ox.
    //      case 14354: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // ..o xx. ox.
    //      case 14355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. ox.
    //      case 14356: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xx. ox.
    //      case 14357: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xx. ox.
    //      case 14358: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // xo. xx. ox.
    //      case 14359: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // oo. xx. ox.
    //      case 14360: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .o. xx. ox.
    //      case 14361: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // x.. xx. ox.
    //      case 14362: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // o.. xx. ox.
    //      case 14363: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // ... xx. ox.
    //      case 14364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. ox.
    //      case 14365: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ox. ox.
    //      case 14366: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. ox.
    //      case 14367: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // xox ox. ox.
    //      case 14368: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ox. ox.
    //      case 14369: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // .ox ox. ox.
    //      case 14370: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // x.x ox. ox.
    //      case 14371: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ox. ox.
    //      case 14372: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // ..x ox. ox.
    //      case 14373: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. ox.
    //      case 14374: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ox. ox.
    //      case 14375: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo ox. ox.
    //      case 14376: Assert::IsTrue(v == PositionValue(-  109                         )); break;  // xoo ox. ox.
    //      case 14377: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. ox.
    //      case 14378: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // .oo ox. ox.
    //      case 14379: Assert::IsTrue(v == PositionValue(+  101                         )); break;  // x.o ox. ox.
    //      case 14380: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ox. ox.
    //      case 14381: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ..o ox. ox.
    //      case 14382: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. ox.
    //      case 14383: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ox. ox.
    //      case 14384: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. ox. ox.
    //      case 14385: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // xo. ox. ox.
    //      case 14386: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ox. ox.
    //      case 14387: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // .o. ox. ox.
    //      case 14388: Assert::IsTrue(v == PositionValue(+  144                         )); break;  // x.. ox. ox.
    //      case 14389: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ox. ox.
    //      case 14390: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // ... ox. ox.
    //      case 14391: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. ox.
    //      case 14392: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. ox.
    //      case 14393: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. ox.
    //      case 14394: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // xox .x. ox.
    //      case 14395: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // oox .x. ox.
    //      case 14396: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // .ox .x. ox.
    //      case 14397: Assert::IsTrue(v == PositionValue(+  388                         )); break;  // x.x .x. ox.
    //      case 14398: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // o.x .x. ox.
    //      case 14399: Assert::IsTrue(v == PositionValue(+  258                         )); break;  // ..x .x. ox.
    //      case 14400: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. ox.
    //      case 14401: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .x. ox.
    //      case 14402: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .x. ox.
    //      case 14403: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // xoo .x. ox.
    //      case 14404: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. ox.
    //      case 14405: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // .oo .x. ox.
    //      case 14406: Assert::IsTrue(v == PositionValue(+  224                         )); break;  // x.o .x. ox.
    //      case 14407: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // o.o .x. ox.
    //      case 14408: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // ..o .x. ox.
    //      case 14409: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. ox.
    //      case 14410: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .x. ox.
    //      case 14411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .x. ox.
    //      case 14412: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // xo. .x. ox.
    //      case 14413: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // oo. .x. ox.
    //      case 14414: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // .o. .x. ox.
    //      case 14415: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // x.. .x. ox.
    //      case 14416: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // o.. .x. ox.
    //      case 14417: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // ... .x. ox.
    //      case 14418: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. ox.
    //      case 14419: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // oxx xo. ox.
    //      case 14420: Assert::IsTrue(v == PositionValue(+  252                         )); break;  // .xx xo. ox.
    //      case 14421: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xox xo. ox.
    //      case 14422: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // oox xo. ox.
    //      case 14423: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .ox xo. ox.
    //      case 14424: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // x.x xo. ox.
    //      case 14425: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // o.x xo. ox.
    //      case 14426: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // ..x xo. ox.
    //      case 14427: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xo. ox.
    //      case 14428: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. ox.
    //      case 14429: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xo. ox.
    //      case 14430: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xo. ox.
    //      case 14431: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. ox.
    //      case 14432: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. ox.
    //      case 14433: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xo. ox.
    //      case 14434: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. ox.
    //      case 14435: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xo. ox.
    //      case 14436: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // xx. xo. ox.
    //      case 14437: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // ox. xo. ox.
    //      case 14438: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // .x. xo. ox.
    //      case 14439: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // xo. xo. ox.
    //      case 14440: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // oo. xo. ox.
    //      case 14441: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .o. xo. ox.
    //      case 14442: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // x.. xo. ox.
    //      case 14443: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // o.. xo. ox.
    //      case 14444: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ... xo. ox.
    //      case 14445: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. ox.
    //      case 14446: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. ox.
    //      case 14447: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .xx oo. ox.
    //      case 14448: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // xox oo. ox.
    //      case 14449: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. ox.
    //      case 14450: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .ox oo. ox.
    //      case 14451: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // x.x oo. ox.
    //      case 14452: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. ox.
    //      case 14453: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // ..x oo. ox.
    //      case 14454: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oo. ox.
    //      case 14455: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. ox.
    //      case 14456: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oo. ox.
    //      case 14457: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. ox.
    //      case 14458: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. ox.
    //      case 14459: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. ox.
    //      case 14460: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oo. ox.
    //      case 14461: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. ox.
    //      case 14462: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oo. ox.
    //      case 14463: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // xx. oo. ox.
    //      case 14464: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. ox.
    //      case 14465: Assert::IsTrue(v == PositionValue(-  307                         )); break;  // .x. oo. ox.
    //      case 14466: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // xo. oo. ox.
    //      case 14467: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. ox.
    //      case 14468: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // .o. oo. ox.
    //      case 14469: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // x.. oo. ox.
    //      case 14470: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. ox.
    //      case 14471: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // ... oo. ox.
    //      case 14472: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. ox.
    //      case 14473: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // oxx .o. ox.
    //      case 14474: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // .xx .o. ox.
    //      case 14475: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xox .o. ox.
    //      case 14476: Assert::IsTrue(v == PositionValue(-  412                         )); break;  // oox .o. ox.
    //      case 14477: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // .ox .o. ox.
    //      case 14478: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // x.x .o. ox.
    //      case 14479: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // o.x .o. ox.
    //      case 14480: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ..x .o. ox.
    //      case 14481: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .o. ox.
    //      case 14482: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. ox.
    //      case 14483: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .o. ox.
    //      case 14484: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. ox.
    //      case 14485: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. ox.
    //      case 14486: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. ox.
    //      case 14487: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .o. ox.
    //      case 14488: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. ox.
    //      case 14489: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .o. ox.
    //      case 14490: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // xx. .o. ox.
    //      case 14491: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // ox. .o. ox.
    //      case 14492: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // .x. .o. ox.
    //      case 14493: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xo. .o. ox.
    //      case 14494: Assert::IsTrue(v == PositionValue(-  473                         )); break;  // oo. .o. ox.
    //      case 14495: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // .o. .o. ox.
    //      case 14496: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // x.. .o. ox.
    //      case 14497: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // o.. .o. ox.
    //      case 14498: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ... .o. ox.
    //      case 14499: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. ox.
    //      case 14500: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // oxx x.. ox.
    //      case 14501: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // .xx x.. ox.
    //      case 14502: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // xox x.. ox.
    //      case 14503: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // oox x.. ox.
    //      case 14504: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .ox x.. ox.
    //      case 14505: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // x.x x.. ox.
    //      case 14506: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // o.x x.. ox.
    //      case 14507: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // ..x x.. ox.
    //      case 14508: Assert::IsTrue(v == PositionValue(+  404                         )); break;  // xxo x.. ox.
    //      case 14509: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // oxo x.. ox.
    //      case 14510: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // .xo x.. ox.
    //      case 14511: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // xoo x.. ox.
    //      case 14512: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. ox.
    //      case 14513: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // .oo x.. ox.
    //      case 14514: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // x.o x.. ox.
    //      case 14515: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // o.o x.. ox.
    //      case 14516: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // ..o x.. ox.
    //      case 14517: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // xx. x.. ox.
    //      case 14518: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // ox. x.. ox.
    //      case 14519: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // .x. x.. ox.
    //      case 14520: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xo. x.. ox.
    //      case 14521: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // oo. x.. ox.
    //      case 14522: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .o. x.. ox.
    //      case 14523: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // x.. x.. ox.
    //      case 14524: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // o.. x.. ox.
    //      case 14525: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ... x.. ox.
    //      case 14526: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. ox.
    //      case 14527: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.. ox.
    //      case 14528: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .xx o.. ox.
    //      case 14529: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // xox o.. ox.
    //      case 14530: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.. ox.
    //      case 14531: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // .ox o.. ox.
    //      case 14532: Assert::IsTrue(v == PositionValue(-   35                         )); break;  // x.x o.. ox.
    //      case 14533: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.. ox.
    //      case 14534: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // ..x o.. ox.
    //      case 14535: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // xxo o.. ox.
    //      case 14536: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.. ox.
    //      case 14537: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // .xo o.. ox.
    //      case 14538: Assert::IsTrue(v == PositionValue(-  322                         )); break;  // xoo o.. ox.
    //      case 14539: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. ox.
    //      case 14540: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // .oo o.. ox.
    //      case 14541: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // x.o o.. ox.
    //      case 14542: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.. ox.
    //      case 14543: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ..o o.. ox.
    //      case 14544: Assert::IsTrue(v == PositionValue(+   54                         )); break;  // xx. o.. ox.
    //      case 14545: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.. ox.
    //      case 14546: Assert::IsTrue(v == PositionValue(-   85                         )); break;  // .x. o.. ox.
    //      case 14547: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xo. o.. ox.
    //      case 14548: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.. ox.
    //      case 14549: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .o. o.. ox.
    //      case 14550: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // x.. o.. ox.
    //      case 14551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.. ox.
    //      case 14552: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ... o.. ox.
    //      case 14553: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... ox.
    //      case 14554: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // oxx ... ox.
    //      case 14555: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // .xx ... ox.
    //      case 14556: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // xox ... ox.
    //      case 14557: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oox ... ox.
    //      case 14558: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .ox ... ox.
    //      case 14559: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // x.x ... ox.
    //      case 14560: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.x ... ox.
    //      case 14561: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ..x ... ox.
    //      case 14562: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // xxo ... ox.
    //      case 14563: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // oxo ... ox.
    //      case 14564: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // .xo ... ox.
    //      case 14565: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // xoo ... ox.
    //      case 14566: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... ox.
    //      case 14567: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .oo ... ox.
    //      case 14568: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // x.o ... ox.
    //      case 14569: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // o.o ... ox.
    //      case 14570: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // ..o ... ox.
    //      case 14571: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // xx. ... ox.
    //      case 14572: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // ox. ... ox.
    //      case 14573: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // .x. ... ox.
    //      case 14574: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xo. ... ox.
    //      case 14575: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // oo. ... ox.
    //      case 14576: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .o. ... ox.
    //      case 14577: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // x.. ... ox.
    //      case 14578: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.. ... ox.
    //      case 14579: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ... ... ox.
    //      case 14580: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx .x.
    //      case 14581: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx .x.
    //      case 14582: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx .x.
    //      case 14583: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx .x.
    //      case 14584: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx .x.
    //      case 14585: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx .x.
    //      case 14586: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx .x.
    //      case 14587: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx .x.
    //      case 14588: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx .x.
    //      case 14589: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx .x.
    //      case 14590: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx .x.
    //      case 14591: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx .x.
    //      case 14592: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx .x.
    //      case 14593: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx .x.
    //      case 14594: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx .x.
    //      case 14595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx .x.
    //      case 14596: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx .x.
    //      case 14597: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx .x.
    //      case 14598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx .x.
    //      case 14599: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx .x.
    //      case 14600: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx .x.
    //      case 14601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx .x.
    //      case 14602: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx .x.
    //      case 14603: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx .x.
    //      case 14604: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx .x.
    //      case 14605: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx .x.
    //      case 14606: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx .x.
    //      case 14607: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx .x.
    //      case 14608: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx .x.
    //      case 14609: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx .x.
    //      case 14610: Assert::IsTrue(v == PositionValue(+  551                         )); break;  // xox oxx .x.
    //      case 14611: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // oox oxx .x.
    //      case 14612: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .ox oxx .x.
    //      case 14613: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // x.x oxx .x.
    //      case 14614: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // o.x oxx .x.
    //      case 14615: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // ..x oxx .x.
    //      case 14616: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxx .x.
    //      case 14617: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oxx .x.
    //      case 14618: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxx .x.
    //      case 14619: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // xoo oxx .x.
    //      case 14620: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx .x.
    //      case 14621: Assert::IsTrue(v == PositionValue(+   74                         )); break;  // .oo oxx .x.
    //      case 14622: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // x.o oxx .x.
    //      case 14623: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // o.o oxx .x.
    //      case 14624: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // ..o oxx .x.
    //      case 14625: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxx .x.
    //      case 14626: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oxx .x.
    //      case 14627: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxx .x.
    //      case 14628: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // xo. oxx .x.
    //      case 14629: Assert::IsTrue(v == PositionValue(-   13                         )); break;  // oo. oxx .x.
    //      case 14630: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // .o. oxx .x.
    //      case 14631: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // x.. oxx .x.
    //      case 14632: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // o.. oxx .x.
    //      case 14633: Assert::IsTrue(v == PositionValue(+  336                         )); break;  // ... oxx .x.
    //      case 14634: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx .x.
    //      case 14635: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx .x.
    //      case 14636: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx .x.
    //      case 14637: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // xox .xx .x.
    //      case 14638: Assert::IsTrue(v == PositionValue(+  432                         )); break;  // oox .xx .x.
    //      case 14639: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // .ox .xx .x.
    //      case 14640: Assert::IsTrue(v == PositionValue(+  737                         )); break;  // x.x .xx .x.
    //      case 14641: Assert::IsTrue(v == PositionValue(+  564                         )); break;  // o.x .xx .x.
    //      case 14642: Assert::IsTrue(v == PositionValue(+  607                         )); break;  // ..x .xx .x.
    //      case 14643: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xx .x.
    //      case 14644: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xx .x.
    //      case 14645: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xx .x.
    //      case 14646: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // xoo .xx .x.
    //      case 14647: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx .x.
    //      case 14648: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // .oo .xx .x.
    //      case 14649: Assert::IsTrue(v == PositionValue(+  477                         )); break;  // x.o .xx .x.
    //      case 14650: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // o.o .xx .x.
    //      case 14651: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // ..o .xx .x.
    //      case 14652: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xx .x.
    //      case 14653: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xx .x.
    //      case 14654: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xx .x.
    //      case 14655: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // xo. .xx .x.
    //      case 14656: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // oo. .xx .x.
    //      case 14657: Assert::IsTrue(v == PositionValue(+  336                         )); break;  // .o. .xx .x.
    //      case 14658: Assert::IsTrue(v == PositionValue(+  520                         )); break;  // x.. .xx .x.
    //      case 14659: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // o.. .xx .x.
    //      case 14660: Assert::IsTrue(v == PositionValue(+  390                         )); break;  // ... .xx .x.
    //      case 14661: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox .x.
    //      case 14662: Assert::IsTrue(v == PositionValue(+  522                         )); break;  // oxx xox .x.
    //      case 14663: Assert::IsTrue(v == PositionValue(+  661                         )); break;  // .xx xox .x.
    //      case 14664: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // xox xox .x.
    //      case 14665: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // oox xox .x.
    //      case 14666: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .ox xox .x.
    //      case 14667: Assert::IsTrue(v == PositionValue(+  503                         )); break;  // x.x xox .x.
    //      case 14668: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // o.x xox .x.
    //      case 14669: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // ..x xox .x.
    //      case 14670: Assert::IsTrue(v == PositionValue(+  522                         )); break;  // xxo xox .x.
    //      case 14671: Assert::IsTrue(v == PositionValue(+  184                         )); break;  // oxo xox .x.
    //      case 14672: Assert::IsTrue(v == PositionValue(+  314                         )); break;  // .xo xox .x.
    //      case 14673: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // xoo xox .x.
    //      case 14674: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox .x.
    //      case 14675: Assert::IsTrue(v == PositionValue(-   97                         )); break;  // .oo xox .x.
    //      case 14676: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // x.o xox .x.
    //      case 14677: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // o.o xox .x.
    //      case 14678: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // ..o xox .x.
    //      case 14679: Assert::IsTrue(v == PositionValue(+  661                         )); break;  // xx. xox .x.
    //      case 14680: Assert::IsTrue(v == PositionValue(+  314                         )); break;  // ox. xox .x.
    //      case 14681: Assert::IsTrue(v == PositionValue(+  444                         )); break;  // .x. xox .x.
    //      case 14682: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xo. xox .x.
    //      case 14683: Assert::IsTrue(v == PositionValue(-   97                         )); break;  // oo. xox .x.
    //      case 14684: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // .o. xox .x.
    //      case 14685: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // x.. xox .x.
    //      case 14686: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // o.. xox .x.
    //      case 14687: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // ... xox .x.
    //      case 14688: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox .x.
    //      case 14689: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // oxx oox .x.
    //      case 14690: Assert::IsTrue(v == PositionValue(+  337                         )); break;  // .xx oox .x.
    //      case 14691: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // xox oox .x.
    //      case 14692: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // oox oox .x.
    //      case 14693: Assert::IsTrue(v == PositionValue(-   74                         )); break;  // .ox oox .x.
    //      case 14694: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.x oox .x.
    //      case 14695: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // o.x oox .x.
    //      case 14696: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // ..x oox .x.
    //      case 14697: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // xxo oox .x.
    //      case 14698: Assert::IsTrue(v == PositionValue(-  227                         )); break;  // oxo oox .x.
    //      case 14699: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .xo oox .x.
    //      case 14700: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // xoo oox .x.
    //      case 14701: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox .x.
    //      case 14702: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .oo oox .x.
    //      case 14703: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // x.o oox .x.
    //      case 14704: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // o.o oox .x.
    //      case 14705: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ..o oox .x.
    //      case 14706: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xx. oox .x.
    //      case 14707: Assert::IsTrue(v == PositionValue(-   97                         )); break;  // ox. oox .x.
    //      case 14708: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // .x. oox .x.
    //      case 14709: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xo. oox .x.
    //      case 14710: Assert::IsTrue(v == PositionValue(-  508                         )); break;  // oo. oox .x.
    //      case 14711: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // .o. oox .x.
    //      case 14712: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.. oox .x.
    //      case 14713: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // o.. oox .x.
    //      case 14714: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // ... oox .x.
    //      case 14715: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox .x.
    //      case 14716: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // oxx .ox .x.
    //      case 14717: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // .xx .ox .x.
    //      case 14718: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xox .ox .x.
    //      case 14719: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // oox .ox .x.
    //      case 14720: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // .ox .ox .x.
    //      case 14721: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // x.x .ox .x.
    //      case 14722: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // o.x .ox .x.
    //      case 14723: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // ..x .ox .x.
    //      case 14724: Assert::IsTrue(v == PositionValue(+  234                         )); break;  // xxo .ox .x.
    //      case 14725: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // oxo .ox .x.
    //      case 14726: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // .xo .ox .x.
    //      case 14727: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // xoo .ox .x.
    //      case 14728: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox .x.
    //      case 14729: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .oo .ox .x.
    //      case 14730: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // x.o .ox .x.
    //      case 14731: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // o.o .ox .x.
    //      case 14732: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ..o .ox .x.
    //      case 14733: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // xx. .ox .x.
    //      case 14734: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // ox. .ox .x.
    //      case 14735: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // .x. .ox .x.
    //      case 14736: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xo. .ox .x.
    //      case 14737: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // oo. .ox .x.
    //      case 14738: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // .o. .ox .x.
    //      case 14739: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // x.. .ox .x.
    //      case 14740: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // o.. .ox .x.
    //      case 14741: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // ... .ox .x.
    //      case 14742: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x .x.
    //      case 14743: Assert::IsTrue(v == PositionValue(+  657                         )); break;  // oxx x.x .x.
    //      case 14744: Assert::IsTrue(v == PositionValue(+  709                         )); break;  // .xx x.x .x.
    //      case 14745: Assert::IsTrue(v == PositionValue(+  506                         )); break;  // xox x.x .x.
    //      case 14746: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // oox x.x .x.
    //      case 14747: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // .ox x.x .x.
    //      case 14748: Assert::IsTrue(v == PositionValue(+  551                         )); break;  // x.x x.x .x.
    //      case 14749: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // o.x x.x .x.
    //      case 14750: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // ..x x.x .x.
    //      case 14751: Assert::IsTrue(v == PositionValue(+  657                         )); break;  // xxo x.x .x.
    //      case 14752: Assert::IsTrue(v == PositionValue(+  406                         )); break;  // oxo x.x .x.
    //      case 14753: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // .xo x.x .x.
    //      case 14754: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // xoo x.x .x.
    //      case 14755: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x .x.
    //      case 14756: Assert::IsTrue(v == PositionValue(+  116                         )); break;  // .oo x.x .x.
    //      case 14757: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // x.o x.x .x.
    //      case 14758: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // o.o x.x .x.
    //      case 14759: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // ..o x.x .x.
    //      case 14760: Assert::IsTrue(v == PositionValue(+  709                         )); break;  // xx. x.x .x.
    //      case 14761: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // ox. x.x .x.
    //      case 14762: Assert::IsTrue(v == PositionValue(+  492                         )); break;  // .x. x.x .x.
    //      case 14763: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // xo. x.x .x.
    //      case 14764: Assert::IsTrue(v == PositionValue(+  116                         )); break;  // oo. x.x .x.
    //      case 14765: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // .o. x.x .x.
    //      case 14766: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // x.. x.x .x.
    //      case 14767: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // o.. x.x .x.
    //      case 14768: Assert::IsTrue(v == PositionValue(+  291                         )); break;  // ... x.x .x.
    //      case 14769: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x .x.
    //      case 14770: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // oxx o.x .x.
    //      case 14771: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // .xx o.x .x.
    //      case 14772: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xox o.x .x.
    //      case 14773: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // oox o.x .x.
    //      case 14774: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .ox o.x .x.
    //      case 14775: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // x.x o.x .x.
    //      case 14776: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // o.x o.x .x.
    //      case 14777: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // ..x o.x .x.
    //      case 14778: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // xxo o.x .x.
    //      case 14779: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // oxo o.x .x.
    //      case 14780: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // .xo o.x .x.
    //      case 14781: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // xoo o.x .x.
    //      case 14782: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x .x.
    //      case 14783: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .oo o.x .x.
    //      case 14784: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.o o.x .x.
    //      case 14785: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // o.o o.x .x.
    //      case 14786: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ..o o.x .x.
    //      case 14787: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // xx. o.x .x.
    //      case 14788: Assert::IsTrue(v == PositionValue(+  116                         )); break;  // ox. o.x .x.
    //      case 14789: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // .x. o.x .x.
    //      case 14790: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // xo. o.x .x.
    //      case 14791: Assert::IsTrue(v == PositionValue(-  217                         )); break;  // oo. o.x .x.
    //      case 14792: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .o. o.x .x.
    //      case 14793: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // x.. o.x .x.
    //      case 14794: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // o.. o.x .x.
    //      case 14795: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ... o.x .x.
    //      case 14796: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x .x.
    //      case 14797: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // oxx ..x .x.
    //      case 14798: Assert::IsTrue(v == PositionValue(+  508                         )); break;  // .xx ..x .x.
    //      case 14799: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // xox ..x .x.
    //      case 14800: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // oox ..x .x.
    //      case 14801: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .ox ..x .x.
    //      case 14802: Assert::IsTrue(v == PositionValue(+  341                         )); break;  // x.x ..x .x.
    //      case 14803: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // o.x ..x .x.
    //      case 14804: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // ..x ..x .x.
    //      case 14805: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // xxo ..x .x.
    //      case 14806: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // oxo ..x .x.
    //      case 14807: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // .xo ..x .x.
    //      case 14808: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // xoo ..x .x.
    //      case 14809: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x .x.
    //      case 14810: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // .oo ..x .x.
    //      case 14811: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // x.o ..x .x.
    //      case 14812: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // o.o ..x .x.
    //      case 14813: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ..o ..x .x.
    //      case 14814: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // xx. ..x .x.
    //      case 14815: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // ox. ..x .x.
    //      case 14816: Assert::IsTrue(v == PositionValue(+  291                         )); break;  // .x. ..x .x.
    //      case 14817: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // xo. ..x .x.
    //      case 14818: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // oo. ..x .x.
    //      case 14819: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .o. ..x .x.
    //      case 14820: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // x.. ..x .x.
    //      case 14821: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // o.. ..x .x.
    //      case 14822: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // ... ..x .x.
    //      case 14823: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo .x.
    //      case 14824: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo .x.
    //      case 14825: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo .x.
    //      case 14826: Assert::IsTrue(v == PositionValue(+  551                         )); break;  // xox xxo .x.
    //      case 14827: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // oox xxo .x.
    //      case 14828: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // .ox xxo .x.
    //      case 14829: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // x.x xxo .x.
    //      case 14830: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // o.x xxo .x.
    //      case 14831: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // ..x xxo .x.
    //      case 14832: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo .x.
    //      case 14833: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxo .x.
    //      case 14834: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxo .x.
    //      case 14835: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // xoo xxo .x.
    //      case 14836: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo .x.
    //      case 14837: Assert::IsTrue(v == PositionValue(-   13                         )); break;  // .oo xxo .x.
    //      case 14838: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // x.o xxo .x.
    //      case 14839: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // o.o xxo .x.
    //      case 14840: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // ..o xxo .x.
    //      case 14841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo .x.
    //      case 14842: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxo .x.
    //      case 14843: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxo .x.
    //      case 14844: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // xo. xxo .x.
    //      case 14845: Assert::IsTrue(v == PositionValue(+   74                         )); break;  // oo. xxo .x.
    //      case 14846: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // .o. xxo .x.
    //      case 14847: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // x.. xxo .x.
    //      case 14848: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // o.. xxo .x.
    //      case 14849: Assert::IsTrue(v == PositionValue(+  336                         )); break;  // ... xxo .x.
    //      case 14850: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo .x.
    //      case 14851: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxo .x.
    //      case 14852: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo .x.
    //      case 14853: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // xox oxo .x.
    //      case 14854: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // oox oxo .x.
    //      case 14855: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .ox oxo .x.
    //      case 14856: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // x.x oxo .x.
    //      case 14857: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // o.x oxo .x.
    //      case 14858: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // ..x oxo .x.
    //      case 14859: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo oxo .x.
    //      case 14860: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo oxo .x.
    //      case 14861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo oxo .x.
    //      case 14862: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // xoo oxo .x.
    //      case 14863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo .x.
    //      case 14864: Assert::IsTrue(v == PositionValue(-  337                         )); break;  // .oo oxo .x.
    //      case 14865: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // x.o oxo .x.
    //      case 14866: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.o oxo .x.
    //      case 14867: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ..o oxo .x.
    //      case 14868: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. oxo .x.
    //      case 14869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. oxo .x.
    //      case 14870: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. oxo .x.
    //      case 14871: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xo. oxo .x.
    //      case 14872: Assert::IsTrue(v == PositionValue(-  337                         )); break;  // oo. oxo .x.
    //      case 14873: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // .o. oxo .x.
    //      case 14874: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // x.. oxo .x.
    //      case 14875: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.. oxo .x.
    //      case 14876: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // ... oxo .x.
    //      case 14877: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo .x.
    //      case 14878: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo .x.
    //      case 14879: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo .x.
    //      case 14880: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // xox .xo .x.
    //      case 14881: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // oox .xo .x.
    //      case 14882: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .ox .xo .x.
    //      case 14883: Assert::IsTrue(v == PositionValue(+  395                         )); break;  // x.x .xo .x.
    //      case 14884: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // o.x .xo .x.
    //      case 14885: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // ..x .xo .x.
    //      case 14886: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .xo .x.
    //      case 14887: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .xo .x.
    //      case 14888: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .xo .x.
    //      case 14889: Assert::IsTrue(v == PositionValue(-   75                         )); break;  // xoo .xo .x.
    //      case 14890: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo .x.
    //      case 14891: Assert::IsTrue(v == PositionValue(-  214                         )); break;  // .oo .xo .x.
    //      case 14892: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // x.o .xo .x.
    //      case 14893: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // o.o .xo .x.
    //      case 14894: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // ..o .xo .x.
    //      case 14895: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .xo .x.
    //      case 14896: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .xo .x.
    //      case 14897: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .xo .x.
    //      case 14898: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // xo. .xo .x.
    //      case 14899: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // oo. .xo .x.
    //      case 14900: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // .o. .xo .x.
    //      case 14901: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // x.. .xo .x.
    //      case 14902: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // o.. .xo .x.
    //      case 14903: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // ... .xo .x.
    //      case 14904: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo .x.
    //      case 14905: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // oxx xoo .x.
    //      case 14906: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .xx xoo .x.
    //      case 14907: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // xox xoo .x.
    //      case 14908: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // oox xoo .x.
    //      case 14909: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // .ox xoo .x.
    //      case 14910: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.x xoo .x.
    //      case 14911: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // o.x xoo .x.
    //      case 14912: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ..x xoo .x.
    //      case 14913: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // xxo xoo .x.
    //      case 14914: Assert::IsTrue(v == PositionValue(-  227                         )); break;  // oxo xoo .x.
    //      case 14915: Assert::IsTrue(v == PositionValue(-   97                         )); break;  // .xo xoo .x.
    //      case 14916: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // xoo xoo .x.
    //      case 14917: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo .x.
    //      case 14918: Assert::IsTrue(v == PositionValue(-  508                         )); break;  // .oo xoo .x.
    //      case 14919: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // x.o xoo .x.
    //      case 14920: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // o.o xoo .x.
    //      case 14921: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // ..o xoo .x.
    //      case 14922: Assert::IsTrue(v == PositionValue(+  337                         )); break;  // xx. xoo .x.
    //      case 14923: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ox. xoo .x.
    //      case 14924: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // .x. xoo .x.
    //      case 14925: Assert::IsTrue(v == PositionValue(-   74                         )); break;  // xo. xoo .x.
    //      case 14926: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // oo. xoo .x.
    //      case 14927: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // .o. xoo .x.
    //      case 14928: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // x.. xoo .x.
    //      case 14929: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // o.. xoo .x.
    //      case 14930: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // ... xoo .x.
    //      case 14931: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo .x.
    //      case 14932: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo .x.
    //      case 14933: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo .x.
    //      case 14934: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo .x.
    //      case 14935: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo .x.
    //      case 14936: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo .x.
    //      case 14937: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo .x.
    //      case 14938: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo .x.
    //      case 14939: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo .x.
    //      case 14940: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo .x.
    //      case 14941: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo .x.
    //      case 14942: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo .x.
    //      case 14943: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo .x.
    //      case 14944: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo .x.
    //      case 14945: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo .x.
    //      case 14946: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo .x.
    //      case 14947: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo .x.
    //      case 14948: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo .x.
    //      case 14949: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo .x.
    //      case 14950: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo .x.
    //      case 14951: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo .x.
    //      case 14952: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo .x.
    //      case 14953: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo .x.
    //      case 14954: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo .x.
    //      case 14955: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo .x.
    //      case 14956: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo .x.
    //      case 14957: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo .x.
    //      case 14958: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo .x.
    //      case 14959: Assert::IsTrue(v == PositionValue(-   99                         )); break;  // oxx .oo .x.
    //      case 14960: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .xx .oo .x.
    //      case 14961: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xox .oo .x.
    //      case 14962: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // oox .oo .x.
    //      case 14963: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .ox .oo .x.
    //      case 14964: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // x.x .oo .x.
    //      case 14965: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // o.x .oo .x.
    //      case 14966: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // ..x .oo .x.
    //      case 14967: Assert::IsTrue(v == PositionValue(-  186                         )); break;  // xxo .oo .x.
    //      case 14968: Assert::IsTrue(v == PositionValue(-  437                         )); break;  // oxo .oo .x.
    //      case 14969: Assert::IsTrue(v == PositionValue(-  307                         )); break;  // .xo .oo .x.
    //      case 14970: Assert::IsTrue(v == PositionValue(-  588                         )); break;  // xoo .oo .x.
    //      case 14971: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo .x.
    //      case 14972: Assert::IsTrue(v == PositionValue(-  640                         )); break;  // .oo .oo .x.
    //      case 14973: Assert::IsTrue(v == PositionValue(-  309                         )); break;  // x.o .oo .x.
    //      case 14974: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // o.o .oo .x.
    //      case 14975: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // ..o .oo .x.
    //      case 14976: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xx. .oo .x.
    //      case 14977: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // ox. .oo .x.
    //      case 14978: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .x. .oo .x.
    //      case 14979: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // xo. .oo .x.
    //      case 14980: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // oo. .oo .x.
    //      case 14981: Assert::IsTrue(v == PositionValue(-  336                         )); break;  // .o. .oo .x.
    //      case 14982: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // x.. .oo .x.
    //      case 14983: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // o.. .oo .x.
    //      case 14984: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // ... .oo .x.
    //      case 14985: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o .x.
    //      case 14986: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // oxx x.o .x.
    //      case 14987: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // .xx x.o .x.
    //      case 14988: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xox x.o .x.
    //      case 14989: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // oox x.o .x.
    //      case 14990: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .ox x.o .x.
    //      case 14991: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // x.x x.o .x.
    //      case 14992: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // o.x x.o .x.
    //      case 14993: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // ..x x.o .x.
    //      case 14994: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // xxo x.o .x.
    //      case 14995: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // oxo x.o .x.
    //      case 14996: Assert::IsTrue(v == PositionValue(+  116                         )); break;  // .xo x.o .x.
    //      case 14997: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // xoo x.o .x.
    //      case 14998: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o .x.
    //      case 14999: Assert::IsTrue(v == PositionValue(-  217                         )); break;  // .oo x.o .x.
    //      case 15000: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.o x.o .x.
    //      case 15001: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // o.o x.o .x.
    //      case 15002: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // ..o x.o .x.
    //      case 15003: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // xx. x.o .x.
    //      case 15004: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // ox. x.o .x.
    //      case 15005: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // .x. x.o .x.
    //      case 15006: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xo. x.o .x.
    //      case 15007: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oo. x.o .x.
    //      case 15008: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .o. x.o .x.
    //      case 15009: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // x.. x.o .x.
    //      case 15010: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // o.. x.o .x.
    //      case 15011: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ... x.o .x.
    //      case 15012: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o .x.
    //      case 15013: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // oxx o.o .x.
    //      case 15014: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .xx o.o .x.
    //      case 15015: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // xox o.o .x.
    //      case 15016: Assert::IsTrue(v == PositionValue(-  411                         )); break;  // oox o.o .x.
    //      case 15017: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // .ox o.o .x.
    //      case 15018: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.x o.o .x.
    //      case 15019: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // o.x o.o .x.
    //      case 15020: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ..x o.o .x.
    //      case 15021: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // xxo o.o .x.
    //      case 15022: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // oxo o.o .x.
    //      case 15023: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .xo o.o .x.
    //      case 15024: Assert::IsTrue(v == PositionValue(-  411                         )); break;  // xoo o.o .x.
    //      case 15025: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o .x.
    //      case 15026: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // .oo o.o .x.
    //      case 15027: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // x.o o.o .x.
    //      case 15028: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // o.o o.o .x.
    //      case 15029: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // ..o o.o .x.
    //      case 15030: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xx. o.o .x.
    //      case 15031: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ox. o.o .x.
    //      case 15032: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .x. o.o .x.
    //      case 15033: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // xo. o.o .x.
    //      case 15034: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // oo. o.o .x.
    //      case 15035: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // .o. o.o .x.
    //      case 15036: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.. o.o .x.
    //      case 15037: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // o.. o.o .x.
    //      case 15038: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ... o.o .x.
    //      case 15039: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o .x.
    //      case 15040: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oxx ..o .x.
    //      case 15041: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .xx ..o .x.
    //      case 15042: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // xox ..o .x.
    //      case 15043: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oox ..o .x.
    //      case 15044: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .ox ..o .x.
    //      case 15045: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.x ..o .x.
    //      case 15046: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x ..o .x.
    //      case 15047: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ..x ..o .x.
    //      case 15048: Assert::IsTrue(v == PositionValue(+   36                         )); break;  // xxo ..o .x.
    //      case 15049: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // oxo ..o .x.
    //      case 15050: Assert::IsTrue(v == PositionValue(-   85                         )); break;  // .xo ..o .x.
    //      case 15051: Assert::IsTrue(v == PositionValue(-  288                         )); break;  // xoo ..o .x.
    //      case 15052: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o .x.
    //      case 15053: Assert::IsTrue(v == PositionValue(-  340                         )); break;  // .oo ..o .x.
    //      case 15054: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // x.o ..o .x.
    //      case 15055: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // o.o ..o .x.
    //      case 15056: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ..o ..o .x.
    //      case 15057: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // xx. ..o .x.
    //      case 15058: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ox. ..o .x.
    //      case 15059: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .x. ..o .x.
    //      case 15060: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xo. ..o .x.
    //      case 15061: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oo. ..o .x.
    //      case 15062: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .o. ..o .x.
    //      case 15063: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.. ..o .x.
    //      case 15064: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.. ..o .x.
    //      case 15065: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... ..o .x.
    //      case 15066: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. .x.
    //      case 15067: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. .x.
    //      case 15068: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. .x.
    //      case 15069: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // xox xx. .x.
    //      case 15070: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // oox xx. .x.
    //      case 15071: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // .ox xx. .x.
    //      case 15072: Assert::IsTrue(v == PositionValue(+  737                         )); break;  // x.x xx. .x.
    //      case 15073: Assert::IsTrue(v == PositionValue(+  477                         )); break;  // o.x xx. .x.
    //      case 15074: Assert::IsTrue(v == PositionValue(+  520                         )); break;  // ..x xx. .x.
    //      case 15075: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. .x.
    //      case 15076: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xx. .x.
    //      case 15077: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xx. .x.
    //      case 15078: Assert::IsTrue(v == PositionValue(+  432                         )); break;  // xoo xx. .x.
    //      case 15079: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. .x.
    //      case 15080: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // .oo xx. .x.
    //      case 15081: Assert::IsTrue(v == PositionValue(+  564                         )); break;  // x.o xx. .x.
    //      case 15082: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // o.o xx. .x.
    //      case 15083: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // ..o xx. .x.
    //      case 15084: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. .x.
    //      case 15085: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xx. .x.
    //      case 15086: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xx. .x.
    //      case 15087: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // xo. xx. .x.
    //      case 15088: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // oo. xx. .x.
    //      case 15089: Assert::IsTrue(v == PositionValue(+  336                         )); break;  // .o. xx. .x.
    //      case 15090: Assert::IsTrue(v == PositionValue(+  607                         )); break;  // x.. xx. .x.
    //      case 15091: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // o.. xx. .x.
    //      case 15092: Assert::IsTrue(v == PositionValue(+  390                         )); break;  // ... xx. .x.
    //      case 15093: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. .x.
    //      case 15094: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ox. .x.
    //      case 15095: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. .x.
    //      case 15096: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // xox ox. .x.
    //      case 15097: Assert::IsTrue(v == PositionValue(-   75                         )); break;  // oox ox. .x.
    //      case 15098: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .ox ox. .x.
    //      case 15099: Assert::IsTrue(v == PositionValue(+  395                         )); break;  // x.x ox. .x.
    //      case 15100: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // o.x ox. .x.
    //      case 15101: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // ..x ox. .x.
    //      case 15102: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo ox. .x.
    //      case 15103: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo ox. .x.
    //      case 15104: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo ox. .x.
    //      case 15105: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // xoo ox. .x.
    //      case 15106: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. .x.
    //      case 15107: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // .oo ox. .x.
    //      case 15108: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // x.o ox. .x.
    //      case 15109: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // o.o ox. .x.
    //      case 15110: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ..o ox. .x.
    //      case 15111: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. ox. .x.
    //      case 15112: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. ox. .x.
    //      case 15113: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. ox. .x.
    //      case 15114: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // xo. ox. .x.
    //      case 15115: Assert::IsTrue(v == PositionValue(-  214                         )); break;  // oo. ox. .x.
    //      case 15116: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // .o. ox. .x.
    //      case 15117: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // x.. ox. .x.
    //      case 15118: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // o.. ox. .x.
    //      case 15119: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // ... ox. .x.
    //      case 15120: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. .x.
    //      case 15121: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. .x.
    //      case 15122: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. .x.
    //      case 15123: Assert::IsTrue(v == PositionValue(+  386                         )); break;  // xox .x. .x.
    //      case 15124: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // oox .x. .x.
    //      case 15125: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // .ox .x. .x.
    //      case 15126: Assert::IsTrue(v == PositionValue(+  440                         )); break;  // x.x .x. .x.
    //      case 15127: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // o.x .x. .x.
    //      case 15128: Assert::IsTrue(v == PositionValue(+  310                         )); break;  // ..x .x. .x.
    //      case 15129: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo .x. .x.
    //      case 15130: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo .x. .x.
    //      case 15131: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo .x. .x.
    //      case 15132: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // xoo .x. .x.
    //      case 15133: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. .x.
    //      case 15134: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // .oo .x. .x.
    //      case 15135: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // x.o .x. .x.
    //      case 15136: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // o.o .x. .x.
    //      case 15137: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // ..o .x. .x.
    //      case 15138: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. .x. .x.
    //      case 15139: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. .x. .x.
    //      case 15140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. .x. .x.
    //      case 15141: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // xo. .x. .x.
    //      case 15142: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // oo. .x. .x.
    //      case 15143: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // .o. .x. .x.
    //      case 15144: Assert::IsTrue(v == PositionValue(+  310                         )); break;  // x.. .x. .x.
    //      case 15145: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // o.. .x. .x.
    //      case 15146: Assert::IsTrue(v == PositionValue(+  180                         )); break;  // ... .x. .x.
    //      case 15147: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. .x.
    //      case 15148: Assert::IsTrue(v == PositionValue(+  234                         )); break;  // oxx xo. .x.
    //      case 15149: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // .xx xo. .x.
    //      case 15150: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xox xo. .x.
    //      case 15151: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // oox xo. .x.
    //      case 15152: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .ox xo. .x.
    //      case 15153: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // x.x xo. .x.
    //      case 15154: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // o.x xo. .x.
    //      case 15155: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ..x xo. .x.
    //      case 15156: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // xxo xo. .x.
    //      case 15157: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // oxo xo. .x.
    //      case 15158: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // .xo xo. .x.
    //      case 15159: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // xoo xo. .x.
    //      case 15160: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. .x.
    //      case 15161: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .oo xo. .x.
    //      case 15162: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // x.o xo. .x.
    //      case 15163: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // o.o xo. .x.
    //      case 15164: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ..o xo. .x.
    //      case 15165: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // xx. xo. .x.
    //      case 15166: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // ox. xo. .x.
    //      case 15167: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // .x. xo. .x.
    //      case 15168: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // xo. xo. .x.
    //      case 15169: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // oo. xo. .x.
    //      case 15170: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // .o. xo. .x.
    //      case 15171: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // x.. xo. .x.
    //      case 15172: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // o.. xo. .x.
    //      case 15173: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // ... xo. .x.
    //      case 15174: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. .x.
    //      case 15175: Assert::IsTrue(v == PositionValue(-  186                         )); break;  // oxx oo. .x.
    //      case 15176: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .xx oo. .x.
    //      case 15177: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xox oo. .x.
    //      case 15178: Assert::IsTrue(v == PositionValue(-  588                         )); break;  // oox oo. .x.
    //      case 15179: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .ox oo. .x.
    //      case 15180: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // x.x oo. .x.
    //      case 15181: Assert::IsTrue(v == PositionValue(-  309                         )); break;  // o.x oo. .x.
    //      case 15182: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // ..x oo. .x.
    //      case 15183: Assert::IsTrue(v == PositionValue(-   99                         )); break;  // xxo oo. .x.
    //      case 15184: Assert::IsTrue(v == PositionValue(-  437                         )); break;  // oxo oo. .x.
    //      case 15185: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .xo oo. .x.
    //      case 15186: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // xoo oo. .x.
    //      case 15187: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. .x.
    //      case 15188: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // .oo oo. .x.
    //      case 15189: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // x.o oo. .x.
    //      case 15190: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // o.o oo. .x.
    //      case 15191: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // ..o oo. .x.
    //      case 15192: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xx. oo. .x.
    //      case 15193: Assert::IsTrue(v == PositionValue(-  307                         )); break;  // ox. oo. .x.
    //      case 15194: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .x. oo. .x.
    //      case 15195: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // xo. oo. .x.
    //      case 15196: Assert::IsTrue(v == PositionValue(-  640                         )); break;  // oo. oo. .x.
    //      case 15197: Assert::IsTrue(v == PositionValue(-  336                         )); break;  // .o. oo. .x.
    //      case 15198: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // x.. oo. .x.
    //      case 15199: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // o.. oo. .x.
    //      case 15200: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // ... oo. .x.
    //      case 15201: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. .x.
    //      case 15202: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // oxx .o. .x.
    //      case 15203: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // .xx .o. .x.
    //      case 15204: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xox .o. .x.
    //      case 15205: Assert::IsTrue(v == PositionValue(-  291                         )); break;  // oox .o. .x.
    //      case 15206: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // .ox .o. .x.
    //      case 15207: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // x.x .o. .x.
    //      case 15208: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // o.x .o. .x.
    //      case 15209: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ..x .o. .x.
    //      case 15210: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // xxo .o. .x.
    //      case 15211: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // oxo .o. .x.
    //      case 15212: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // .xo .o. .x.
    //      case 15213: Assert::IsTrue(v == PositionValue(-  291                         )); break;  // xoo .o. .x.
    //      case 15214: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. .x.
    //      case 15215: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // .oo .o. .x.
    //      case 15216: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // x.o .o. .x.
    //      case 15217: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // o.o .o. .x.
    //      case 15218: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ..o .o. .x.
    //      case 15219: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // xx. .o. .x.
    //      case 15220: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ox. .o. .x.
    //      case 15221: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // .x. .o. .x.
    //      case 15222: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // xo. .o. .x.
    //      case 15223: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // oo. .o. .x.
    //      case 15224: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // .o. .o. .x.
    //      case 15225: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.. .o. .x.
    //      case 15226: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // o.. .o. .x.
    //      case 15227: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // ... .o. .x.
    //      case 15228: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. .x.
    //      case 15229: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // oxx x.. .x.
    //      case 15230: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .xx x.. .x.
    //      case 15231: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // xox x.. .x.
    //      case 15232: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // oox x.. .x.
    //      case 15233: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // .ox x.. .x.
    //      case 15234: Assert::IsTrue(v == PositionValue(+  341                         )); break;  // x.x x.. .x.
    //      case 15235: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // o.x x.. .x.
    //      case 15236: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // ..x x.. .x.
    //      case 15237: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // xxo x.. .x.
    //      case 15238: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // oxo x.. .x.
    //      case 15239: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // .xo x.. .x.
    //      case 15240: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // xoo x.. .x.
    //      case 15241: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. .x.
    //      case 15242: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // .oo x.. .x.
    //      case 15243: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // x.o x.. .x.
    //      case 15244: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // o.o x.. .x.
    //      case 15245: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ..o x.. .x.
    //      case 15246: Assert::IsTrue(v == PositionValue(+  508                         )); break;  // xx. x.. .x.
    //      case 15247: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // ox. x.. .x.
    //      case 15248: Assert::IsTrue(v == PositionValue(+  291                         )); break;  // .x. x.. .x.
    //      case 15249: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xo. x.. .x.
    //      case 15250: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // oo. x.. .x.
    //      case 15251: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .o. x.. .x.
    //      case 15252: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // x.. x.. .x.
    //      case 15253: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // o.. x.. .x.
    //      case 15254: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // ... x.. .x.
    //      case 15255: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. .x.
    //      case 15256: Assert::IsTrue(v == PositionValue(+   36                         )); break;  // oxx o.. .x.
    //      case 15257: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .xx o.. .x.
    //      case 15258: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // xox o.. .x.
    //      case 15259: Assert::IsTrue(v == PositionValue(-  288                         )); break;  // oox o.. .x.
    //      case 15260: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .ox o.. .x.
    //      case 15261: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.x o.. .x.
    //      case 15262: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // o.x o.. .x.
    //      case 15263: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ..x o.. .x.
    //      case 15264: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xxo o.. .x.
    //      case 15265: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // oxo o.. .x.
    //      case 15266: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .xo o.. .x.
    //      case 15267: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xoo o.. .x.
    //      case 15268: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. .x.
    //      case 15269: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .oo o.. .x.
    //      case 15270: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o o.. .x.
    //      case 15271: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // o.o o.. .x.
    //      case 15272: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ..o o.. .x.
    //      case 15273: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // xx. o.. .x.
    //      case 15274: Assert::IsTrue(v == PositionValue(-   85                         )); break;  // ox. o.. .x.
    //      case 15275: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .x. o.. .x.
    //      case 15276: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xo. o.. .x.
    //      case 15277: Assert::IsTrue(v == PositionValue(-  340                         )); break;  // oo. o.. .x.
    //      case 15278: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .o. o.. .x.
    //      case 15279: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.. o.. .x.
    //      case 15280: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // o.. o.. .x.
    //      case 15281: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... o.. .x.
    //      case 15282: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... .x.
    //      case 15283: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // oxx ... .x.
    //      case 15284: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .xx ... .x.
    //      case 15285: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // xox ... .x.
    //      case 15286: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // oox ... .x.
    //      case 15287: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .ox ... .x.
    //      case 15288: Assert::IsTrue(v == PositionValue(+  131                         )); break;  // x.x ... .x.
    //      case 15289: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // o.x ... .x.
    //      case 15290: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // ..x ... .x.
    //      case 15291: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // xxo ... .x.
    //      case 15292: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // oxo ... .x.
    //      case 15293: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // .xo ... .x.
    //      case 15294: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // xoo ... .x.
    //      case 15295: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... .x.
    //      case 15296: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .oo ... .x.
    //      case 15297: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // x.o ... .x.
    //      case 15298: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.o ... .x.
    //      case 15299: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ..o ... .x.
    //      case 15300: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // xx. ... .x.
    //      case 15301: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // ox. ... .x.
    //      case 15302: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .x. ... .x.
    //      case 15303: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // xo. ... .x.
    //      case 15304: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oo. ... .x.
    //      case 15305: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .o. ... .x.
    //      case 15306: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // x.. ... .x.
    //      case 15307: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.. ... .x.
    //      case 15308: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ... ... .x.
    //      case 15309: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx xo.
    //      case 15310: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx xo.
    //      case 15311: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx xo.
    //      case 15312: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx xo.
    //      case 15313: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx xo.
    //      case 15314: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx xo.
    //      case 15315: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx xo.
    //      case 15316: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx xo.
    //      case 15317: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx xo.
    //      case 15318: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx xo.
    //      case 15319: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx xo.
    //      case 15320: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx xo.
    //      case 15321: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx xo.
    //      case 15322: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx xo.
    //      case 15323: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx xo.
    //      case 15324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx xo.
    //      case 15325: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx xo.
    //      case 15326: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx xo.
    //      case 15327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx xo.
    //      case 15328: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx xo.
    //      case 15329: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx xo.
    //      case 15330: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx xo.
    //      case 15331: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx xo.
    //      case 15332: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx xo.
    //      case 15333: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx xo.
    //      case 15334: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx xo.
    //      case 15335: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx xo.
    //      case 15336: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx xo.
    //      case 15337: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx xo.
    //      case 15338: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx xo.
    //      case 15339: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx xo.
    //      case 15340: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxx xo.
    //      case 15341: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx xo.
    //      case 15342: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx xo.
    //      case 15343: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxx xo.
    //      case 15344: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx xo.
    //      case 15345: Assert::IsTrue(v == PositionValue(+  490                         )); break;  // xxo oxx xo.
    //      case 15346: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // oxo oxx xo.
    //      case 15347: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // .xo oxx xo.
    //      case 15348: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xoo oxx xo.
    //      case 15349: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx xo.
    //      case 15350: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // .oo oxx xo.
    //      case 15351: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // x.o oxx xo.
    //      case 15352: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.o oxx xo.
    //      case 15353: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // ..o oxx xo.
    //      case 15354: Assert::IsTrue(v == PositionValue(+  551                         )); break;  // xx. oxx xo.
    //      case 15355: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ox. oxx xo.
    //      case 15356: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // .x. oxx xo.
    //      case 15357: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // xo. oxx xo.
    //      case 15358: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // oo. oxx xo.
    //      case 15359: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .o. oxx xo.
    //      case 15360: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // x.. oxx xo.
    //      case 15361: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // o.. oxx xo.
    //      case 15362: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ... oxx xo.
    //      case 15363: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx xo.
    //      case 15364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx xo.
    //      case 15365: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx xo.
    //      case 15366: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx xo.
    //      case 15367: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx xo.
    //      case 15368: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx xo.
    //      case 15369: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx xo.
    //      case 15370: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx xo.
    //      case 15371: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx xo.
    //      case 15372: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // xxo .xx xo.
    //      case 15373: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // oxo .xx xo.
    //      case 15374: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // .xo .xx xo.
    //      case 15375: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // xoo .xx xo.
    //      case 15376: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx xo.
    //      case 15377: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .oo .xx xo.
    //      case 15378: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // x.o .xx xo.
    //      case 15379: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // o.o .xx xo.
    //      case 15380: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ..o .xx xo.
    //      case 15381: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // xx. .xx xo.
    //      case 15382: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // ox. .xx xo.
    //      case 15383: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // .x. .xx xo.
    //      case 15384: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // xo. .xx xo.
    //      case 15385: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // oo. .xx xo.
    //      case 15386: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .o. .xx xo.
    //      case 15387: Assert::IsTrue(v == PositionValue(+  395                         )); break;  // x.. .xx xo.
    //      case 15388: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // o.. .xx xo.
    //      case 15389: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // ... .xx xo.
    //      case 15390: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox xo.
    //      case 15391: Assert::IsTrue(v == PositionValue(+  319                         )); break;  // oxx xox xo.
    //      case 15392: Assert::IsTrue(v == PositionValue(+  467                         )); break;  // .xx xox xo.
    //      case 15393: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox xo.
    //      case 15394: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox xo.
    //      case 15395: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xox xo.
    //      case 15396: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox xo.
    //      case 15397: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // o.x xox xo.
    //      case 15398: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // ..x xox xo.
    //      case 15399: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xox xo.
    //      case 15400: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // oxo xox xo.
    //      case 15401: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // .xo xox xo.
    //      case 15402: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xox xo.
    //      case 15403: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox xo.
    //      case 15404: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox xo.
    //      case 15405: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xox xo.
    //      case 15406: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // o.o xox xo.
    //      case 15407: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ..o xox xo.
    //      case 15408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xox xo.
    //      case 15409: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // ox. xox xo.
    //      case 15410: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .x. xox xo.
    //      case 15411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xox xo.
    //      case 15412: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox xo.
    //      case 15413: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xox xo.
    //      case 15414: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xox xo.
    //      case 15415: Assert::IsTrue(v == PositionValue(-   99                         )); break;  // o.. xox xo.
    //      case 15416: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ... xox xo.
    //      case 15417: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox xo.
    //      case 15418: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // oxx oox xo.
    //      case 15419: Assert::IsTrue(v == PositionValue(+   56                         )); break;  // .xx oox xo.
    //      case 15420: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oox xo.
    //      case 15421: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox xo.
    //      case 15422: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oox xo.
    //      case 15423: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // x.x oox xo.
    //      case 15424: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // o.x oox xo.
    //      case 15425: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // ..x oox xo.
    //      case 15426: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // xxo oox xo.
    //      case 15427: Assert::IsTrue(v == PositionValue(-  490                         )); break;  // oxo oox xo.
    //      case 15428: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // .xo oox xo.
    //      case 15429: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox xo.
    //      case 15430: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox xo.
    //      case 15431: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox xo.
    //      case 15432: Assert::IsTrue(v == PositionValue(-  371                         )); break;  // x.o oox xo.
    //      case 15433: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // o.o oox xo.
    //      case 15434: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // ..o oox xo.
    //      case 15435: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // xx. oox xo.
    //      case 15436: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // ox. oox xo.
    //      case 15437: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // .x. oox xo.
    //      case 15438: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oox xo.
    //      case 15439: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox xo.
    //      case 15440: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oox xo.
    //      case 15441: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // x.. oox xo.
    //      case 15442: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // o.. oox xo.
    //      case 15443: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // ... oox xo.
    //      case 15444: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox xo.
    //      case 15445: Assert::IsTrue(v == PositionValue(+  118                         )); break;  // oxx .ox xo.
    //      case 15446: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // .xx .ox xo.
    //      case 15447: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .ox xo.
    //      case 15448: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox xo.
    //      case 15449: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .ox xo.
    //      case 15450: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.x .ox xo.
    //      case 15451: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // o.x .ox xo.
    //      case 15452: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // ..x .ox xo.
    //      case 15453: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xxo .ox xo.
    //      case 15454: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // oxo .ox xo.
    //      case 15455: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .xo .ox xo.
    //      case 15456: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox xo.
    //      case 15457: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox xo.
    //      case 15458: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox xo.
    //      case 15459: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // x.o .ox xo.
    //      case 15460: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // o.o .ox xo.
    //      case 15461: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ..o .ox xo.
    //      case 15462: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xx. .ox xo.
    //      case 15463: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // ox. .ox xo.
    //      case 15464: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .x. .ox xo.
    //      case 15465: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .ox xo.
    //      case 15466: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox xo.
    //      case 15467: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .ox xo.
    //      case 15468: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // x.. .ox xo.
    //      case 15469: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // o.. .ox xo.
    //      case 15470: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // ... .ox xo.
    //      case 15471: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x xo.
    //      case 15472: Assert::IsTrue(v == PositionValue(+  532                         )); break;  // oxx x.x xo.
    //      case 15473: Assert::IsTrue(v == PositionValue(+  593                         )); break;  // .xx x.x xo.
    //      case 15474: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x xo.
    //      case 15475: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // oox x.x xo.
    //      case 15476: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // .ox x.x xo.
    //      case 15477: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x xo.
    //      case 15478: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // o.x x.x xo.
    //      case 15479: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // ..x x.x xo.
    //      case 15480: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.x xo.
    //      case 15481: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // oxo x.x xo.
    //      case 15482: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // .xo x.x xo.
    //      case 15483: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.x xo.
    //      case 15484: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x xo.
    //      case 15485: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .oo x.x xo.
    //      case 15486: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.x xo.
    //      case 15487: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // o.o x.x xo.
    //      case 15488: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // ..o x.x xo.
    //      case 15489: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.x xo.
    //      case 15490: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // ox. x.x xo.
    //      case 15491: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // .x. x.x xo.
    //      case 15492: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.x xo.
    //      case 15493: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // oo. x.x xo.
    //      case 15494: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .o. x.x xo.
    //      case 15495: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.x xo.
    //      case 15496: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // o.. x.x xo.
    //      case 15497: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // ... x.x xo.
    //      case 15498: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x xo.
    //      case 15499: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // oxx o.x xo.
    //      case 15500: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // .xx o.x xo.
    //      case 15501: Assert::IsTrue(v == PositionValue(-   30                         )); break;  // xox o.x xo.
    //      case 15502: Assert::IsTrue(v == PositionValue(-  272                         )); break;  // oox o.x xo.
    //      case 15503: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // .ox o.x xo.
    //      case 15504: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // x.x o.x xo.
    //      case 15505: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // o.x o.x xo.
    //      case 15506: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // ..x o.x xo.
    //      case 15507: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xxo o.x xo.
    //      case 15508: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oxo o.x xo.
    //      case 15509: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xo o.x xo.
    //      case 15510: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // xoo o.x xo.
    //      case 15511: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x xo.
    //      case 15512: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // .oo o.x xo.
    //      case 15513: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // x.o o.x xo.
    //      case 15514: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // o.o o.x xo.
    //      case 15515: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // ..o o.x xo.
    //      case 15516: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xx. o.x xo.
    //      case 15517: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // ox. o.x xo.
    //      case 15518: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .x. o.x xo.
    //      case 15519: Assert::IsTrue(v == PositionValue(-  160                         )); break;  // xo. o.x xo.
    //      case 15520: Assert::IsTrue(v == PositionValue(-  411                         )); break;  // oo. o.x xo.
    //      case 15521: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // .o. o.x xo.
    //      case 15522: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // x.. o.x xo.
    //      case 15523: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // o.. o.x xo.
    //      case 15524: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // ... o.x xo.
    //      case 15525: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x xo.
    //      case 15526: Assert::IsTrue(v == PositionValue(+  331                         )); break;  // oxx ..x xo.
    //      case 15527: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // .xx ..x xo.
    //      case 15528: Assert::IsTrue(v == PositionValue(+  171                         )); break;  // xox ..x xo.
    //      case 15529: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // oox ..x xo.
    //      case 15530: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // .ox ..x xo.
    //      case 15531: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // x.x ..x xo.
    //      case 15532: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // o.x ..x xo.
    //      case 15533: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // ..x ..x xo.
    //      case 15534: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // xxo ..x xo.
    //      case 15535: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // oxo ..x xo.
    //      case 15536: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .xo ..x xo.
    //      case 15537: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xoo ..x xo.
    //      case 15538: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x xo.
    //      case 15539: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // .oo ..x xo.
    //      case 15540: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.o ..x xo.
    //      case 15541: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.o ..x xo.
    //      case 15542: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..o ..x xo.
    //      case 15543: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // xx. ..x xo.
    //      case 15544: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // ox. ..x xo.
    //      case 15545: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // .x. ..x xo.
    //      case 15546: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xo. ..x xo.
    //      case 15547: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // oo. ..x xo.
    //      case 15548: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .o. ..x xo.
    //      case 15549: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.. ..x xo.
    //      case 15550: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.. ..x xo.
    //      case 15551: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ... ..x xo.
    //      case 15552: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo xo.
    //      case 15553: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo xo.
    //      case 15554: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo xo.
    //      case 15555: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo xo.
    //      case 15556: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxo xo.
    //      case 15557: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxo xo.
    //      case 15558: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo xo.
    //      case 15559: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxo xo.
    //      case 15560: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxo xo.
    //      case 15561: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo xo.
    //      case 15562: Assert::IsTrue(v == PositionValue(+  230                         )); break;  // oxo xxo xo.
    //      case 15563: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // .xo xxo xo.
    //      case 15564: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo xo.
    //      case 15565: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo xo.
    //      case 15566: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // .oo xxo xo.
    //      case 15567: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo xo.
    //      case 15568: Assert::IsTrue(v == PositionValue(+   29                         )); break;  // o.o xxo xo.
    //      case 15569: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // ..o xxo xo.
    //      case 15570: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo xo.
    //      case 15571: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // ox. xxo xo.
    //      case 15572: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .x. xxo xo.
    //      case 15573: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo xo.
    //      case 15574: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // oo. xxo xo.
    //      case 15575: Assert::IsTrue(v == PositionValue(+   97                         )); break;  // .o. xxo xo.
    //      case 15576: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo xo.
    //      case 15577: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // o.. xxo xo.
    //      case 15578: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // ... xxo xo.
    //      case 15579: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo xo.
    //      case 15580: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxo xo.
    //      case 15581: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo xo.
    //      case 15582: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo xo.
    //      case 15583: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxo xo.
    //      case 15584: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxo xo.
    //      case 15585: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo xo.
    //      case 15586: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxo xo.
    //      case 15587: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxo xo.
    //      case 15588: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // xxo oxo xo.
    //      case 15589: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oxo oxo xo.
    //      case 15590: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // .xo oxo xo.
    //      case 15591: Assert::IsTrue(v == PositionValue(-  401                         )); break;  // xoo oxo xo.
    //      case 15592: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo xo.
    //      case 15593: Assert::IsTrue(v == PositionValue(-  540                         )); break;  // .oo oxo xo.
    //      case 15594: Assert::IsTrue(v == PositionValue(-  122                         )); break;  // x.o oxo xo.
    //      case 15595: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // o.o oxo xo.
    //      case 15596: Assert::IsTrue(v == PositionValue(-  252                         )); break;  // ..o oxo xo.
    //      case 15597: Assert::IsTrue(v == PositionValue(+  227                         )); break;  // xx. oxo xo.
    //      case 15598: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // ox. oxo xo.
    //      case 15599: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .x. oxo xo.
    //      case 15600: Assert::IsTrue(v == PositionValue(-  184                         )); break;  // xo. oxo xo.
    //      case 15601: Assert::IsTrue(v == PositionValue(-  522                         )); break;  // oo. oxo xo.
    //      case 15602: Assert::IsTrue(v == PositionValue(-  314                         )); break;  // .o. oxo xo.
    //      case 15603: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // x.. oxo xo.
    //      case 15604: Assert::IsTrue(v == PositionValue(-  234                         )); break;  // o.. oxo xo.
    //      case 15605: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // ... oxo xo.
    //      case 15606: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo xo.
    //      case 15607: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo xo.
    //      case 15608: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo xo.
    //      case 15609: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo xo.
    //      case 15610: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xo xo.
    //      case 15611: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xo xo.
    //      case 15612: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo xo.
    //      case 15613: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xo xo.
    //      case 15614: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xo xo.
    //      case 15615: Assert::IsTrue(v == PositionValue(+  202                         )); break;  // xxo .xo xo.
    //      case 15616: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // oxo .xo xo.
    //      case 15617: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // .xo .xo xo.
    //      case 15618: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // xoo .xo xo.
    //      case 15619: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo xo.
    //      case 15620: Assert::IsTrue(v == PositionValue(-  339                         )); break;  // .oo .xo xo.
    //      case 15621: Assert::IsTrue(v == PositionValue(+    1                         )); break;  // x.o .xo xo.
    //      case 15622: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // o.o .xo xo.
    //      case 15623: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // ..o .xo xo.
    //      case 15624: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // xx. .xo xo.
    //      case 15625: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // ox. .xo xo.
    //      case 15626: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .x. .xo xo.
    //      case 15627: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // xo. .xo xo.
    //      case 15628: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // oo. .xo xo.
    //      case 15629: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // .o. .xo xo.
    //      case 15630: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // x.. .xo xo.
    //      case 15631: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // o.. .xo xo.
    //      case 15632: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // ... .xo xo.
    //      case 15633: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo xo.
    //      case 15634: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // oxx xoo xo.
    //      case 15635: Assert::IsTrue(v == PositionValue(+   56                         )); break;  // .xx xoo xo.
    //      case 15636: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xoo xo.
    //      case 15637: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo xo.
    //      case 15638: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xoo xo.
    //      case 15639: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xoo xo.
    //      case 15640: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // o.x xoo xo.
    //      case 15641: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // ..x xoo xo.
    //      case 15642: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xoo xo.
    //      case 15643: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // oxo xoo xo.
    //      case 15644: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // .xo xoo xo.
    //      case 15645: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xoo xo.
    //      case 15646: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo xo.
    //      case 15647: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo xo.
    //      case 15648: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xoo xo.
    //      case 15649: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // o.o xoo xo.
    //      case 15650: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // ..o xoo xo.
    //      case 15651: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xoo xo.
    //      case 15652: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ox. xoo xo.
    //      case 15653: Assert::IsTrue(v == PositionValue(-   74                         )); break;  // .x. xoo xo.
    //      case 15654: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xoo xo.
    //      case 15655: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo xo.
    //      case 15656: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xoo xo.
    //      case 15657: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xoo xo.
    //      case 15658: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // o.. xoo xo.
    //      case 15659: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // ... xoo xo.
    //      case 15660: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo xo.
    //      case 15661: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo xo.
    //      case 15662: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo xo.
    //      case 15663: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo xo.
    //      case 15664: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo xo.
    //      case 15665: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo xo.
    //      case 15666: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo xo.
    //      case 15667: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo xo.
    //      case 15668: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo xo.
    //      case 15669: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo xo.
    //      case 15670: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo xo.
    //      case 15671: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo xo.
    //      case 15672: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo xo.
    //      case 15673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo xo.
    //      case 15674: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo xo.
    //      case 15675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo xo.
    //      case 15676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo xo.
    //      case 15677: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo xo.
    //      case 15678: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo xo.
    //      case 15679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo xo.
    //      case 15680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo xo.
    //      case 15681: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo xo.
    //      case 15682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo xo.
    //      case 15683: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo xo.
    //      case 15684: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo xo.
    //      case 15685: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo xo.
    //      case 15686: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo xo.
    //      case 15687: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo xo.
    //      case 15688: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // oxx .oo xo.
    //      case 15689: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .xx .oo xo.
    //      case 15690: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .oo xo.
    //      case 15691: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo xo.
    //      case 15692: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .oo xo.
    //      case 15693: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // x.x .oo xo.
    //      case 15694: Assert::IsTrue(v == PositionValue(-  434                         )); break;  // o.x .oo xo.
    //      case 15695: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // ..x .oo xo.
    //      case 15696: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // xxo .oo xo.
    //      case 15697: Assert::IsTrue(v == PositionValue(-  631                         )); break;  // oxo .oo xo.
    //      case 15698: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .xo .oo xo.
    //      case 15699: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo xo.
    //      case 15700: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo xo.
    //      case 15701: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo xo.
    //      case 15702: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // x.o .oo xo.
    //      case 15703: Assert::IsTrue(v == PositionValue(-  685                         )); break;  // o.o .oo xo.
    //      case 15704: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // ..o .oo xo.
    //      case 15705: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xx. .oo xo.
    //      case 15706: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // ox. .oo xo.
    //      case 15707: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .x. .oo xo.
    //      case 15708: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .oo xo.
    //      case 15709: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo xo.
    //      case 15710: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .oo xo.
    //      case 15711: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // x.. .oo xo.
    //      case 15712: Assert::IsTrue(v == PositionValue(-  477                         )); break;  // o.. .oo xo.
    //      case 15713: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // ... .oo xo.
    //      case 15714: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o xo.
    //      case 15715: Assert::IsTrue(v == PositionValue(+  199                         )); break;  // oxx x.o xo.
    //      case 15716: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // .xx x.o xo.
    //      case 15717: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.o xo.
    //      case 15718: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // oox x.o xo.
    //      case 15719: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // .ox x.o xo.
    //      case 15720: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.o xo.
    //      case 15721: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // o.x x.o xo.
    //      case 15722: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // ..x x.o xo.
    //      case 15723: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.o xo.
    //      case 15724: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // oxo x.o xo.
    //      case 15725: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xo x.o xo.
    //      case 15726: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.o xo.
    //      case 15727: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o xo.
    //      case 15728: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // .oo x.o xo.
    //      case 15729: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.o xo.
    //      case 15730: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // o.o x.o xo.
    //      case 15731: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // ..o x.o xo.
    //      case 15732: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.o xo.
    //      case 15733: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // ox. x.o xo.
    //      case 15734: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .x. x.o xo.
    //      case 15735: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.o xo.
    //      case 15736: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // oo. x.o xo.
    //      case 15737: Assert::IsTrue(v == PositionValue(-  116                         )); break;  // .o. x.o xo.
    //      case 15738: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.o xo.
    //      case 15739: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // o.. x.o xo.
    //      case 15740: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // ... x.o xo.
    //      case 15741: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o xo.
    //      case 15742: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // oxx o.o xo.
    //      case 15743: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // .xx o.o xo.
    //      case 15744: Assert::IsTrue(v == PositionValue(-  363                         )); break;  // xox o.o xo.
    //      case 15745: Assert::IsTrue(v == PositionValue(-  605                         )); break;  // oox o.o xo.
    //      case 15746: Assert::IsTrue(v == PositionValue(-  406                         )); break;  // .ox o.o xo.
    //      case 15747: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // x.x o.o xo.
    //      case 15748: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // o.x o.o xo.
    //      case 15749: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // ..x o.o xo.
    //      case 15750: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // xxo o.o xo.
    //      case 15751: Assert::IsTrue(v == PositionValue(-  454                         )); break;  // oxo o.o xo.
    //      case 15752: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // .xo o.o xo.
    //      case 15753: Assert::IsTrue(v == PositionValue(-  614                         )); break;  // xoo o.o xo.
    //      case 15754: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o xo.
    //      case 15755: Assert::IsTrue(v == PositionValue(-  666                         )); break;  // .oo o.o xo.
    //      case 15756: Assert::IsTrue(v == PositionValue(-  335                         )); break;  // x.o o.o xo.
    //      case 15757: Assert::IsTrue(v == PositionValue(-  499                         )); break;  // o.o o.o xo.
    //      case 15758: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // ..o o.o xo.
    //      case 15759: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // xx. o.o xo.
    //      case 15760: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // ox. o.o xo.
    //      case 15761: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // .x. o.o xo.
    //      case 15762: Assert::IsTrue(v == PositionValue(-  406                         )); break;  // xo. o.o xo.
    //      case 15763: Assert::IsTrue(v == PositionValue(-  657                         )); break;  // oo. o.o xo.
    //      case 15764: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // .o. o.o xo.
    //      case 15765: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // x.. o.o xo.
    //      case 15766: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // o.. o.o xo.
    //      case 15767: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // ... o.o xo.
    //      case 15768: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o xo.
    //      case 15769: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // oxx ..o xo.
    //      case 15770: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // .xx ..o xo.
    //      case 15771: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // xox ..o xo.
    //      case 15772: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // oox ..o xo.
    //      case 15773: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // .ox ..o xo.
    //      case 15774: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // x.x ..o xo.
    //      case 15775: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // o.x ..o xo.
    //      case 15776: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // ..x ..o xo.
    //      case 15777: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // xxo ..o xo.
    //      case 15778: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oxo ..o xo.
    //      case 15779: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // .xo ..o xo.
    //      case 15780: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // xoo ..o xo.
    //      case 15781: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o xo.
    //      case 15782: Assert::IsTrue(v == PositionValue(-  465                         )); break;  // .oo ..o xo.
    //      case 15783: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // x.o ..o xo.
    //      case 15784: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // o.o ..o xo.
    //      case 15785: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // ..o ..o xo.
    //      case 15786: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // xx. ..o xo.
    //      case 15787: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // ox. ..o xo.
    //      case 15788: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .x. ..o xo.
    //      case 15789: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // xo. ..o xo.
    //      case 15790: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // oo. ..o xo.
    //      case 15791: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // .o. ..o xo.
    //      case 15792: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // x.. ..o xo.
    //      case 15793: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // o.. ..o xo.
    //      case 15794: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // ... ..o xo.
    //      case 15795: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. xo.
    //      case 15796: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. xo.
    //      case 15797: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. xo.
    //      case 15798: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. xo.
    //      case 15799: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xx. xo.
    //      case 15800: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xx. xo.
    //      case 15801: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. xo.
    //      case 15802: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xx. xo.
    //      case 15803: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xx. xo.
    //      case 15804: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. xo.
    //      case 15805: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // oxo xx. xo.
    //      case 15806: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .xo xx. xo.
    //      case 15807: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. xo.
    //      case 15808: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. xo.
    //      case 15809: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .oo xx. xo.
    //      case 15810: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. xo.
    //      case 15811: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // o.o xx. xo.
    //      case 15812: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // ..o xx. xo.
    //      case 15813: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. xo.
    //      case 15814: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // ox. xx. xo.
    //      case 15815: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // .x. xx. xo.
    //      case 15816: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. xo.
    //      case 15817: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // oo. xx. xo.
    //      case 15818: Assert::IsTrue(v == PositionValue(+  307                         )); break;  // .o. xx. xo.
    //      case 15819: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. xo.
    //      case 15820: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // o.. xx. xo.
    //      case 15821: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // ... xx. xo.
    //      case 15822: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. xo.
    //      case 15823: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ox. xo.
    //      case 15824: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. xo.
    //      case 15825: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. xo.
    //      case 15826: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ox. xo.
    //      case 15827: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ox. xo.
    //      case 15828: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. xo.
    //      case 15829: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ox. xo.
    //      case 15830: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ox. xo.
    //      case 15831: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // xxo ox. xo.
    //      case 15832: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oxo ox. xo.
    //      case 15833: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .xo ox. xo.
    //      case 15834: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // xoo ox. xo.
    //      case 15835: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. xo.
    //      case 15836: Assert::IsTrue(v == PositionValue(-  252                         )); break;  // .oo ox. xo.
    //      case 15837: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // x.o ox. xo.
    //      case 15838: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // o.o ox. xo.
    //      case 15839: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // ..o ox. xo.
    //      case 15840: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // xx. ox. xo.
    //      case 15841: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // ox. ox. xo.
    //      case 15842: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .x. ox. xo.
    //      case 15843: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // xo. ox. xo.
    //      case 15844: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // oo. ox. xo.
    //      case 15845: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // .o. ox. xo.
    //      case 15846: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // x.. ox. xo.
    //      case 15847: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // o.. ox. xo.
    //      case 15848: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // ... ox. xo.
    //      case 15849: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. xo.
    //      case 15850: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. xo.
    //      case 15851: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. xo.
    //      case 15852: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. xo.
    //      case 15853: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .x. xo.
    //      case 15854: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .x. xo.
    //      case 15855: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. xo.
    //      case 15856: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .x. xo.
    //      case 15857: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .x. xo.
    //      case 15858: Assert::IsTrue(v == PositionValue(+  412                         )); break;  // xxo .x. xo.
    //      case 15859: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // oxo .x. xo.
    //      case 15860: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // .xo .x. xo.
    //      case 15861: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // xoo .x. xo.
    //      case 15862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. xo.
    //      case 15863: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // .oo .x. xo.
    //      case 15864: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // x.o .x. xo.
    //      case 15865: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // o.o .x. xo.
    //      case 15866: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // ..o .x. xo.
    //      case 15867: Assert::IsTrue(v == PositionValue(+  473                         )); break;  // xx. .x. xo.
    //      case 15868: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ox. .x. xo.
    //      case 15869: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // .x. .x. xo.
    //      case 15870: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // xo. .x. xo.
    //      case 15871: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // oo. .x. xo.
    //      case 15872: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // .o. .x. xo.
    //      case 15873: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // x.. .x. xo.
    //      case 15874: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // o.. .x. xo.
    //      case 15875: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ... .x. xo.
    //      case 15876: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. xo.
    //      case 15877: Assert::IsTrue(v == PositionValue(+  109                         )); break;  // oxx xo. xo.
    //      case 15878: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // .xx xo. xo.
    //      case 15879: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xo. xo.
    //      case 15880: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. xo.
    //      case 15881: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xo. xo.
    //      case 15882: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xo. xo.
    //      case 15883: Assert::IsTrue(v == PositionValue(-  101                         )); break;  // o.x xo. xo.
    //      case 15884: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // ..x xo. xo.
    //      case 15885: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xo. xo.
    //      case 15886: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // oxo xo. xo.
    //      case 15887: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // .xo xo. xo.
    //      case 15888: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xo. xo.
    //      case 15889: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. xo.
    //      case 15890: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. xo.
    //      case 15891: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xo. xo.
    //      case 15892: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // o.o xo. xo.
    //      case 15893: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // ..o xo. xo.
    //      case 15894: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xo. xo.
    //      case 15895: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // ox. xo. xo.
    //      case 15896: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // .x. xo. xo.
    //      case 15897: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xo. xo.
    //      case 15898: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. xo.
    //      case 15899: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xo. xo.
    //      case 15900: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xo. xo.
    //      case 15901: Assert::IsTrue(v == PositionValue(-  144                         )); break;  // o.. xo. xo.
    //      case 15902: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // ... xo. xo.
    //      case 15903: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. xo.
    //      case 15904: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // oxx oo. xo.
    //      case 15905: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .xx oo. xo.
    //      case 15906: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oo. xo.
    //      case 15907: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. xo.
    //      case 15908: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oo. xo.
    //      case 15909: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // x.x oo. xo.
    //      case 15910: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // o.x oo. xo.
    //      case 15911: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // ..x oo. xo.
    //      case 15912: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // xxo oo. xo.
    //      case 15913: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // oxo oo. xo.
    //      case 15914: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // .xo oo. xo.
    //      case 15915: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. xo.
    //      case 15916: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. xo.
    //      case 15917: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. xo.
    //      case 15918: Assert::IsTrue(v == PositionValue(-  425                         )); break;  // x.o oo. xo.
    //      case 15919: Assert::IsTrue(v == PositionValue(-  676                         )); break;  // o.o oo. xo.
    //      case 15920: Assert::IsTrue(v == PositionValue(-  468                         )); break;  // ..o oo. xo.
    //      case 15921: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xx. oo. xo.
    //      case 15922: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // ox. oo. xo.
    //      case 15923: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .x. oo. xo.
    //      case 15924: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oo. xo.
    //      case 15925: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. xo.
    //      case 15926: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oo. xo.
    //      case 15927: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // x.. oo. xo.
    //      case 15928: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // o.. oo. xo.
    //      case 15929: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // ... oo. xo.
    //      case 15930: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. xo.
    //      case 15931: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // oxx .o. xo.
    //      case 15932: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // .xx .o. xo.
    //      case 15933: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .o. xo.
    //      case 15934: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. xo.
    //      case 15935: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .o. xo.
    //      case 15936: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // x.x .o. xo.
    //      case 15937: Assert::IsTrue(v == PositionValue(-  224                         )); break;  // o.x .o. xo.
    //      case 15938: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // ..x .o. xo.
    //      case 15939: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // xxo .o. xo.
    //      case 15940: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // oxo .o. xo.
    //      case 15941: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // .xo .o. xo.
    //      case 15942: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. xo.
    //      case 15943: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. xo.
    //      case 15944: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. xo.
    //      case 15945: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // x.o .o. xo.
    //      case 15946: Assert::IsTrue(v == PositionValue(-  388                         )); break;  // o.o .o. xo.
    //      case 15947: Assert::IsTrue(v == PositionValue(-  258                         )); break;  // ..o .o. xo.
    //      case 15948: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // xx. .o. xo.
    //      case 15949: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ox. .o. xo.
    //      case 15950: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // .x. .o. xo.
    //      case 15951: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .o. xo.
    //      case 15952: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. xo.
    //      case 15953: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .o. xo.
    //      case 15954: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // x.. .o. xo.
    //      case 15955: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // o.. .o. xo.
    //      case 15956: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // ... .o. xo.
    //      case 15957: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. xo.
    //      case 15958: Assert::IsTrue(v == PositionValue(+  322                         )); break;  // oxx x.. xo.
    //      case 15959: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // .xx x.. xo.
    //      case 15960: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.. xo.
    //      case 15961: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // oox x.. xo.
    //      case 15962: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // .ox x.. xo.
    //      case 15963: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.. xo.
    //      case 15964: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // o.x x.. xo.
    //      case 15965: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // ..x x.. xo.
    //      case 15966: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.. xo.
    //      case 15967: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // oxo x.. xo.
    //      case 15968: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // .xo x.. xo.
    //      case 15969: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.. xo.
    //      case 15970: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. xo.
    //      case 15971: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .oo x.. xo.
    //      case 15972: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.. xo.
    //      case 15973: Assert::IsTrue(v == PositionValue(+   35                         )); break;  // o.o x.. xo.
    //      case 15974: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // ..o x.. xo.
    //      case 15975: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.. xo.
    //      case 15976: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // ox. x.. xo.
    //      case 15977: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .x. x.. xo.
    //      case 15978: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.. xo.
    //      case 15979: Assert::IsTrue(v == PositionValue(-   54                         )); break;  // oo. x.. xo.
    //      case 15980: Assert::IsTrue(v == PositionValue(+   85                         )); break;  // .o. x.. xo.
    //      case 15981: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.. xo.
    //      case 15982: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // o.. x.. xo.
    //      case 15983: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // ... x.. xo.
    //      case 15984: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. xo.
    //      case 15985: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // oxx o.. xo.
    //      case 15986: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // .xx o.. xo.
    //      case 15987: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // xox o.. xo.
    //      case 15988: Assert::IsTrue(v == PositionValue(-  404                         )); break;  // oox o.. xo.
    //      case 15989: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // .ox o.. xo.
    //      case 15990: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // x.x o.. xo.
    //      case 15991: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // o.x o.. xo.
    //      case 15992: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // ..x o.. xo.
    //      case 15993: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xxo o.. xo.
    //      case 15994: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // oxo o.. xo.
    //      case 15995: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .xo o.. xo.
    //      case 15996: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // xoo o.. xo.
    //      case 15997: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. xo.
    //      case 15998: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // .oo o.. xo.
    //      case 15999: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // x.o o.. xo.
    //      case 16000: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // o.o o.. xo.
    //      case 16001: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ..o o.. xo.
    //      case 16002: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // xx. o.. xo.
    //      case 16003: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // ox. o.. xo.
    //      case 16004: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .x. o.. xo.
    //      case 16005: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // xo. o.. xo.
    //      case 16006: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // oo. o.. xo.
    //      case 16007: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // .o. o.. xo.
    //      case 16008: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // x.. o.. xo.
    //      case 16009: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // o.. o.. xo.
    //      case 16010: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // ... o.. xo.
    //      case 16011: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... xo.
    //      case 16012: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // oxx ... xo.
    //      case 16013: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .xx ... xo.
    //      case 16014: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // xox ... xo.
    //      case 16015: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // oox ... xo.
    //      case 16016: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // .ox ... xo.
    //      case 16017: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // x.x ... xo.
    //      case 16018: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // o.x ... xo.
    //      case 16019: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // ..x ... xo.
    //      case 16020: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xxo ... xo.
    //      case 16021: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // oxo ... xo.
    //      case 16022: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xo ... xo.
    //      case 16023: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // xoo ... xo.
    //      case 16024: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... xo.
    //      case 16025: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // .oo ... xo.
    //      case 16026: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.o ... xo.
    //      case 16027: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // o.o ... xo.
    //      case 16028: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ..o ... xo.
    //      case 16029: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xx. ... xo.
    //      case 16030: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ox. ... xo.
    //      case 16031: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .x. ... xo.
    //      case 16032: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // xo. ... xo.
    //      case 16033: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // oo. ... xo.
    //      case 16034: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // .o. ... xo.
    //      case 16035: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.. ... xo.
    //      case 16036: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // o.. ... xo.
    //      case 16037: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ... ... xo.
    //      case 16038: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx oo.
    //      case 16039: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx oo.
    //      case 16040: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx oo.
    //      case 16041: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx oo.
    //      case 16042: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx oo.
    //      case 16043: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx oo.
    //      case 16044: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx oo.
    //      case 16045: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx oo.
    //      case 16046: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx oo.
    //      case 16047: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx oo.
    //      case 16048: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx oo.
    //      case 16049: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx oo.
    //      case 16050: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx oo.
    //      case 16051: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx oo.
    //      case 16052: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx oo.
    //      case 16053: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx oo.
    //      case 16054: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx oo.
    //      case 16055: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx oo.
    //      case 16056: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx oo.
    //      case 16057: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx oo.
    //      case 16058: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx oo.
    //      case 16059: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx oo.
    //      case 16060: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx oo.
    //      case 16061: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx oo.
    //      case 16062: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx oo.
    //      case 16063: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx oo.
    //      case 16064: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx oo.
    //      case 16065: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx oo.
    //      case 16066: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxx oo.
    //      case 16067: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // .xx oxx oo.
    //      case 16068: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xox oxx oo.
    //      case 16069: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxx oo.
    //      case 16070: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // .ox oxx oo.
    //      case 16071: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // x.x oxx oo.
    //      case 16072: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxx oo.
    //      case 16073: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // ..x oxx oo.
    //      case 16074: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // xxo oxx oo.
    //      case 16075: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxx oo.
    //      case 16076: Assert::IsTrue(v == PositionValue(-   56                         )); break;  // .xo oxx oo.
    //      case 16077: Assert::IsTrue(v == PositionValue(-  319                         )); break;  // xoo oxx oo.
    //      case 16078: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx oo.
    //      case 16079: Assert::IsTrue(v == PositionValue(-  467                         )); break;  // .oo oxx oo.
    //      case 16080: Assert::IsTrue(v == PositionValue(-  118                         )); break;  // x.o oxx oo.
    //      case 16081: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxx oo.
    //      case 16082: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // ..o oxx oo.
    //      case 16083: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // xx. oxx oo.
    //      case 16084: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxx oo.
    //      case 16085: Assert::IsTrue(v == PositionValue(-   13                         )); break;  // .x. oxx oo.
    //      case 16086: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // xo. oxx oo.
    //      case 16087: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxx oo.
    //      case 16088: Assert::IsTrue(v == PositionValue(-  337                         )); break;  // .o. oxx oo.
    //      case 16089: Assert::IsTrue(v == PositionValue(-   75                         )); break;  // x.. oxx oo.
    //      case 16090: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxx oo.
    //      case 16091: Assert::IsTrue(v == PositionValue(-  214                         )); break;  // ... oxx oo.
    //      case 16092: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx oo.
    //      case 16093: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // oxx .xx oo.
    //      case 16094: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .xx .xx oo.
    //      case 16095: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // xox .xx oo.
    //      case 16096: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // oox .xx oo.
    //      case 16097: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .ox .xx oo.
    //      case 16098: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // x.x .xx oo.
    //      case 16099: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // o.x .xx oo.
    //      case 16100: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // ..x .xx oo.
    //      case 16101: Assert::IsTrue(v == PositionValue(+  371                         )); break;  // xxo .xx oo.
    //      case 16102: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // oxo .xx oo.
    //      case 16103: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .xo .xx oo.
    //      case 16104: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // xoo .xx oo.
    //      case 16105: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx oo.
    //      case 16106: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .oo .xx oo.
    //      case 16107: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // x.o .xx oo.
    //      case 16108: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.o .xx oo.
    //      case 16109: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ..o .xx oo.
    //      case 16110: Assert::IsTrue(v == PositionValue(+  423                         )); break;  // xx. .xx oo.
    //      case 16111: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ox. .xx oo.
    //      case 16112: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // .x. .xx oo.
    //      case 16113: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // xo. .xx oo.
    //      case 16114: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oo. .xx oo.
    //      case 16115: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .o. .xx oo.
    //      case 16116: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // x.. .xx oo.
    //      case 16117: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // o.. .xx oo.
    //      case 16118: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // ... .xx oo.
    //      case 16119: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox oo.
    //      case 16120: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // oxx xox oo.
    //      case 16121: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // .xx xox oo.
    //      case 16122: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xox oo.
    //      case 16123: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox oo.
    //      case 16124: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xox oo.
    //      case 16125: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // x.x xox oo.
    //      case 16126: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // o.x xox oo.
    //      case 16127: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ..x xox oo.
    //      case 16128: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xox oo.
    //      case 16129: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox oo.
    //      case 16130: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xox oo.
    //      case 16131: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xox oo.
    //      case 16132: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox oo.
    //      case 16133: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox oo.
    //      case 16134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xox oo.
    //      case 16135: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox oo.
    //      case 16136: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xox oo.
    //      case 16137: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // xx. xox oo.
    //      case 16138: Assert::IsTrue(v == PositionValue(-  227                         )); break;  // ox. xox oo.
    //      case 16139: Assert::IsTrue(v == PositionValue(-   97                         )); break;  // .x. xox oo.
    //      case 16140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xox oo.
    //      case 16141: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox oo.
    //      case 16142: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xox oo.
    //      case 16143: Assert::IsTrue(v == PositionValue(-  186                         )); break;  // x.. xox oo.
    //      case 16144: Assert::IsTrue(v == PositionValue(-  437                         )); break;  // o.. xox oo.
    //      case 16145: Assert::IsTrue(v == PositionValue(-  307                         )); break;  // ... xox oo.
    //      case 16146: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox oo.
    //      case 16147: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox oo.
    //      case 16148: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // .xx oox oo.
    //      case 16149: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oox oo.
    //      case 16150: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox oo.
    //      case 16151: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oox oo.
    //      case 16152: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // x.x oox oo.
    //      case 16153: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox oo.
    //      case 16154: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // ..x oox oo.
    //      case 16155: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oox oo.
    //      case 16156: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox oo.
    //      case 16157: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oox oo.
    //      case 16158: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox oo.
    //      case 16159: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox oo.
    //      case 16160: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox oo.
    //      case 16161: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oox oo.
    //      case 16162: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox oo.
    //      case 16163: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oox oo.
    //      case 16164: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // xx. oox oo.
    //      case 16165: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox oo.
    //      case 16166: Assert::IsTrue(v == PositionValue(-  508                         )); break;  // .x. oox oo.
    //      case 16167: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oox oo.
    //      case 16168: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox oo.
    //      case 16169: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oox oo.
    //      case 16170: Assert::IsTrue(v == PositionValue(-  588                         )); break;  // x.. oox oo.
    //      case 16171: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox oo.
    //      case 16172: Assert::IsTrue(v == PositionValue(-  640                         )); break;  // ... oox oo.
    //      case 16173: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox oo.
    //      case 16174: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // oxx .ox oo.
    //      case 16175: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // .xx .ox oo.
    //      case 16176: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .ox oo.
    //      case 16177: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox oo.
    //      case 16178: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .ox oo.
    //      case 16179: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // x.x .ox oo.
    //      case 16180: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // o.x .ox oo.
    //      case 16181: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // ..x .ox oo.
    //      case 16182: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .ox oo.
    //      case 16183: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox oo.
    //      case 16184: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .ox oo.
    //      case 16185: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox oo.
    //      case 16186: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox oo.
    //      case 16187: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox oo.
    //      case 16188: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .ox oo.
    //      case 16189: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox oo.
    //      case 16190: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .ox oo.
    //      case 16191: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // xx. .ox oo.
    //      case 16192: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // ox. .ox oo.
    //      case 16193: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .x. .ox oo.
    //      case 16194: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .ox oo.
    //      case 16195: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox oo.
    //      case 16196: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .ox oo.
    //      case 16197: Assert::IsTrue(v == PositionValue(-  309                         )); break;  // x.. .ox oo.
    //      case 16198: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // o.. .ox oo.
    //      case 16199: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // ... .ox oo.
    //      case 16200: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x oo.
    //      case 16201: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // oxx x.x oo.
    //      case 16202: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // .xx x.x oo.
    //      case 16203: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xox x.x oo.
    //      case 16204: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oox x.x oo.
    //      case 16205: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .ox x.x oo.
    //      case 16206: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // x.x x.x oo.
    //      case 16207: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.x x.x oo.
    //      case 16208: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ..x x.x oo.
    //      case 16209: Assert::IsTrue(v == PositionValue(+  272                         )); break;  // xxo x.x oo.
    //      case 16210: Assert::IsTrue(v == PositionValue(+   30                         )); break;  // oxo x.x oo.
    //      case 16211: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // .xo x.x oo.
    //      case 16212: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // xoo x.x oo.
    //      case 16213: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x oo.
    //      case 16214: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // .oo x.x oo.
    //      case 16215: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // x.o x.x oo.
    //      case 16216: Assert::IsTrue(v == PositionValue(-  171                         )); break;  // o.o x.x oo.
    //      case 16217: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // ..o x.x oo.
    //      case 16218: Assert::IsTrue(v == PositionValue(+  324                         )); break;  // xx. x.x oo.
    //      case 16219: Assert::IsTrue(v == PositionValue(+   73                         )); break;  // ox. x.x oo.
    //      case 16220: Assert::IsTrue(v == PositionValue(+  116                         )); break;  // .x. x.x oo.
    //      case 16221: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // xo. x.x oo.
    //      case 16222: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // oo. x.x oo.
    //      case 16223: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .o. x.x oo.
    //      case 16224: Assert::IsTrue(v == PositionValue(+   36                         )); break;  // x.. x.x oo.
    //      case 16225: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // o.. x.x oo.
    //      case 16226: Assert::IsTrue(v == PositionValue(-   85                         )); break;  // ... x.x oo.
    //      case 16227: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x oo.
    //      case 16228: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.x oo.
    //      case 16229: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xx o.x oo.
    //      case 16230: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // xox o.x oo.
    //      case 16231: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.x oo.
    //      case 16232: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // .ox o.x oo.
    //      case 16233: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // x.x o.x oo.
    //      case 16234: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.x oo.
    //      case 16235: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // ..x o.x oo.
    //      case 16236: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // xxo o.x oo.
    //      case 16237: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.x oo.
    //      case 16238: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // .xo o.x oo.
    //      case 16239: Assert::IsTrue(v == PositionValue(-  532                         )); break;  // xoo o.x oo.
    //      case 16240: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x oo.
    //      case 16241: Assert::IsTrue(v == PositionValue(-  593                         )); break;  // .oo o.x oo.
    //      case 16242: Assert::IsTrue(v == PositionValue(-  331                         )); break;  // x.o o.x oo.
    //      case 16243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.x oo.
    //      case 16244: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // ..o o.x oo.
    //      case 16245: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // xx. o.x oo.
    //      case 16246: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.x oo.
    //      case 16247: Assert::IsTrue(v == PositionValue(-  217                         )); break;  // .x. o.x oo.
    //      case 16248: Assert::IsTrue(v == PositionValue(-  411                         )); break;  // xo. o.x oo.
    //      case 16249: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.x oo.
    //      case 16250: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // .o. o.x oo.
    //      case 16251: Assert::IsTrue(v == PositionValue(-  288                         )); break;  // x.. o.x oo.
    //      case 16252: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.x oo.
    //      case 16253: Assert::IsTrue(v == PositionValue(-  340                         )); break;  // ... o.x oo.
    //      case 16254: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x oo.
    //      case 16255: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // oxx ..x oo.
    //      case 16256: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // .xx ..x oo.
    //      case 16257: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xox ..x oo.
    //      case 16258: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // oox ..x oo.
    //      case 16259: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .ox ..x oo.
    //      case 16260: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.x ..x oo.
    //      case 16261: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.x ..x oo.
    //      case 16262: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..x ..x oo.
    //      case 16263: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // xxo ..x oo.
    //      case 16264: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // oxo ..x oo.
    //      case 16265: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // .xo ..x oo.
    //      case 16266: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // xoo ..x oo.
    //      case 16267: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x oo.
    //      case 16268: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // .oo ..x oo.
    //      case 16269: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // x.o ..x oo.
    //      case 16270: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // o.o ..x oo.
    //      case 16271: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ..o ..x oo.
    //      case 16272: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xx. ..x oo.
    //      case 16273: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // ox. ..x oo.
    //      case 16274: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // .x. ..x oo.
    //      case 16275: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // xo. ..x oo.
    //      case 16276: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // oo. ..x oo.
    //      case 16277: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .o. ..x oo.
    //      case 16278: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // x.. ..x oo.
    //      case 16279: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // o.. ..x oo.
    //      case 16280: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ... ..x oo.
    //      case 16281: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo oo.
    //      case 16282: Assert::IsTrue(v == PositionValue(+  230                         )); break;  // oxx xxo oo.
    //      case 16283: Assert::IsTrue(v == PositionValue(+  282                         )); break;  // .xx xxo oo.
    //      case 16284: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // xox xxo oo.
    //      case 16285: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oox xxo oo.
    //      case 16286: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // .ox xxo oo.
    //      case 16287: Assert::IsTrue(v == PositionValue(+  202                         )); break;  // x.x xxo oo.
    //      case 16288: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // o.x xxo oo.
    //      case 16289: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // ..x xxo oo.
    //      case 16290: Assert::IsTrue(v == PositionValue(+  230                         )); break;  // xxo xxo oo.
    //      case 16291: Assert::IsTrue(v == PositionValue(-   99                         )); break;  // oxo xxo oo.
    //      case 16292: Assert::IsTrue(v == PositionValue(-   56                         )); break;  // .xo xxo oo.
    //      case 16293: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xoo xxo oo.
    //      case 16294: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo oo.
    //      case 16295: Assert::IsTrue(v == PositionValue(-  467                         )); break;  // .oo xxo oo.
    //      case 16296: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // x.o xxo oo.
    //      case 16297: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // o.o xxo oo.
    //      case 16298: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // ..o xxo oo.
    //      case 16299: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // xx. xxo oo.
    //      case 16300: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // ox. xxo oo.
    //      case 16301: Assert::IsTrue(v == PositionValue(+   74                         )); break;  // .x. xxo oo.
    //      case 16302: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // xo. xxo oo.
    //      case 16303: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // oo. xxo oo.
    //      case 16304: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .o. xxo oo.
    //      case 16305: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.. xxo oo.
    //      case 16306: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.. xxo oo.
    //      case 16307: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // ... xxo oo.
    //      case 16308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo oo.
    //      case 16309: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxo oo.
    //      case 16310: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // .xx oxo oo.
    //      case 16311: Assert::IsTrue(v == PositionValue(-  401                         )); break;  // xox oxo oo.
    //      case 16312: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxo oo.
    //      case 16313: Assert::IsTrue(v == PositionValue(-  540                         )); break;  // .ox oxo oo.
    //      case 16314: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // x.x oxo oo.
    //      case 16315: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxo oo.
    //      case 16316: Assert::IsTrue(v == PositionValue(-  339                         )); break;  // ..x oxo oo.
    //      case 16317: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xxo oxo oo.
    //      case 16318: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo oo.
    //      case 16319: Assert::IsTrue(v == PositionValue(-  467                         )); break;  // .xo oxo oo.
    //      case 16320: Assert::IsTrue(v == PositionValue(-  730                         )); break;  // xoo oxo oo.
    //      case 16321: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo oo.
    //      case 16322: Assert::IsTrue(v == PositionValue(-  878                         )); break;  // .oo oxo oo.
    //      case 16323: Assert::IsTrue(v == PositionValue(-  451                         )); break;  // x.o oxo oo.
    //      case 16324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo oo.
    //      case 16325: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // ..o oxo oo.
    //      case 16326: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // xx. oxo oo.
    //      case 16327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxo oo.
    //      case 16328: Assert::IsTrue(v == PositionValue(-  337                         )); break;  // .x. oxo oo.
    //      case 16329: Assert::IsTrue(v == PositionValue(-  522                         )); break;  // xo. oxo oo.
    //      case 16330: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxo oo.
    //      case 16331: Assert::IsTrue(v == PositionValue(-  661                         )); break;  // .o. oxo oo.
    //      case 16332: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // x.. oxo oo.
    //      case 16333: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxo oo.
    //      case 16334: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // ... oxo oo.
    //      case 16335: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo oo.
    //      case 16336: Assert::IsTrue(v == PositionValue(+   29                         )); break;  // oxx .xo oo.
    //      case 16337: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .xx .xo oo.
    //      case 16338: Assert::IsTrue(v == PositionValue(-  122                         )); break;  // xox .xo oo.
    //      case 16339: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // oox .xo oo.
    //      case 16340: Assert::IsTrue(v == PositionValue(-  252                         )); break;  // .ox .xo oo.
    //      case 16341: Assert::IsTrue(v == PositionValue(+    1                         )); break;  // x.x .xo oo.
    //      case 16342: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // o.x .xo oo.
    //      case 16343: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // ..x .xo oo.
    //      case 16344: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // xxo .xo oo.
    //      case 16345: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // oxo .xo oo.
    //      case 16346: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // .xo .xo oo.
    //      case 16347: Assert::IsTrue(v == PositionValue(-  451                         )); break;  // xoo .xo oo.
    //      case 16348: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo oo.
    //      case 16349: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // .oo .xo oo.
    //      case 16350: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // x.o .xo oo.
    //      case 16351: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // o.o .xo oo.
    //      case 16352: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // ..o .xo oo.
    //      case 16353: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // xx. .xo oo.
    //      case 16354: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ox. .xo oo.
    //      case 16355: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // .x. .xo oo.
    //      case 16356: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // xo. .xo oo.
    //      case 16357: Assert::IsTrue(v == PositionValue(-  503                         )); break;  // oo. .xo oo.
    //      case 16358: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // .o. .xo oo.
    //      case 16359: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // x.. .xo oo.
    //      case 16360: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // o.. .xo oo.
    //      case 16361: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // ... .xo oo.
    //      case 16362: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo oo.
    //      case 16363: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // oxx xoo oo.
    //      case 16364: Assert::IsTrue(v == PositionValue(-  282                         )); break;  // .xx xoo oo.
    //      case 16365: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xoo oo.
    //      case 16366: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo oo.
    //      case 16367: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xoo oo.
    //      case 16368: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // x.x xoo oo.
    //      case 16369: Assert::IsTrue(v == PositionValue(-  631                         )); break;  // o.x xoo oo.
    //      case 16370: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // ..x xoo oo.
    //      case 16371: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xoo oo.
    //      case 16372: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo oo.
    //      case 16373: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo oo.
    //      case 16374: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo oo.
    //      case 16375: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo oo.
    //      case 16376: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo oo.
    //      case 16377: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xoo oo.
    //      case 16378: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo oo.
    //      case 16379: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo oo.
    //      case 16380: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xx. xoo oo.
    //      case 16381: Assert::IsTrue(v == PositionValue(-  551                         )); break;  // ox. xoo oo.
    //      case 16382: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .x. xoo oo.
    //      case 16383: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xoo oo.
    //      case 16384: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo oo.
    //      case 16385: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xoo oo.
    //      case 16386: Assert::IsTrue(v == PositionValue(-  432                         )); break;  // x.. xoo oo.
    //      case 16387: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // o.. xoo oo.
    //      case 16388: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // ... xoo oo.
    //      case 16389: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo oo.
    //      case 16390: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo oo.
    //      case 16391: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo oo.
    //      case 16392: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo oo.
    //      case 16393: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo oo.
    //      case 16394: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo oo.
    //      case 16395: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo oo.
    //      case 16396: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo oo.
    //      case 16397: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo oo.
    //      case 16398: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo oo.
    //      case 16399: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo oo.
    //      case 16400: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo oo.
    //      case 16401: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo oo.
    //      case 16402: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo oo.
    //      case 16403: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo oo.
    //      case 16404: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo oo.
    //      case 16405: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo oo.
    //      case 16406: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo oo.
    //      case 16407: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo oo.
    //      case 16408: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo oo.
    //      case 16409: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo oo.
    //      case 16410: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo oo.
    //      case 16411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo oo.
    //      case 16412: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo oo.
    //      case 16413: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo oo.
    //      case 16414: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo oo.
    //      case 16415: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo oo.
    //      case 16416: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo oo.
    //      case 16417: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // oxx .oo oo.
    //      case 16418: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // .xx .oo oo.
    //      case 16419: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .oo oo.
    //      case 16420: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo oo.
    //      case 16421: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .oo oo.
    //      case 16422: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // x.x .oo oo.
    //      case 16423: Assert::IsTrue(v == PositionValue(-  685                         )); break;  // o.x .oo oo.
    //      case 16424: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // ..x .oo oo.
    //      case 16425: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo oo.
    //      case 16426: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo oo.
    //      case 16427: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo oo.
    //      case 16428: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo oo.
    //      case 16429: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo oo.
    //      case 16430: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo oo.
    //      case 16431: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo oo.
    //      case 16432: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo oo.
    //      case 16433: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo oo.
    //      case 16434: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // xx. .oo oo.
    //      case 16435: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // ox. .oo oo.
    //      case 16436: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // .x. .oo oo.
    //      case 16437: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .oo oo.
    //      case 16438: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo oo.
    //      case 16439: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .oo oo.
    //      case 16440: Assert::IsTrue(v == PositionValue(-  564                         )); break;  // x.. .oo oo.
    //      case 16441: Assert::IsTrue(v == PositionValue(-  737                         )); break;  // o.. .oo oo.
    //      case 16442: Assert::IsTrue(v == PositionValue(-  607                         )); break;  // ... .oo oo.
    //      case 16443: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o oo.
    //      case 16444: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // oxx x.o oo.
    //      case 16445: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xx x.o oo.
    //      case 16446: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // xox x.o oo.
    //      case 16447: Assert::IsTrue(v == PositionValue(-  454                         )); break;  // oox x.o oo.
    //      case 16448: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // .ox x.o oo.
    //      case 16449: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // x.x x.o oo.
    //      case 16450: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // o.x x.o oo.
    //      case 16451: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // ..x x.o oo.
    //      case 16452: Assert::IsTrue(v == PositionValue(-   61                         )); break;  // xxo x.o oo.
    //      case 16453: Assert::IsTrue(v == PositionValue(-  303                         )); break;  // oxo x.o oo.
    //      case 16454: Assert::IsTrue(v == PositionValue(-  260                         )); break;  // .xo x.o oo.
    //      case 16455: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // xoo x.o oo.
    //      case 16456: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o oo.
    //      case 16457: Assert::IsTrue(v == PositionValue(-  593                         )); break;  // .oo x.o oo.
    //      case 16458: Assert::IsTrue(v == PositionValue(-  262                         )); break;  // x.o x.o oo.
    //      case 16459: Assert::IsTrue(v == PositionValue(-  426                         )); break;  // o.o x.o oo.
    //      case 16460: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // ..o x.o oo.
    //      case 16461: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // xx. x.o oo.
    //      case 16462: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ox. x.o oo.
    //      case 16463: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .x. x.o oo.
    //      case 16464: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // xo. x.o oo.
    //      case 16465: Assert::IsTrue(v == PositionValue(-  506                         )); break;  // oo. x.o oo.
    //      case 16466: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // .o. x.o oo.
    //      case 16467: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // x.. x.o oo.
    //      case 16468: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // o.. x.o oo.
    //      case 16469: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // ... x.o oo.
    //      case 16470: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o oo.
    //      case 16471: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.o oo.
    //      case 16472: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // .xx o.o oo.
    //      case 16473: Assert::IsTrue(v == PositionValue(-  614                         )); break;  // xox o.o oo.
    //      case 16474: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.o oo.
    //      case 16475: Assert::IsTrue(v == PositionValue(-  666                         )); break;  // .ox o.o oo.
    //      case 16476: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // x.x o.o oo.
    //      case 16477: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.o oo.
    //      case 16478: Assert::IsTrue(v == PositionValue(-  465                         )); break;  // ..x o.o oo.
    //      case 16479: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // xxo o.o oo.
    //      case 16480: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o oo.
    //      case 16481: Assert::IsTrue(v == PositionValue(-  593                         )); break;  // .xo o.o oo.
    //      case 16482: Assert::IsTrue(v == PositionValue(-  865                         )); break;  // xoo o.o oo.
    //      case 16483: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o oo.
    //      case 16484: Assert::IsTrue(v == PositionValue(-  926                         )); break;  // .oo o.o oo.
    //      case 16485: Assert::IsTrue(v == PositionValue(-  586                         )); break;  // x.o o.o oo.
    //      case 16486: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o oo.
    //      case 16487: Assert::IsTrue(v == PositionValue(-  638                         )); break;  // ..o o.o oo.
    //      case 16488: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // xx. o.o oo.
    //      case 16489: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.o oo.
    //      case 16490: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // .x. o.o oo.
    //      case 16491: Assert::IsTrue(v == PositionValue(-  657                         )); break;  // xo. o.o oo.
    //      case 16492: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.o oo.
    //      case 16493: Assert::IsTrue(v == PositionValue(-  709                         )); break;  // .o. o.o oo.
    //      case 16494: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // x.. o.o oo.
    //      case 16495: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.o oo.
    //      case 16496: Assert::IsTrue(v == PositionValue(-  508                         )); break;  // ... o.o oo.
    //      case 16497: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o oo.
    //      case 16498: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // oxx ..o oo.
    //      case 16499: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .xx ..o oo.
    //      case 16500: Assert::IsTrue(v == PositionValue(-  335                         )); break;  // xox ..o oo.
    //      case 16501: Assert::IsTrue(v == PositionValue(-  499                         )); break;  // oox ..o oo.
    //      case 16502: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // .ox ..o oo.
    //      case 16503: Assert::IsTrue(v == PositionValue(-  212                         )); break;  // x.x ..o oo.
    //      case 16504: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // o.x ..o oo.
    //      case 16505: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // ..x ..o oo.
    //      case 16506: Assert::IsTrue(v == PositionValue(-  262                         )); break;  // xxo ..o oo.
    //      case 16507: Assert::IsTrue(v == PositionValue(-  426                         )); break;  // oxo ..o oo.
    //      case 16508: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // .xo ..o oo.
    //      case 16509: Assert::IsTrue(v == PositionValue(-  586                         )); break;  // xoo ..o oo.
    //      case 16510: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o oo.
    //      case 16511: Assert::IsTrue(v == PositionValue(-  638                         )); break;  // .oo ..o oo.
    //      case 16512: Assert::IsTrue(v == PositionValue(-  385                         )); break;  // x.o ..o oo.
    //      case 16513: Assert::IsTrue(v == PositionValue(-  471                         )); break;  // o.o ..o oo.
    //      case 16514: Assert::IsTrue(v == PositionValue(-  428                         )); break;  // ..o ..o oo.
    //      case 16515: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xx. ..o oo.
    //      case 16516: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // ox. ..o oo.
    //      case 16517: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .x. ..o oo.
    //      case 16518: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // xo. ..o oo.
    //      case 16519: Assert::IsTrue(v == PositionValue(-  551                         )); break;  // oo. ..o oo.
    //      case 16520: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .o. ..o oo.
    //      case 16521: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // x.. ..o oo.
    //      case 16522: Assert::IsTrue(v == PositionValue(-  341                         )); break;  // o.. ..o oo.
    //      case 16523: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // ... ..o oo.
    //      case 16524: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. oo.
    //      case 16525: Assert::IsTrue(v == PositionValue(+  362                         )); break;  // oxx xx. oo.
    //      case 16526: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // .xx xx. oo.
    //      case 16527: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // xox xx. oo.
    //      case 16528: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oox xx. oo.
    //      case 16529: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .ox xx. oo.
    //      case 16530: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // x.x xx. oo.
    //      case 16531: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // o.x xx. oo.
    //      case 16532: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // ..x xx. oo.
    //      case 16533: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // xxo xx. oo.
    //      case 16534: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // oxo xx. oo.
    //      case 16535: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .xo xx. oo.
    //      case 16536: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // xoo xx. oo.
    //      case 16537: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. oo.
    //      case 16538: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .oo xx. oo.
    //      case 16539: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.o xx. oo.
    //      case 16540: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.o xx. oo.
    //      case 16541: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ..o xx. oo.
    //      case 16542: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // xx. xx. oo.
    //      case 16543: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // ox. xx. oo.
    //      case 16544: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // .x. xx. oo.
    //      case 16545: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // xo. xx. oo.
    //      case 16546: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oo. xx. oo.
    //      case 16547: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .o. xx. oo.
    //      case 16548: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.. xx. oo.
    //      case 16549: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // o.. xx. oo.
    //      case 16550: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // ... xx. oo.
    //      case 16551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. oo.
    //      case 16552: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ox. oo.
    //      case 16553: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // .xx ox. oo.
    //      case 16554: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // xox ox. oo.
    //      case 16555: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ox. oo.
    //      case 16556: Assert::IsTrue(v == PositionValue(-  339                         )); break;  // .ox ox. oo.
    //      case 16557: Assert::IsTrue(v == PositionValue(-   77                         )); break;  // x.x ox. oo.
    //      case 16558: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ox. oo.
    //      case 16559: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // ..x ox. oo.
    //      case 16560: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xxo ox. oo.
    //      case 16561: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ox. oo.
    //      case 16562: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // .xo ox. oo.
    //      case 16563: Assert::IsTrue(v == PositionValue(-  442                         )); break;  // xoo ox. oo.
    //      case 16564: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. oo.
    //      case 16565: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // .oo ox. oo.
    //      case 16566: Assert::IsTrue(v == PositionValue(-  241                         )); break;  // x.o ox. oo.
    //      case 16567: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ox. oo.
    //      case 16568: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // ..o ox. oo.
    //      case 16569: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // xx. ox. oo.
    //      case 16570: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ox. oo.
    //      case 16571: Assert::IsTrue(v == PositionValue(-  214                         )); break;  // .x. ox. oo.
    //      case 16572: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // xo. ox. oo.
    //      case 16573: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ox. oo.
    //      case 16574: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // .o. ox. oo.
    //      case 16575: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // x.. ox. oo.
    //      case 16576: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ox. oo.
    //      case 16577: Assert::IsTrue(v == PositionValue(-  337                         )); break;  // ... ox. oo.
    //      case 16578: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. oo.
    //      case 16579: Assert::IsTrue(v == PositionValue(+  152                         )); break;  // oxx .x. oo.
    //      case 16580: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // .xx .x. oo.
    //      case 16581: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // xox .x. oo.
    //      case 16582: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // oox .x. oo.
    //      case 16583: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // .ox .x. oo.
    //      case 16584: Assert::IsTrue(v == PositionValue(+  124                         )); break;  // x.x .x. oo.
    //      case 16585: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // o.x .x. oo.
    //      case 16586: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // ..x .x. oo.
    //      case 16587: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // xxo .x. oo.
    //      case 16588: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // oxo .x. oo.
    //      case 16589: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // .xo .x. oo.
    //      case 16590: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xoo .x. oo.
    //      case 16591: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. oo.
    //      case 16592: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // .oo .x. oo.
    //      case 16593: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // x.o .x. oo.
    //      case 16594: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.o .x. oo.
    //      case 16595: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ..o .x. oo.
    //      case 16596: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // xx. .x. oo.
    //      case 16597: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // ox. .x. oo.
    //      case 16598: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // .x. .x. oo.
    //      case 16599: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // xo. .x. oo.
    //      case 16600: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // oo. .x. oo.
    //      case 16601: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // .o. .x. oo.
    //      case 16602: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // x.. .x. oo.
    //      case 16603: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.. .x. oo.
    //      case 16604: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // ... .x. oo.
    //      case 16605: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. oo.
    //      case 16606: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // oxx xo. oo.
    //      case 16607: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .xx xo. oo.
    //      case 16608: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xo. oo.
    //      case 16609: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. oo.
    //      case 16610: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xo. oo.
    //      case 16611: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // x.x xo. oo.
    //      case 16612: Assert::IsTrue(v == PositionValue(-  430                         )); break;  // o.x xo. oo.
    //      case 16613: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // ..x xo. oo.
    //      case 16614: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xo. oo.
    //      case 16615: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. oo.
    //      case 16616: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xo. oo.
    //      case 16617: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xo. oo.
    //      case 16618: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. oo.
    //      case 16619: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. oo.
    //      case 16620: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xo. oo.
    //      case 16621: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. oo.
    //      case 16622: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xo. oo.
    //      case 16623: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // xx. xo. oo.
    //      case 16624: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // ox. xo. oo.
    //      case 16625: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .x. xo. oo.
    //      case 16626: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xo. oo.
    //      case 16627: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. oo.
    //      case 16628: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xo. oo.
    //      case 16629: Assert::IsTrue(v == PositionValue(-  231                         )); break;  // x.. xo. oo.
    //      case 16630: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // o.. xo. oo.
    //      case 16631: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // ... xo. oo.
    //      case 16632: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. oo.
    //      case 16633: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. oo.
    //      case 16634: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .xx oo. oo.
    //      case 16635: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oo. oo.
    //      case 16636: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. oo.
    //      case 16637: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oo. oo.
    //      case 16638: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // x.x oo. oo.
    //      case 16639: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. oo.
    //      case 16640: Assert::IsTrue(v == PositionValue(-  642                         )); break;  // ..x oo. oo.
    //      case 16641: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oo. oo.
    //      case 16642: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. oo.
    //      case 16643: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oo. oo.
    //      case 16644: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. oo.
    //      case 16645: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. oo.
    //      case 16646: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. oo.
    //      case 16647: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oo. oo.
    //      case 16648: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. oo.
    //      case 16649: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oo. oo.
    //      case 16650: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // xx. oo. oo.
    //      case 16651: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. oo.
    //      case 16652: Assert::IsTrue(v == PositionValue(-  640                         )); break;  // .x. oo. oo.
    //      case 16653: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oo. oo.
    //      case 16654: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. oo.
    //      case 16655: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oo. oo.
    //      case 16656: Assert::IsTrue(v == PositionValue(-  642                         )); break;  // x.. oo. oo.
    //      case 16657: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. oo.
    //      case 16658: Assert::IsTrue(v == PositionValue(-  694                         )); break;  // ... oo. oo.
    //      case 16659: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. oo.
    //      case 16660: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // oxx .o. oo.
    //      case 16661: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // .xx .o. oo.
    //      case 16662: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .o. oo.
    //      case 16663: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. oo.
    //      case 16664: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .o. oo.
    //      case 16665: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // x.x .o. oo.
    //      case 16666: Assert::IsTrue(v == PositionValue(-  475                         )); break;  // o.x .o. oo.
    //      case 16667: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // ..x .o. oo.
    //      case 16668: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .o. oo.
    //      case 16669: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. oo.
    //      case 16670: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .o. oo.
    //      case 16671: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. oo.
    //      case 16672: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. oo.
    //      case 16673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. oo.
    //      case 16674: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .o. oo.
    //      case 16675: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. oo.
    //      case 16676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .o. oo.
    //      case 16677: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xx. .o. oo.
    //      case 16678: Assert::IsTrue(v == PositionValue(-  473                         )); break;  // ox. .o. oo.
    //      case 16679: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // .x. .o. oo.
    //      case 16680: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .o. oo.
    //      case 16681: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. oo.
    //      case 16682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .o. oo.
    //      case 16683: Assert::IsTrue(v == PositionValue(-  354                         )); break;  // x.. .o. oo.
    //      case 16684: Assert::IsTrue(v == PositionValue(-  527                         )); break;  // o.. .o. oo.
    //      case 16685: Assert::IsTrue(v == PositionValue(-  397                         )); break;  // ... .o. oo.
    //      case 16686: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. oo.
    //      case 16687: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // oxx x.. oo.
    //      case 16688: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .xx x.. oo.
    //      case 16689: Assert::IsTrue(v == PositionValue(-   11                         )); break;  // xox x.. oo.
    //      case 16690: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oox x.. oo.
    //      case 16691: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // .ox x.. oo.
    //      case 16692: Assert::IsTrue(v == PositionValue(+   34                         )); break;  // x.x x.. oo.
    //      case 16693: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // o.x x.. oo.
    //      case 16694: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // ..x x.. oo.
    //      case 16695: Assert::IsTrue(v == PositionValue(+  149                         )); break;  // xxo x.. oo.
    //      case 16696: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // oxo x.. oo.
    //      case 16697: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // .xo x.. oo.
    //      case 16698: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // xoo x.. oo.
    //      case 16699: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. oo.
    //      case 16700: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // .oo x.. oo.
    //      case 16701: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // x.o x.. oo.
    //      case 16702: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // o.o x.. oo.
    //      case 16703: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ..o x.. oo.
    //      case 16704: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xx. x.. oo.
    //      case 16705: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // ox. x.. oo.
    //      case 16706: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // .x. x.. oo.
    //      case 16707: Assert::IsTrue(v == PositionValue(-   54                         )); break;  // xo. x.. oo.
    //      case 16708: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // oo. x.. oo.
    //      case 16709: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .o. x.. oo.
    //      case 16710: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // x.. x.. oo.
    //      case 16711: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // o.. x.. oo.
    //      case 16712: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ... x.. oo.
    //      case 16713: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. oo.
    //      case 16714: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.. oo.
    //      case 16715: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // .xx o.. oo.
    //      case 16716: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // xox o.. oo.
    //      case 16717: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.. oo.
    //      case 16718: Assert::IsTrue(v == PositionValue(-  465                         )); break;  // .ox o.. oo.
    //      case 16719: Assert::IsTrue(v == PositionValue(-  290                         )); break;  // x.x o.. oo.
    //      case 16720: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.. oo.
    //      case 16721: Assert::IsTrue(v == PositionValue(-  342                         )); break;  // ..x o.. oo.
    //      case 16722: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // xxo o.. oo.
    //      case 16723: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.. oo.
    //      case 16724: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // .xo o.. oo.
    //      case 16725: Assert::IsTrue(v == PositionValue(-  577                         )); break;  // xoo o.. oo.
    //      case 16726: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. oo.
    //      case 16727: Assert::IsTrue(v == PositionValue(-  638                         )); break;  // .oo o.. oo.
    //      case 16728: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // x.o o.. oo.
    //      case 16729: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.. oo.
    //      case 16730: Assert::IsTrue(v == PositionValue(-  428                         )); break;  // ..o o.. oo.
    //      case 16731: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xx. o.. oo.
    //      case 16732: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.. oo.
    //      case 16733: Assert::IsTrue(v == PositionValue(-  340                         )); break;  // .x. o.. oo.
    //      case 16734: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // xo. o.. oo.
    //      case 16735: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.. oo.
    //      case 16736: Assert::IsTrue(v == PositionValue(-  508                         )); break;  // .o. o.. oo.
    //      case 16737: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // x.. o.. oo.
    //      case 16738: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.. oo.
    //      case 16739: Assert::IsTrue(v == PositionValue(-  385                         )); break;  // ... o.. oo.
    //      case 16740: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... oo.
    //      case 16741: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // oxx ... oo.
    //      case 16742: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xx ... oo.
    //      case 16743: Assert::IsTrue(v == PositionValue(-  134                         )); break;  // xox ... oo.
    //      case 16744: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // oox ... oo.
    //      case 16745: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // .ox ... oo.
    //      case 16746: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // x.x ... oo.
    //      case 16747: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // o.x ... oo.
    //      case 16748: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // ..x ... oo.
    //      case 16749: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // xxo ... oo.
    //      case 16750: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // oxo ... oo.
    //      case 16751: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .xo ... oo.
    //      case 16752: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // xoo ... oo.
    //      case 16753: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... oo.
    //      case 16754: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // .oo ... oo.
    //      case 16755: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // x.o ... oo.
    //      case 16756: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // o.o ... oo.
    //      case 16757: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // ..o ... oo.
    //      case 16758: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xx. ... oo.
    //      case 16759: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ox. ... oo.
    //      case 16760: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .x. ... oo.
    //      case 16761: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // xo. ... oo.
    //      case 16762: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // oo. ... oo.
    //      case 16763: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .o. ... oo.
    //      case 16764: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // x.. ... oo.
    //      case 16765: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // o.. ... oo.
    //      case 16766: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // ... ... oo.
    //      case 16767: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx .o.
    //      case 16768: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx .o.
    //      case 16769: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx .o.
    //      case 16770: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx .o.
    //      case 16771: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx .o.
    //      case 16772: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx .o.
    //      case 16773: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx .o.
    //      case 16774: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx .o.
    //      case 16775: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx .o.
    //      case 16776: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx .o.
    //      case 16777: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx .o.
    //      case 16778: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx .o.
    //      case 16779: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx .o.
    //      case 16780: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx .o.
    //      case 16781: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx .o.
    //      case 16782: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx .o.
    //      case 16783: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx .o.
    //      case 16784: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx .o.
    //      case 16785: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx .o.
    //      case 16786: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx .o.
    //      case 16787: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx .o.
    //      case 16788: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx .o.
    //      case 16789: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx .o.
    //      case 16790: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx .o.
    //      case 16791: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx .o.
    //      case 16792: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx .o.
    //      case 16793: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx .o.
    //      case 16794: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx .o.
    //      case 16795: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // oxx oxx .o.
    //      case 16796: Assert::IsTrue(v == PositionValue(+  508                         )); break;  // .xx oxx .o.
    //      case 16797: Assert::IsTrue(v == PositionValue(+  227                         )); break;  // xox oxx .o.
    //      case 16798: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // oox oxx .o.
    //      case 16799: Assert::IsTrue(v == PositionValue(+   97                         )); break;  // .ox oxx .o.
    //      case 16800: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // x.x oxx .o.
    //      case 16801: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // o.x oxx .o.
    //      case 16802: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // ..x oxx .o.
    //      case 16803: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // xxo oxx .o.
    //      case 16804: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // oxo oxx .o.
    //      case 16805: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // .xo oxx .o.
    //      case 16806: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // xoo oxx .o.
    //      case 16807: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx .o.
    //      case 16808: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .oo oxx .o.
    //      case 16809: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // x.o oxx .o.
    //      case 16810: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.o oxx .o.
    //      case 16811: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ..o oxx .o.
    //      case 16812: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // xx. oxx .o.
    //      case 16813: Assert::IsTrue(v == PositionValue(+   74                         )); break;  // ox. oxx .o.
    //      case 16814: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // .x. oxx .o.
    //      case 16815: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xo. oxx .o.
    //      case 16816: Assert::IsTrue(v == PositionValue(-  337                         )); break;  // oo. oxx .o.
    //      case 16817: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // .o. oxx .o.
    //      case 16818: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // x.. oxx .o.
    //      case 16819: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // o.. oxx .o.
    //      case 16820: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // ... oxx .o.
    //      case 16821: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx .o.
    //      case 16822: Assert::IsTrue(v == PositionValue(+  588                         )); break;  // oxx .xx .o.
    //      case 16823: Assert::IsTrue(v == PositionValue(+  640                         )); break;  // .xx .xx .o.
    //      case 16824: Assert::IsTrue(v == PositionValue(+  437                         )); break;  // xox .xx .o.
    //      case 16825: Assert::IsTrue(v == PositionValue(+  186                         )); break;  // oox .xx .o.
    //      case 16826: Assert::IsTrue(v == PositionValue(+  307                         )); break;  // .ox .xx .o.
    //      case 16827: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // x.x .xx .o.
    //      case 16828: Assert::IsTrue(v == PositionValue(+  309                         )); break;  // o.x .xx .o.
    //      case 16829: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // ..x .xx .o.
    //      case 16830: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // xxo .xx .o.
    //      case 16831: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // oxo .xx .o.
    //      case 16832: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .xo .xx .o.
    //      case 16833: Assert::IsTrue(v == PositionValue(+   99                         )); break;  // xoo .xx .o.
    //      case 16834: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx .o.
    //      case 16835: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .oo .xx .o.
    //      case 16836: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // x.o .xx .o.
    //      case 16837: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // o.o .xx .o.
    //      case 16838: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ..o .xx .o.
    //      case 16839: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // xx. .xx .o.
    //      case 16840: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // ox. .xx .o.
    //      case 16841: Assert::IsTrue(v == PositionValue(+  336                         )); break;  // .x. .xx .o.
    //      case 16842: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // xo. .xx .o.
    //      case 16843: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oo. .xx .o.
    //      case 16844: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .o. .xx .o.
    //      case 16845: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // x.. .xx .o.
    //      case 16846: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // o.. .xx .o.
    //      case 16847: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // ... .xx .o.
    //      case 16848: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox .o.
    //      case 16849: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // oxx xox .o.
    //      case 16850: Assert::IsTrue(v == PositionValue(+  337                         )); break;  // .xx xox .o.
    //      case 16851: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xox .o.
    //      case 16852: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xox .o.
    //      case 16853: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xox .o.
    //      case 16854: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.x xox .o.
    //      case 16855: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // o.x xox .o.
    //      case 16856: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ..x xox .o.
    //      case 16857: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // xxo xox .o.
    //      case 16858: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // oxo xox .o.
    //      case 16859: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .xo xox .o.
    //      case 16860: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xox .o.
    //      case 16861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox .o.
    //      case 16862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox .o.
    //      case 16863: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // x.o xox .o.
    //      case 16864: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // o.o xox .o.
    //      case 16865: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // ..o xox .o.
    //      case 16866: Assert::IsTrue(v == PositionValue(+  337                         )); break;  // xx. xox .o.
    //      case 16867: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ox. xox .o.
    //      case 16868: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // .x. xox .o.
    //      case 16869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xox .o.
    //      case 16870: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xox .o.
    //      case 16871: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xox .o.
    //      case 16872: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.. xox .o.
    //      case 16873: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // o.. xox .o.
    //      case 16874: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // ... xox .o.
    //      case 16875: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox .o.
    //      case 16876: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // oxx oox .o.
    //      case 16877: Assert::IsTrue(v == PositionValue(+   13                         )); break;  // .xx oox .o.
    //      case 16878: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oox .o.
    //      case 16879: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox .o.
    //      case 16880: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oox .o.
    //      case 16881: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // x.x oox .o.
    //      case 16882: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // o.x oox .o.
    //      case 16883: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // ..x oox .o.
    //      case 16884: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xxo oox .o.
    //      case 16885: Assert::IsTrue(v == PositionValue(-  551                         )); break;  // oxo oox .o.
    //      case 16886: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // .xo oox .o.
    //      case 16887: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox .o.
    //      case 16888: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox .o.
    //      case 16889: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox .o.
    //      case 16890: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // x.o oox .o.
    //      case 16891: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // o.o oox .o.
    //      case 16892: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // ..o oox .o.
    //      case 16893: Assert::IsTrue(v == PositionValue(-   74                         )); break;  // xx. oox .o.
    //      case 16894: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // ox. oox .o.
    //      case 16895: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // .x. oox .o.
    //      case 16896: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oox .o.
    //      case 16897: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox .o.
    //      case 16898: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oox .o.
    //      case 16899: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // x.. oox .o.
    //      case 16900: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // o.. oox .o.
    //      case 16901: Assert::IsTrue(v == PositionValue(-  336                         )); break;  // ... oox .o.
    //      case 16902: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox .o.
    //      case 16903: Assert::IsTrue(v == PositionValue(+   75                         )); break;  // oxx .ox .o.
    //      case 16904: Assert::IsTrue(v == PositionValue(+  214                         )); break;  // .xx .ox .o.
    //      case 16905: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .ox .o.
    //      case 16906: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .ox .o.
    //      case 16907: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .ox .o.
    //      case 16908: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // x.x .ox .o.
    //      case 16909: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // o.x .ox .o.
    //      case 16910: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // ..x .ox .o.
    //      case 16911: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // xxo .ox .o.
    //      case 16912: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // oxo .ox .o.
    //      case 16913: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .xo .ox .o.
    //      case 16914: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox .o.
    //      case 16915: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox .o.
    //      case 16916: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox .o.
    //      case 16917: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // x.o .ox .o.
    //      case 16918: Assert::IsTrue(v == PositionValue(-  395                         )); break;  // o.o .ox .o.
    //      case 16919: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // ..o .ox .o.
    //      case 16920: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // xx. .ox .o.
    //      case 16921: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ox. .ox .o.
    //      case 16922: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // .x. .ox .o.
    //      case 16923: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .ox .o.
    //      case 16924: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .ox .o.
    //      case 16925: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .ox .o.
    //      case 16926: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // x.. .ox .o.
    //      case 16927: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // o.. .ox .o.
    //      case 16928: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // ... .ox .o.
    //      case 16929: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x .o.
    //      case 16930: Assert::IsTrue(v == PositionValue(+  411                         )); break;  // oxx x.x .o.
    //      case 16931: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // .xx x.x .o.
    //      case 16932: Assert::IsTrue(v == PositionValue(+  260                         )); break;  // xox x.x .o.
    //      case 16933: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // oox x.x .o.
    //      case 16934: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .ox x.x .o.
    //      case 16935: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // x.x x.x .o.
    //      case 16936: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // o.x x.x .o.
    //      case 16937: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // ..x x.x .o.
    //      case 16938: Assert::IsTrue(v == PositionValue(+  411                         )); break;  // xxo x.x .o.
    //      case 16939: Assert::IsTrue(v == PositionValue(+  160                         )); break;  // oxo x.x .o.
    //      case 16940: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // .xo x.x .o.
    //      case 16941: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // xoo x.x .o.
    //      case 16942: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x .o.
    //      case 16943: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .oo x.x .o.
    //      case 16944: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // x.o x.x .o.
    //      case 16945: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.o x.x .o.
    //      case 16946: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ..o x.x .o.
    //      case 16947: Assert::IsTrue(v == PositionValue(+  463                         )); break;  // xx. x.x .o.
    //      case 16948: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // ox. x.x .o.
    //      case 16949: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // .x. x.x .o.
    //      case 16950: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xo. x.x .o.
    //      case 16951: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oo. x.x .o.
    //      case 16952: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .o. x.x .o.
    //      case 16953: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // x.. x.x .o.
    //      case 16954: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.. x.x .o.
    //      case 16955: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ... x.x .o.
    //      case 16956: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x .o.
    //      case 16957: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // oxx o.x .o.
    //      case 16958: Assert::IsTrue(v == PositionValue(+  217                         )); break;  // .xx o.x .o.
    //      case 16959: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // xox o.x .o.
    //      case 16960: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // oox o.x .o.
    //      case 16961: Assert::IsTrue(v == PositionValue(-  116                         )); break;  // .ox o.x .o.
    //      case 16962: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // x.x o.x .o.
    //      case 16963: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.x o.x .o.
    //      case 16964: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // ..x o.x .o.
    //      case 16965: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // xxo o.x .o.
    //      case 16966: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // oxo o.x .o.
    //      case 16967: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .xo o.x .o.
    //      case 16968: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // xoo o.x .o.
    //      case 16969: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x .o.
    //      case 16970: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // .oo o.x .o.
    //      case 16971: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // x.o o.x .o.
    //      case 16972: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // o.o o.x .o.
    //      case 16973: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // ..o o.x .o.
    //      case 16974: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xx. o.x .o.
    //      case 16975: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ox. o.x .o.
    //      case 16976: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .x. o.x .o.
    //      case 16977: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // xo. o.x .o.
    //      case 16978: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // oo. o.x .o.
    //      case 16979: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // .o. o.x .o.
    //      case 16980: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // x.. o.x .o.
    //      case 16981: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // o.. o.x .o.
    //      case 16982: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // ... o.x .o.
    //      case 16983: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x .o.
    //      case 16984: Assert::IsTrue(v == PositionValue(+  288                         )); break;  // oxx ..x .o.
    //      case 16985: Assert::IsTrue(v == PositionValue(+  340                         )); break;  // .xx ..x .o.
    //      case 16986: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // xox ..x .o.
    //      case 16987: Assert::IsTrue(v == PositionValue(-   36                         )); break;  // oox ..x .o.
    //      case 16988: Assert::IsTrue(v == PositionValue(+   85                         )); break;  // .ox ..x .o.
    //      case 16989: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // x.x ..x .o.
    //      case 16990: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // o.x ..x .o.
    //      case 16991: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // ..x ..x .o.
    //      case 16992: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xxo ..x .o.
    //      case 16993: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // oxo ..x .o.
    //      case 16994: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .xo ..x .o.
    //      case 16995: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xoo ..x .o.
    //      case 16996: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x .o.
    //      case 16997: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .oo ..x .o.
    //      case 16998: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o ..x .o.
    //      case 16999: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.o ..x .o.
    //      case 17000: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ..o ..x .o.
    //      case 17001: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xx. ..x .o.
    //      case 17002: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ox. ..x .o.
    //      case 17003: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .x. ..x .o.
    //      case 17004: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xo. ..x .o.
    //      case 17005: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // oo. ..x .o.
    //      case 17006: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .o. ..x .o.
    //      case 17007: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.. ..x .o.
    //      case 17008: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.. ..x .o.
    //      case 17009: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... ..x .o.
    //      case 17010: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo .o.
    //      case 17011: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // oxx xxo .o.
    //      case 17012: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .xx xxo .o.
    //      case 17013: Assert::IsTrue(v == PositionValue(+  227                         )); break;  // xox xxo .o.
    //      case 17014: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // oox xxo .o.
    //      case 17015: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .ox xxo .o.
    //      case 17016: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // x.x xxo .o.
    //      case 17017: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // o.x xxo .o.
    //      case 17018: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ..x xxo .o.
    //      case 17019: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // xxo xxo .o.
    //      case 17020: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // oxo xxo .o.
    //      case 17021: Assert::IsTrue(v == PositionValue(+   74                         )); break;  // .xo xxo .o.
    //      case 17022: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // xoo xxo .o.
    //      case 17023: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo .o.
    //      case 17024: Assert::IsTrue(v == PositionValue(-  337                         )); break;  // .oo xxo .o.
    //      case 17025: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // x.o xxo .o.
    //      case 17026: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.o xxo .o.
    //      case 17027: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // ..o xxo .o.
    //      case 17028: Assert::IsTrue(v == PositionValue(+  508                         )); break;  // xx. xxo .o.
    //      case 17029: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // ox. xxo .o.
    //      case 17030: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // .x. xxo .o.
    //      case 17031: Assert::IsTrue(v == PositionValue(+   97                         )); break;  // xo. xxo .o.
    //      case 17032: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oo. xxo .o.
    //      case 17033: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // .o. xxo .o.
    //      case 17034: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // x.. xxo .o.
    //      case 17035: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.. xxo .o.
    //      case 17036: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // ... xxo .o.
    //      case 17037: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo .o.
    //      case 17038: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // oxx oxo .o.
    //      case 17039: Assert::IsTrue(v == PositionValue(+   97                         )); break;  // .xx oxo .o.
    //      case 17040: Assert::IsTrue(v == PositionValue(-  184                         )); break;  // xox oxo .o.
    //      case 17041: Assert::IsTrue(v == PositionValue(-  522                         )); break;  // oox oxo .o.
    //      case 17042: Assert::IsTrue(v == PositionValue(-  314                         )); break;  // .ox oxo .o.
    //      case 17043: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // x.x oxo .o.
    //      case 17044: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // o.x oxo .o.
    //      case 17045: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // ..x oxo .o.
    //      case 17046: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // xxo oxo .o.
    //      case 17047: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // oxo oxo .o.
    //      case 17048: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .xo oxo .o.
    //      case 17049: Assert::IsTrue(v == PositionValue(-  522                         )); break;  // xoo oxo .o.
    //      case 17050: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo .o.
    //      case 17051: Assert::IsTrue(v == PositionValue(-  661                         )); break;  // .oo oxo .o.
    //      case 17052: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // x.o oxo .o.
    //      case 17053: Assert::IsTrue(v == PositionValue(-  503                         )); break;  // o.o oxo .o.
    //      case 17054: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // ..o oxo .o.
    //      case 17055: Assert::IsTrue(v == PositionValue(+   97                         )); break;  // xx. oxo .o.
    //      case 17056: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // ox. oxo .o.
    //      case 17057: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // .x. oxo .o.
    //      case 17058: Assert::IsTrue(v == PositionValue(-  314                         )); break;  // xo. oxo .o.
    //      case 17059: Assert::IsTrue(v == PositionValue(-  661                         )); break;  // oo. oxo .o.
    //      case 17060: Assert::IsTrue(v == PositionValue(-  444                         )); break;  // .o. oxo .o.
    //      case 17061: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // x.. oxo .o.
    //      case 17062: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // o.. oxo .o.
    //      case 17063: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // ... oxo .o.
    //      case 17064: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo .o.
    //      case 17065: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // oxx .xo .o.
    //      case 17066: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .xx .xo .o.
    //      case 17067: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // xox .xo .o.
    //      case 17068: Assert::IsTrue(v == PositionValue(-  234                         )); break;  // oox .xo .o.
    //      case 17069: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // .ox .xo .o.
    //      case 17070: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // x.x .xo .o.
    //      case 17071: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // o.x .xo .o.
    //      case 17072: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // ..x .xo .o.
    //      case 17073: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xxo .xo .o.
    //      case 17074: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oxo .xo .o.
    //      case 17075: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // .xo .xo .o.
    //      case 17076: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // xoo .xo .o.
    //      case 17077: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo .o.
    //      case 17078: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // .oo .xo .o.
    //      case 17079: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // x.o .xo .o.
    //      case 17080: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // o.o .xo .o.
    //      case 17081: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // ..o .xo .o.
    //      case 17082: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // xx. .xo .o.
    //      case 17083: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ox. .xo .o.
    //      case 17084: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // .x. .xo .o.
    //      case 17085: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // xo. .xo .o.
    //      case 17086: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // oo. .xo .o.
    //      case 17087: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // .o. .xo .o.
    //      case 17088: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // x.. .xo .o.
    //      case 17089: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // o.. .xo .o.
    //      case 17090: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // ... .xo .o.
    //      case 17091: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo .o.
    //      case 17092: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // oxx xoo .o.
    //      case 17093: Assert::IsTrue(v == PositionValue(-   74                         )); break;  // .xx xoo .o.
    //      case 17094: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xoo .o.
    //      case 17095: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xoo .o.
    //      case 17096: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xoo .o.
    //      case 17097: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // x.x xoo .o.
    //      case 17098: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // o.x xoo .o.
    //      case 17099: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // ..x xoo .o.
    //      case 17100: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xxo xoo .o.
    //      case 17101: Assert::IsTrue(v == PositionValue(-  551                         )); break;  // oxo xoo .o.
    //      case 17102: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .xo xoo .o.
    //      case 17103: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo .o.
    //      case 17104: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo .o.
    //      case 17105: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo .o.
    //      case 17106: Assert::IsTrue(v == PositionValue(-  423                         )); break;  // x.o xoo .o.
    //      case 17107: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // o.o xoo .o.
    //      case 17108: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // ..o xoo .o.
    //      case 17109: Assert::IsTrue(v == PositionValue(+   13                         )); break;  // xx. xoo .o.
    //      case 17110: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // ox. xoo .o.
    //      case 17111: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // .x. xoo .o.
    //      case 17112: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xoo .o.
    //      case 17113: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xoo .o.
    //      case 17114: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xoo .o.
    //      case 17115: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // x.. xoo .o.
    //      case 17116: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // o.. xoo .o.
    //      case 17117: Assert::IsTrue(v == PositionValue(-  336                         )); break;  // ... xoo .o.
    //      case 17118: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo .o.
    //      case 17119: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo .o.
    //      case 17120: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo .o.
    //      case 17121: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo .o.
    //      case 17122: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo .o.
    //      case 17123: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo .o.
    //      case 17124: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo .o.
    //      case 17125: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo .o.
    //      case 17126: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo .o.
    //      case 17127: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo .o.
    //      case 17128: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo .o.
    //      case 17129: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo .o.
    //      case 17130: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo .o.
    //      case 17131: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo .o.
    //      case 17132: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo .o.
    //      case 17133: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo .o.
    //      case 17134: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo .o.
    //      case 17135: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo .o.
    //      case 17136: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo .o.
    //      case 17137: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo .o.
    //      case 17138: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo .o.
    //      case 17139: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo .o.
    //      case 17140: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo .o.
    //      case 17141: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo .o.
    //      case 17142: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo .o.
    //      case 17143: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo .o.
    //      case 17144: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo .o.
    //      case 17145: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo .o.
    //      case 17146: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // oxx .oo .o.
    //      case 17147: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // .xx .oo .o.
    //      case 17148: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .oo .o.
    //      case 17149: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .oo .o.
    //      case 17150: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .oo .o.
    //      case 17151: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // x.x .oo .o.
    //      case 17152: Assert::IsTrue(v == PositionValue(-  477                         )); break;  // o.x .oo .o.
    //      case 17153: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // ..x .oo .o.
    //      case 17154: Assert::IsTrue(v == PositionValue(-  432                         )); break;  // xxo .oo .o.
    //      case 17155: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // oxo .oo .o.
    //      case 17156: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // .xo .oo .o.
    //      case 17157: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo .o.
    //      case 17158: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo .o.
    //      case 17159: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo .o.
    //      case 17160: Assert::IsTrue(v == PositionValue(-  564                         )); break;  // x.o .oo .o.
    //      case 17161: Assert::IsTrue(v == PositionValue(-  737                         )); break;  // o.o .oo .o.
    //      case 17162: Assert::IsTrue(v == PositionValue(-  607                         )); break;  // ..o .oo .o.
    //      case 17163: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // xx. .oo .o.
    //      case 17164: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // ox. .oo .o.
    //      case 17165: Assert::IsTrue(v == PositionValue(-  336                         )); break;  // .x. .oo .o.
    //      case 17166: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .oo .o.
    //      case 17167: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .oo .o.
    //      case 17168: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .oo .o.
    //      case 17169: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // x.. .oo .o.
    //      case 17170: Assert::IsTrue(v == PositionValue(-  520                         )); break;  // o.. .oo .o.
    //      case 17171: Assert::IsTrue(v == PositionValue(-  390                         )); break;  // ... .oo .o.
    //      case 17172: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o .o.
    //      case 17173: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // oxx x.o .o.
    //      case 17174: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .xx x.o .o.
    //      case 17175: Assert::IsTrue(v == PositionValue(-   73                         )); break;  // xox x.o .o.
    //      case 17176: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // oox x.o .o.
    //      case 17177: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // .ox x.o .o.
    //      case 17178: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // x.x x.o .o.
    //      case 17179: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.x x.o .o.
    //      case 17180: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // ..x x.o .o.
    //      case 17181: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // xxo x.o .o.
    //      case 17182: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // oxo x.o .o.
    //      case 17183: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .xo x.o .o.
    //      case 17184: Assert::IsTrue(v == PositionValue(-  324                         )); break;  // xoo x.o .o.
    //      case 17185: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o .o.
    //      case 17186: Assert::IsTrue(v == PositionValue(-  463                         )); break;  // .oo x.o .o.
    //      case 17187: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // x.o x.o .o.
    //      case 17188: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // o.o x.o .o.
    //      case 17189: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // ..o x.o .o.
    //      case 17190: Assert::IsTrue(v == PositionValue(+  217                         )); break;  // xx. x.o .o.
    //      case 17191: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ox. x.o .o.
    //      case 17192: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .x. x.o .o.
    //      case 17193: Assert::IsTrue(v == PositionValue(-  116                         )); break;  // xo. x.o .o.
    //      case 17194: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // oo. x.o .o.
    //      case 17195: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // .o. x.o .o.
    //      case 17196: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // x.. x.o .o.
    //      case 17197: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // o.. x.o .o.
    //      case 17198: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // ... x.o .o.
    //      case 17199: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o .o.
    //      case 17200: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // oxx o.o .o.
    //      case 17201: Assert::IsTrue(v == PositionValue(-  116                         )); break;  // .xx o.o .o.
    //      case 17202: Assert::IsTrue(v == PositionValue(-  406                         )); break;  // xox o.o .o.
    //      case 17203: Assert::IsTrue(v == PositionValue(-  657                         )); break;  // oox o.o .o.
    //      case 17204: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // .ox o.o .o.
    //      case 17205: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // x.x o.o .o.
    //      case 17206: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // o.x o.o .o.
    //      case 17207: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // ..x o.o .o.
    //      case 17208: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // xxo o.o .o.
    //      case 17209: Assert::IsTrue(v == PositionValue(-  506                         )); break;  // oxo o.o .o.
    //      case 17210: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // .xo o.o .o.
    //      case 17211: Assert::IsTrue(v == PositionValue(-  657                         )); break;  // xoo o.o .o.
    //      case 17212: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o .o.
    //      case 17213: Assert::IsTrue(v == PositionValue(-  709                         )); break;  // .oo o.o .o.
    //      case 17214: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // x.o o.o .o.
    //      case 17215: Assert::IsTrue(v == PositionValue(-  551                         )); break;  // o.o o.o .o.
    //      case 17216: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // ..o o.o .o.
    //      case 17217: Assert::IsTrue(v == PositionValue(-  116                         )); break;  // xx. o.o .o.
    //      case 17218: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // ox. o.o .o.
    //      case 17219: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // .x. o.o .o.
    //      case 17220: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // xo. o.o .o.
    //      case 17221: Assert::IsTrue(v == PositionValue(-  709                         )); break;  // oo. o.o .o.
    //      case 17222: Assert::IsTrue(v == PositionValue(-  492                         )); break;  // .o. o.o .o.
    //      case 17223: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // x.. o.o .o.
    //      case 17224: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // o.. o.o .o.
    //      case 17225: Assert::IsTrue(v == PositionValue(-  291                         )); break;  // ... o.o .o.
    //      case 17226: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o .o.
    //      case 17227: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // oxx ..o .o.
    //      case 17228: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // .xx ..o .o.
    //      case 17229: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // xox ..o .o.
    //      case 17230: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // oox ..o .o.
    //      case 17231: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // .ox ..o .o.
    //      case 17232: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // x.x ..o .o.
    //      case 17233: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // o.x ..o .o.
    //      case 17234: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // ..x ..o .o.
    //      case 17235: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // xxo ..o .o.
    //      case 17236: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // oxo ..o .o.
    //      case 17237: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .xo ..o .o.
    //      case 17238: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // xoo ..o .o.
    //      case 17239: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o .o.
    //      case 17240: Assert::IsTrue(v == PositionValue(-  508                         )); break;  // .oo ..o .o.
    //      case 17241: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // x.o ..o .o.
    //      case 17242: Assert::IsTrue(v == PositionValue(-  341                         )); break;  // o.o ..o .o.
    //      case 17243: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // ..o ..o .o.
    //      case 17244: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // xx. ..o .o.
    //      case 17245: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // ox. ..o .o.
    //      case 17246: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .x. ..o .o.
    //      case 17247: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // xo. ..o .o.
    //      case 17248: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // oo. ..o .o.
    //      case 17249: Assert::IsTrue(v == PositionValue(-  291                         )); break;  // .o. ..o .o.
    //      case 17250: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // x.. ..o .o.
    //      case 17251: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // o.. ..o .o.
    //      case 17252: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ... ..o .o.
    //      case 17253: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. .o.
    //      case 17254: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // oxx xx. .o.
    //      case 17255: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // .xx xx. .o.
    //      case 17256: Assert::IsTrue(v == PositionValue(+  437                         )); break;  // xox xx. .o.
    //      case 17257: Assert::IsTrue(v == PositionValue(+   99                         )); break;  // oox xx. .o.
    //      case 17258: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .ox xx. .o.
    //      case 17259: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // x.x xx. .o.
    //      case 17260: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // o.x xx. .o.
    //      case 17261: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // ..x xx. .o.
    //      case 17262: Assert::IsTrue(v == PositionValue(+  588                         )); break;  // xxo xx. .o.
    //      case 17263: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // oxo xx. .o.
    //      case 17264: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .xo xx. .o.
    //      case 17265: Assert::IsTrue(v == PositionValue(+  186                         )); break;  // xoo xx. .o.
    //      case 17266: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. .o.
    //      case 17267: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .oo xx. .o.
    //      case 17268: Assert::IsTrue(v == PositionValue(+  309                         )); break;  // x.o xx. .o.
    //      case 17269: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // o.o xx. .o.
    //      case 17270: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ..o xx. .o.
    //      case 17271: Assert::IsTrue(v == PositionValue(+  640                         )); break;  // xx. xx. .o.
    //      case 17272: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // ox. xx. .o.
    //      case 17273: Assert::IsTrue(v == PositionValue(+  336                         )); break;  // .x. xx. .o.
    //      case 17274: Assert::IsTrue(v == PositionValue(+  307                         )); break;  // xo. xx. .o.
    //      case 17275: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oo. xx. .o.
    //      case 17276: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .o. xx. .o.
    //      case 17277: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // x.. xx. .o.
    //      case 17278: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // o.. xx. .o.
    //      case 17279: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // ... xx. .o.
    //      case 17280: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. .o.
    //      case 17281: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // oxx ox. .o.
    //      case 17282: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .xx ox. .o.
    //      case 17283: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // xox ox. .o.
    //      case 17284: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // oox ox. .o.
    //      case 17285: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // .ox ox. .o.
    //      case 17286: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // x.x ox. .o.
    //      case 17287: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // o.x ox. .o.
    //      case 17288: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // ..x ox. .o.
    //      case 17289: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // xxo ox. .o.
    //      case 17290: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oxo ox. .o.
    //      case 17291: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .xo ox. .o.
    //      case 17292: Assert::IsTrue(v == PositionValue(-  234                         )); break;  // xoo ox. .o.
    //      case 17293: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. .o.
    //      case 17294: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // .oo ox. .o.
    //      case 17295: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // x.o ox. .o.
    //      case 17296: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // o.o ox. .o.
    //      case 17297: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // ..o ox. .o.
    //      case 17298: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // xx. ox. .o.
    //      case 17299: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // ox. ox. .o.
    //      case 17300: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // .x. ox. .o.
    //      case 17301: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // xo. ox. .o.
    //      case 17302: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // oo. ox. .o.
    //      case 17303: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // .o. ox. .o.
    //      case 17304: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // x.. ox. .o.
    //      case 17305: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // o.. ox. .o.
    //      case 17306: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // ... ox. .o.
    //      case 17307: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. .o.
    //      case 17308: Assert::IsTrue(v == PositionValue(+  291                         )); break;  // oxx .x. .o.
    //      case 17309: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // .xx .x. .o.
    //      case 17310: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // xox .x. .o.
    //      case 17311: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // oox .x. .o.
    //      case 17312: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // .ox .x. .o.
    //      case 17313: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // x.x .x. .o.
    //      case 17314: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // o.x .x. .o.
    //      case 17315: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ..x .x. .o.
    //      case 17316: Assert::IsTrue(v == PositionValue(+  291                         )); break;  // xxo .x. .o.
    //      case 17317: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oxo .x. .o.
    //      case 17318: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // .xo .x. .o.
    //      case 17319: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // xoo .x. .o.
    //      case 17320: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. .o.
    //      case 17321: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // .oo .x. .o.
    //      case 17322: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // x.o .x. .o.
    //      case 17323: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // o.o .x. .o.
    //      case 17324: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ..o .x. .o.
    //      case 17325: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // xx. .x. .o.
    //      case 17326: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // ox. .x. .o.
    //      case 17327: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // .x. .x. .o.
    //      case 17328: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // xo. .x. .o.
    //      case 17329: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // oo. .x. .o.
    //      case 17330: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // .o. .x. .o.
    //      case 17331: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // x.. .x. .o.
    //      case 17332: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.. .x. .o.
    //      case 17333: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // ... .x. .o.
    //      case 17334: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. .o.
    //      case 17335: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // oxx xo. .o.
    //      case 17336: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // .xx xo. .o.
    //      case 17337: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox xo. .o.
    //      case 17338: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox xo. .o.
    //      case 17339: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox xo. .o.
    //      case 17340: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // x.x xo. .o.
    //      case 17341: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // o.x xo. .o.
    //      case 17342: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // ..x xo. .o.
    //      case 17343: Assert::IsTrue(v == PositionValue(+   75                         )); break;  // xxo xo. .o.
    //      case 17344: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // oxo xo. .o.
    //      case 17345: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .xo xo. .o.
    //      case 17346: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xo. .o.
    //      case 17347: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. .o.
    //      case 17348: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. .o.
    //      case 17349: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // x.o xo. .o.
    //      case 17350: Assert::IsTrue(v == PositionValue(-  395                         )); break;  // o.o xo. .o.
    //      case 17351: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // ..o xo. .o.
    //      case 17352: Assert::IsTrue(v == PositionValue(+  214                         )); break;  // xx. xo. .o.
    //      case 17353: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ox. xo. .o.
    //      case 17354: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // .x. xo. .o.
    //      case 17355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. xo. .o.
    //      case 17356: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. xo. .o.
    //      case 17357: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. xo. .o.
    //      case 17358: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // x.. xo. .o.
    //      case 17359: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // o.. xo. .o.
    //      case 17360: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // ... xo. .o.
    //      case 17361: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. .o.
    //      case 17362: Assert::IsTrue(v == PositionValue(-  432                         )); break;  // oxx oo. .o.
    //      case 17363: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // .xx oo. .o.
    //      case 17364: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox oo. .o.
    //      case 17365: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. .o.
    //      case 17366: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox oo. .o.
    //      case 17367: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // x.x oo. .o.
    //      case 17368: Assert::IsTrue(v == PositionValue(-  564                         )); break;  // o.x oo. .o.
    //      case 17369: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // ..x oo. .o.
    //      case 17370: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // xxo oo. .o.
    //      case 17371: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // oxo oo. .o.
    //      case 17372: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // .xo oo. .o.
    //      case 17373: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. .o.
    //      case 17374: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. .o.
    //      case 17375: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. .o.
    //      case 17376: Assert::IsTrue(v == PositionValue(-  477                         )); break;  // x.o oo. .o.
    //      case 17377: Assert::IsTrue(v == PositionValue(-  737                         )); break;  // o.o oo. .o.
    //      case 17378: Assert::IsTrue(v == PositionValue(-  520                         )); break;  // ..o oo. .o.
    //      case 17379: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // xx. oo. .o.
    //      case 17380: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // ox. oo. .o.
    //      case 17381: Assert::IsTrue(v == PositionValue(-  336                         )); break;  // .x. oo. .o.
    //      case 17382: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. oo. .o.
    //      case 17383: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. .o.
    //      case 17384: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. oo. .o.
    //      case 17385: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // x.. oo. .o.
    //      case 17386: Assert::IsTrue(v == PositionValue(-  607                         )); break;  // o.. oo. .o.
    //      case 17387: Assert::IsTrue(v == PositionValue(-  390                         )); break;  // ... oo. .o.
    //      case 17388: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. .o.
    //      case 17389: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // oxx .o. .o.
    //      case 17390: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // .xx .o. .o.
    //      case 17391: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox .o. .o.
    //      case 17392: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox .o. .o.
    //      case 17393: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox .o. .o.
    //      case 17394: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // x.x .o. .o.
    //      case 17395: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // o.x .o. .o.
    //      case 17396: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // ..x .o. .o.
    //      case 17397: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // xxo .o. .o.
    //      case 17398: Assert::IsTrue(v == PositionValue(-  386                         )); break;  // oxo .o. .o.
    //      case 17399: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // .xo .o. .o.
    //      case 17400: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. .o.
    //      case 17401: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. .o.
    //      case 17402: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. .o.
    //      case 17403: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // x.o .o. .o.
    //      case 17404: Assert::IsTrue(v == PositionValue(-  440                         )); break;  // o.o .o. .o.
    //      case 17405: Assert::IsTrue(v == PositionValue(-  310                         )); break;  // ..o .o. .o.
    //      case 17406: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // xx. .o. .o.
    //      case 17407: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // ox. .o. .o.
    //      case 17408: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // .x. .o. .o.
    //      case 17409: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. .o. .o.
    //      case 17410: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. .o. .o.
    //      case 17411: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. .o. .o.
    //      case 17412: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // x.. .o. .o.
    //      case 17413: Assert::IsTrue(v == PositionValue(-  310                         )); break;  // o.. .o. .o.
    //      case 17414: Assert::IsTrue(v == PositionValue(-  180                         )); break;  // ... .o. .o.
    //      case 17415: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. .o.
    //      case 17416: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oxx x.. .o.
    //      case 17417: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .xx x.. .o.
    //      case 17418: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // xox x.. .o.
    //      case 17419: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // oox x.. .o.
    //      case 17420: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .ox x.. .o.
    //      case 17421: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // x.x x.. .o.
    //      case 17422: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x x.. .o.
    //      case 17423: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ..x x.. .o.
    //      case 17424: Assert::IsTrue(v == PositionValue(+  288                         )); break;  // xxo x.. .o.
    //      case 17425: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // oxo x.. .o.
    //      case 17426: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .xo x.. .o.
    //      case 17427: Assert::IsTrue(v == PositionValue(-   36                         )); break;  // xoo x.. .o.
    //      case 17428: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. .o.
    //      case 17429: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .oo x.. .o.
    //      case 17430: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // x.o x.. .o.
    //      case 17431: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.o x.. .o.
    //      case 17432: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ..o x.. .o.
    //      case 17433: Assert::IsTrue(v == PositionValue(+  340                         )); break;  // xx. x.. .o.
    //      case 17434: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ox. x.. .o.
    //      case 17435: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .x. x.. .o.
    //      case 17436: Assert::IsTrue(v == PositionValue(+   85                         )); break;  // xo. x.. .o.
    //      case 17437: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // oo. x.. .o.
    //      case 17438: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .o. x.. .o.
    //      case 17439: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // x.. x.. .o.
    //      case 17440: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.. x.. .o.
    //      case 17441: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... x.. .o.
    //      case 17442: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. .o.
    //      case 17443: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // oxx o.. .o.
    //      case 17444: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // .xx o.. .o.
    //      case 17445: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // xox o.. .o.
    //      case 17446: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // oox o.. .o.
    //      case 17447: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // .ox o.. .o.
    //      case 17448: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // x.x o.. .o.
    //      case 17449: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // o.x o.. .o.
    //      case 17450: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // ..x o.. .o.
    //      case 17451: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // xxo o.. .o.
    //      case 17452: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // oxo o.. .o.
    //      case 17453: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // .xo o.. .o.
    //      case 17454: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // xoo o.. .o.
    //      case 17455: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. .o.
    //      case 17456: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .oo o.. .o.
    //      case 17457: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // x.o o.. .o.
    //      case 17458: Assert::IsTrue(v == PositionValue(-  341                         )); break;  // o.o o.. .o.
    //      case 17459: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // ..o o.. .o.
    //      case 17460: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // xx. o.. .o.
    //      case 17461: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // ox. o.. .o.
    //      case 17462: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .x. o.. .o.
    //      case 17463: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // xo. o.. .o.
    //      case 17464: Assert::IsTrue(v == PositionValue(-  508                         )); break;  // oo. o.. .o.
    //      case 17465: Assert::IsTrue(v == PositionValue(-  291                         )); break;  // .o. o.. .o.
    //      case 17466: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // x.. o.. .o.
    //      case 17467: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // o.. o.. .o.
    //      case 17468: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ... o.. .o.
    //      case 17469: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... .o.
    //      case 17470: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // oxx ... .o.
    //      case 17471: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .xx ... .o.
    //      case 17472: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // xox ... .o.
    //      case 17473: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // oox ... .o.
    //      case 17474: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // .ox ... .o.
    //      case 17475: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.x ... .o.
    //      case 17476: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // o.x ... .o.
    //      case 17477: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ..x ... .o.
    //      case 17478: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // xxo ... .o.
    //      case 17479: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // oxo ... .o.
    //      case 17480: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .xo ... .o.
    //      case 17481: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // xoo ... .o.
    //      case 17482: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... .o.
    //      case 17483: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .oo ... .o.
    //      case 17484: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // x.o ... .o.
    //      case 17485: Assert::IsTrue(v == PositionValue(-  131                         )); break;  // o.o ... .o.
    //      case 17486: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ..o ... .o.
    //      case 17487: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xx. ... .o.
    //      case 17488: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ox. ... .o.
    //      case 17489: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .x. ... .o.
    //      case 17490: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // xo. ... .o.
    //      case 17491: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // oo. ... .o.
    //      case 17492: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .o. ... .o.
    //      case 17493: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.. ... .o.
    //      case 17494: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // o.. ... .o.
    //      case 17495: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ... ... .o.
    //      case 17496: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx x..
    //      case 17497: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx x..
    //      case 17498: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx x..
    //      case 17499: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx x..
    //      case 17500: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx x..
    //      case 17501: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx x..
    //      case 17502: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx x..
    //      case 17503: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx x..
    //      case 17504: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx x..
    //      case 17505: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx x..
    //      case 17506: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx x..
    //      case 17507: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx x..
    //      case 17508: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx x..
    //      case 17509: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx x..
    //      case 17510: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx x..
    //      case 17511: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx x..
    //      case 17512: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx x..
    //      case 17513: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx x..
    //      case 17514: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx x..
    //      case 17515: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx x..
    //      case 17516: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx x..
    //      case 17517: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx x..
    //      case 17518: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx x..
    //      case 17519: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx x..
    //      case 17520: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx x..
    //      case 17521: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx x..
    //      case 17522: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx x..
    //      case 17523: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx x..
    //      case 17524: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxx x..
    //      case 17525: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxx x..
    //      case 17526: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxx x..
    //      case 17527: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxx x..
    //      case 17528: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxx x..
    //      case 17529: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxx x..
    //      case 17530: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxx x..
    //      case 17531: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxx x..
    //      case 17532: Assert::IsTrue(v == PositionValue(+  622                         )); break;  // xxo oxx x..
    //      case 17533: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // oxo oxx x..
    //      case 17534: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // .xo oxx x..
    //      case 17535: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // xoo oxx x..
    //      case 17536: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx x..
    //      case 17537: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // .oo oxx x..
    //      case 17538: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // x.o oxx x..
    //      case 17539: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // o.o oxx x..
    //      case 17540: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // ..o oxx x..
    //      case 17541: Assert::IsTrue(v == PositionValue(+  683                         )); break;  // xx. oxx x..
    //      case 17542: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // ox. oxx x..
    //      case 17543: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // .x. oxx x..
    //      case 17544: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // xo. oxx x..
    //      case 17545: Assert::IsTrue(v == PositionValue(-   75                         )); break;  // oo. oxx x..
    //      case 17546: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .o. oxx x..
    //      case 17547: Assert::IsTrue(v == PositionValue(+  386                         )); break;  // x.. oxx x..
    //      case 17548: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // o.. oxx x..
    //      case 17549: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // ... oxx x..
    //      case 17550: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx x..
    //      case 17551: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xx x..
    //      case 17552: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xx x..
    //      case 17553: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xx x..
    //      case 17554: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xx x..
    //      case 17555: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xx x..
    //      case 17556: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xx x..
    //      case 17557: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xx x..
    //      case 17558: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xx x..
    //      case 17559: Assert::IsTrue(v == PositionValue(+  676                         )); break;  // xxo .xx x..
    //      case 17560: Assert::IsTrue(v == PositionValue(+  425                         )); break;  // oxo .xx x..
    //      case 17561: Assert::IsTrue(v == PositionValue(+  468                         )); break;  // .xo .xx x..
    //      case 17562: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // xoo .xx x..
    //      case 17563: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx x..
    //      case 17564: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // .oo .xx x..
    //      case 17565: Assert::IsTrue(v == PositionValue(+  388                         )); break;  // x.o .xx x..
    //      case 17566: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // o.o .xx x..
    //      case 17567: Assert::IsTrue(v == PositionValue(+  258                         )); break;  // ..o .xx x..
    //      case 17568: Assert::IsTrue(v == PositionValue(+  737                         )); break;  // xx. .xx x..
    //      case 17569: Assert::IsTrue(v == PositionValue(+  477                         )); break;  // ox. .xx x..
    //      case 17570: Assert::IsTrue(v == PositionValue(+  520                         )); break;  // .x. .xx x..
    //      case 17571: Assert::IsTrue(v == PositionValue(+  395                         )); break;  // xo. .xx x..
    //      case 17572: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // oo. .xx x..
    //      case 17573: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // .o. .xx x..
    //      case 17574: Assert::IsTrue(v == PositionValue(+  440                         )); break;  // x.. .xx x..
    //      case 17575: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // o.. .xx x..
    //      case 17576: Assert::IsTrue(v == PositionValue(+  310                         )); break;  // ... .xx x..
    //      case 17577: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox x..
    //      case 17578: Assert::IsTrue(v == PositionValue(+  442                         )); break;  // oxx xox x..
    //      case 17579: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // .xx xox x..
    //      case 17580: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xox x..
    //      case 17581: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // oox xox x..
    //      case 17582: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .ox xox x..
    //      case 17583: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xox x..
    //      case 17584: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // o.x xox x..
    //      case 17585: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // ..x xox x..
    //      case 17586: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xox x..
    //      case 17587: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // oxo xox x..
    //      case 17588: Assert::IsTrue(v == PositionValue(+  252                         )); break;  // .xo xox x..
    //      case 17589: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xox x..
    //      case 17590: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox x..
    //      case 17591: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .oo xox x..
    //      case 17592: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xox x..
    //      case 17593: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // o.o xox x..
    //      case 17594: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // ..o xox x..
    //      case 17595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xox x..
    //      case 17596: Assert::IsTrue(v == PositionValue(+  234                         )); break;  // ox. xox x..
    //      case 17597: Assert::IsTrue(v == PositionValue(+  373                         )); break;  // .x. xox x..
    //      case 17598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xox x..
    //      case 17599: Assert::IsTrue(v == PositionValue(-  186                         )); break;  // oo. xox x..
    //      case 17600: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .o. xox x..
    //      case 17601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xox x..
    //      case 17602: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // o.. xox x..
    //      case 17603: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // ... xox x..
    //      case 17604: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox x..
    //      case 17605: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // oxx oox x..
    //      case 17606: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // .xx oox x..
    //      case 17607: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // xox oox x..
    //      case 17608: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // oox oox x..
    //      case 17609: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .ox oox x..
    //      case 17610: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // x.x oox x..
    //      case 17611: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // o.x oox x..
    //      case 17612: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // ..x oox x..
    //      case 17613: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xxo oox x..
    //      case 17614: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // oxo oox x..
    //      case 17615: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .xo oox x..
    //      case 17616: Assert::IsTrue(v == PositionValue(-  449                         )); break;  // xoo oox x..
    //      case 17617: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox x..
    //      case 17618: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .oo oox x..
    //      case 17619: Assert::IsTrue(v == PositionValue(-  161                         )); break;  // x.o oox x..
    //      case 17620: Assert::IsTrue(v == PositionValue(-  412                         )); break;  // o.o oox x..
    //      case 17621: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // ..o oox x..
    //      case 17622: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xx. oox x..
    //      case 17623: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // ox. oox x..
    //      case 17624: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .x. oox x..
    //      case 17625: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // xo. oox x..
    //      case 17626: Assert::IsTrue(v == PositionValue(-  588                         )); break;  // oo. oox x..
    //      case 17627: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .o. oox x..
    //      case 17628: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // x.. oox x..
    //      case 17629: Assert::IsTrue(v == PositionValue(-  291                         )); break;  // o.. oox x..
    //      case 17630: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // ... oox x..
    //      case 17631: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox x..
    //      case 17632: Assert::IsTrue(v == PositionValue(+  241                         )); break;  // oxx .ox x..
    //      case 17633: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // .xx .ox x..
    //      case 17634: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // xox .ox x..
    //      case 17635: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oox .ox x..
    //      case 17636: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // .ox .ox x..
    //      case 17637: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.x .ox x..
    //      case 17638: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // o.x .ox x..
    //      case 17639: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // ..x .ox x..
    //      case 17640: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // xxo .ox x..
    //      case 17641: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // oxo .ox x..
    //      case 17642: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // .xo .ox x..
    //      case 17643: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // xoo .ox x..
    //      case 17644: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox x..
    //      case 17645: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // .oo .ox x..
    //      case 17646: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // x.o .ox x..
    //      case 17647: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // o.o .ox x..
    //      case 17648: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ..o .ox x..
    //      case 17649: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // xx. .ox x..
    //      case 17650: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // ox. .ox x..
    //      case 17651: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .x. .ox x..
    //      case 17652: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // xo. .ox x..
    //      case 17653: Assert::IsTrue(v == PositionValue(-  309                         )); break;  // oo. .ox x..
    //      case 17654: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // .o. .ox x..
    //      case 17655: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // x.. .ox x..
    //      case 17656: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // o.. .ox x..
    //      case 17657: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ... .ox x..
    //      case 17658: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x x..
    //      case 17659: Assert::IsTrue(v == PositionValue(+  577                         )); break;  // oxx x.x x..
    //      case 17660: Assert::IsTrue(v == PositionValue(+  638                         )); break;  // .xx x.x x..
    //      case 17661: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.x x..
    //      case 17662: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // oox x.x x..
    //      case 17663: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // .ox x.x x..
    //      case 17664: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.x x..
    //      case 17665: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // o.x x.x x..
    //      case 17666: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // ..x x.x x..
    //      case 17667: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.x x..
    //      case 17668: Assert::IsTrue(v == PositionValue(+  326                         )); break;  // oxo x.x x..
    //      case 17669: Assert::IsTrue(v == PositionValue(+  378                         )); break;  // .xo x.x x..
    //      case 17670: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.x x..
    //      case 17671: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x x..
    //      case 17672: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .oo x.x x..
    //      case 17673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.x x..
    //      case 17674: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // o.o x.x x..
    //      case 17675: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // ..o x.x x..
    //      case 17676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.x x..
    //      case 17677: Assert::IsTrue(v == PositionValue(+  369                         )); break;  // ox. x.x x..
    //      case 17678: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // .x. x.x x..
    //      case 17679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.x x..
    //      case 17680: Assert::IsTrue(v == PositionValue(+   36                         )); break;  // oo. x.x x..
    //      case 17681: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .o. x.x x..
    //      case 17682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.x x..
    //      case 17683: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // o.. x.x x..
    //      case 17684: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // ... x.x x..
    //      case 17685: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x x..
    //      case 17686: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // oxx o.x x..
    //      case 17687: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // .xx o.x x..
    //      case 17688: Assert::IsTrue(v == PositionValue(+   93                         )); break;  // xox o.x x..
    //      case 17689: Assert::IsTrue(v == PositionValue(-  149                         )); break;  // oox o.x x..
    //      case 17690: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // .ox o.x x..
    //      case 17691: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // x.x o.x x..
    //      case 17692: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // o.x o.x x..
    //      case 17693: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // ..x o.x x..
    //      case 17694: Assert::IsTrue(v == PositionValue(+  244                         )); break;  // xxo o.x x..
    //      case 17695: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // oxo o.x x..
    //      case 17696: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .xo o.x x..
    //      case 17697: Assert::IsTrue(v == PositionValue(-  158                         )); break;  // xoo o.x x..
    //      case 17698: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x x..
    //      case 17699: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // .oo o.x x..
    //      case 17700: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.o o.x x..
    //      case 17701: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // o.o o.x x..
    //      case 17702: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..o o.x x..
    //      case 17703: Assert::IsTrue(v == PositionValue(+  296                         )); break;  // xx. o.x x..
    //      case 17704: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ox. o.x x..
    //      case 17705: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // .x. o.x x..
    //      case 17706: Assert::IsTrue(v == PositionValue(-   37                         )); break;  // xo. o.x x..
    //      case 17707: Assert::IsTrue(v == PositionValue(-  288                         )); break;  // oo. o.x x..
    //      case 17708: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .o. o.x x..
    //      case 17709: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.. o.x x..
    //      case 17710: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // o.. o.x x..
    //      case 17711: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ... o.x x..
    //      case 17712: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x x..
    //      case 17713: Assert::IsTrue(v == PositionValue(+  376                         )); break;  // oxx ..x x..
    //      case 17714: Assert::IsTrue(v == PositionValue(+  428                         )); break;  // .xx ..x x..
    //      case 17715: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // xox ..x x..
    //      case 17716: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // oox ..x x..
    //      case 17717: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .ox ..x x..
    //      case 17718: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // x.x ..x x..
    //      case 17719: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // o.x ..x x..
    //      case 17720: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // ..x ..x x..
    //      case 17721: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // xxo ..x x..
    //      case 17722: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // oxo ..x x..
    //      case 17723: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .xo ..x x..
    //      case 17724: Assert::IsTrue(v == PositionValue(-   35                         )); break;  // xoo ..x x..
    //      case 17725: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x x..
    //      case 17726: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // .oo ..x x..
    //      case 17727: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // x.o ..x x..
    //      case 17728: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.o ..x x..
    //      case 17729: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ..o ..x x..
    //      case 17730: Assert::IsTrue(v == PositionValue(+  341                         )); break;  // xx. ..x x..
    //      case 17731: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // ox. ..x x..
    //      case 17732: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // .x. ..x x..
    //      case 17733: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // xo. ..x x..
    //      case 17734: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // oo. ..x x..
    //      case 17735: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .o. ..x x..
    //      case 17736: Assert::IsTrue(v == PositionValue(+  131                         )); break;  // x.. ..x x..
    //      case 17737: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // o.. ..x x..
    //      case 17738: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // ... ..x x..
    //      case 17739: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo x..
    //      case 17740: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxo x..
    //      case 17741: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxo x..
    //      case 17742: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxo x..
    //      case 17743: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxo x..
    //      case 17744: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxo x..
    //      case 17745: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxo x..
    //      case 17746: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxo x..
    //      case 17747: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxo x..
    //      case 17748: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxo x..
    //      case 17749: Assert::IsTrue(v == PositionValue(+  362                         )); break;  // oxo xxo x..
    //      case 17750: Assert::IsTrue(v == PositionValue(+  414                         )); break;  // .xo xxo x..
    //      case 17751: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxo x..
    //      case 17752: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo x..
    //      case 17753: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // .oo xxo x..
    //      case 17754: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxo x..
    //      case 17755: Assert::IsTrue(v == PositionValue(+  152                         )); break;  // o.o xxo x..
    //      case 17756: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // ..o xxo x..
    //      case 17757: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxo x..
    //      case 17758: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // ox. xxo x..
    //      case 17759: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // .x. xxo x..
    //      case 17760: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxo x..
    //      case 17761: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // oo. xxo x..
    //      case 17762: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .o. xxo x..
    //      case 17763: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxo x..
    //      case 17764: Assert::IsTrue(v == PositionValue(+  291                         )); break;  // o.. xxo x..
    //      case 17765: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // ... xxo x..
    //      case 17766: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo x..
    //      case 17767: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx oxo x..
    //      case 17768: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx oxo x..
    //      case 17769: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox oxo x..
    //      case 17770: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox oxo x..
    //      case 17771: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox oxo x..
    //      case 17772: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x oxo x..
    //      case 17773: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x oxo x..
    //      case 17774: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x oxo x..
    //      case 17775: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // xxo oxo x..
    //      case 17776: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oxo oxo x..
    //      case 17777: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .xo oxo x..
    //      case 17778: Assert::IsTrue(v == PositionValue(-  200                         )); break;  // xoo oxo x..
    //      case 17779: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo x..
    //      case 17780: Assert::IsTrue(v == PositionValue(-  339                         )); break;  // .oo oxo x..
    //      case 17781: Assert::IsTrue(v == PositionValue(+   79                         )); break;  // x.o oxo x..
    //      case 17782: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // o.o oxo x..
    //      case 17783: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // ..o oxo x..
    //      case 17784: Assert::IsTrue(v == PositionValue(+  437                         )); break;  // xx. oxo x..
    //      case 17785: Assert::IsTrue(v == PositionValue(+   99                         )); break;  // ox. oxo x..
    //      case 17786: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .x. oxo x..
    //      case 17787: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // xo. oxo x..
    //      case 17788: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // oo. oxo x..
    //      case 17789: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // .o. oxo x..
    //      case 17790: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // x.. oxo x..
    //      case 17791: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // o.. oxo x..
    //      case 17792: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // ... oxo x..
    //      case 17793: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo x..
    //      case 17794: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .xo x..
    //      case 17795: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .xo x..
    //      case 17796: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .xo x..
    //      case 17797: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .xo x..
    //      case 17798: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .xo x..
    //      case 17799: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .xo x..
    //      case 17800: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .xo x..
    //      case 17801: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .xo x..
    //      case 17802: Assert::IsTrue(v == PositionValue(+  334                         )); break;  // xxo .xo x..
    //      case 17803: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // oxo .xo x..
    //      case 17804: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // .xo .xo x..
    //      case 17805: Assert::IsTrue(v == PositionValue(-   77                         )); break;  // xoo .xo x..
    //      case 17806: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo x..
    //      case 17807: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // .oo .xo x..
    //      case 17808: Assert::IsTrue(v == PositionValue(+  124                         )); break;  // x.o .xo x..
    //      case 17809: Assert::IsTrue(v == PositionValue(-   49                         )); break;  // o.o .xo x..
    //      case 17810: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // ..o .xo x..
    //      case 17811: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // xx. .xo x..
    //      case 17812: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // ox. .xo x..
    //      case 17813: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // .x. .xo x..
    //      case 17814: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // xo. .xo x..
    //      case 17815: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // oo. .xo x..
    //      case 17816: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .o. .xo x..
    //      case 17817: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // x.. .xo x..
    //      case 17818: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // o.. .xo x..
    //      case 17819: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ... .xo x..
    //      case 17820: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo x..
    //      case 17821: Assert::IsTrue(v == PositionValue(+  109                         )); break;  // oxx xoo x..
    //      case 17822: Assert::IsTrue(v == PositionValue(+  257                         )); break;  // .xx xoo x..
    //      case 17823: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xoo x..
    //      case 17824: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // oox xoo x..
    //      case 17825: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .ox xoo x..
    //      case 17826: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xoo x..
    //      case 17827: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // o.x xoo x..
    //      case 17828: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // ..x xoo x..
    //      case 17829: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xoo x..
    //      case 17830: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // oxo xoo x..
    //      case 17831: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .xo xoo x..
    //      case 17832: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xoo x..
    //      case 17833: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo x..
    //      case 17834: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // .oo xoo x..
    //      case 17835: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xoo x..
    //      case 17836: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // o.o xoo x..
    //      case 17837: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // ..o xoo x..
    //      case 17838: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xoo x..
    //      case 17839: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // ox. xoo x..
    //      case 17840: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // .x. xoo x..
    //      case 17841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xoo x..
    //      case 17842: Assert::IsTrue(v == PositionValue(-  432                         )); break;  // oo. xoo x..
    //      case 17843: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // .o. xoo x..
    //      case 17844: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xoo x..
    //      case 17845: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // o.. xoo x..
    //      case 17846: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // ... xoo x..
    //      case 17847: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo x..
    //      case 17848: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo x..
    //      case 17849: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo x..
    //      case 17850: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo x..
    //      case 17851: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo x..
    //      case 17852: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo x..
    //      case 17853: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo x..
    //      case 17854: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo x..
    //      case 17855: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo x..
    //      case 17856: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo x..
    //      case 17857: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo x..
    //      case 17858: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo x..
    //      case 17859: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo x..
    //      case 17860: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo x..
    //      case 17861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo x..
    //      case 17862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo x..
    //      case 17863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo x..
    //      case 17864: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo x..
    //      case 17865: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo x..
    //      case 17866: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo x..
    //      case 17867: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo x..
    //      case 17868: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo x..
    //      case 17869: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo x..
    //      case 17870: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo x..
    //      case 17871: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo x..
    //      case 17872: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo x..
    //      case 17873: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo x..
    //      case 17874: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo x..
    //      case 17875: Assert::IsTrue(v == PositionValue(-  101                         )); break;  // oxx .oo x..
    //      case 17876: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // .xx .oo x..
    //      case 17877: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // xox .oo x..
    //      case 17878: Assert::IsTrue(v == PositionValue(-  512                         )); break;  // oox .oo x..
    //      case 17879: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // .ox .oo x..
    //      case 17880: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // x.x .oo x..
    //      case 17881: Assert::IsTrue(v == PositionValue(-  224                         )); break;  // o.x .oo x..
    //      case 17882: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // ..x .oo x..
    //      case 17883: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // xxo .oo x..
    //      case 17884: Assert::IsTrue(v == PositionValue(-  430                         )); break;  // oxo .oo x..
    //      case 17885: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // .xo .oo x..
    //      case 17886: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // xoo .oo x..
    //      case 17887: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo x..
    //      case 17888: Assert::IsTrue(v == PositionValue(-  642                         )); break;  // .oo .oo x..
    //      case 17889: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // x.o .oo x..
    //      case 17890: Assert::IsTrue(v == PositionValue(-  475                         )); break;  // o.o .oo x..
    //      case 17891: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // ..o .oo x..
    //      case 17892: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // xx. .oo x..
    //      case 17893: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // ox. .oo x..
    //      case 17894: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // .x. .oo x..
    //      case 17895: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // xo. .oo x..
    //      case 17896: Assert::IsTrue(v == PositionValue(-  564                         )); break;  // oo. .oo x..
    //      case 17897: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // .o. .oo x..
    //      case 17898: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // x.. .oo x..
    //      case 17899: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // o.. .oo x..
    //      case 17900: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // ... .oo x..
    //      case 17901: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o x..
    //      case 17902: Assert::IsTrue(v == PositionValue(+  322                         )); break;  // oxx x.o x..
    //      case 17903: Assert::IsTrue(v == PositionValue(+  383                         )); break;  // .xx x.o x..
    //      case 17904: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.o x..
    //      case 17905: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // oox x.o x..
    //      case 17906: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // .ox x.o x..
    //      case 17907: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.o x..
    //      case 17908: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // o.x x.o x..
    //      case 17909: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // ..x x.o x..
    //      case 17910: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.o x..
    //      case 17911: Assert::IsTrue(v == PositionValue(+   71                         )); break;  // oxo x.o x..
    //      case 17912: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .xo x.o x..
    //      case 17913: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.o x..
    //      case 17914: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o x..
    //      case 17915: Assert::IsTrue(v == PositionValue(-  210                         )); break;  // .oo x.o x..
    //      case 17916: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.o x..
    //      case 17917: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // o.o x.o x..
    //      case 17918: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..o x.o x..
    //      case 17919: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.o x..
    //      case 17920: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // ox. x.o x..
    //      case 17921: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .x. x.o x..
    //      case 17922: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.o x..
    //      case 17923: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // oo. x.o x..
    //      case 17924: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // .o. x.o x..
    //      case 17925: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.o x..
    //      case 17926: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // o.. x.o x..
    //      case 17927: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // ... x.o x..
    //      case 17928: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o x..
    //      case 17929: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // oxx o.o x..
    //      case 17930: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // .xx o.o x..
    //      case 17931: Assert::IsTrue(v == PositionValue(-  162                         )); break;  // xox o.o x..
    //      case 17932: Assert::IsTrue(v == PositionValue(-  404                         )); break;  // oox o.o x..
    //      case 17933: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // .ox o.o x..
    //      case 17934: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // x.x o.o x..
    //      case 17935: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // o.x o.o x..
    //      case 17936: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // ..x o.o x..
    //      case 17937: Assert::IsTrue(v == PositionValue(-   11                         )); break;  // xxo o.o x..
    //      case 17938: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oxo o.o x..
    //      case 17939: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // .xo o.o x..
    //      case 17940: Assert::IsTrue(v == PositionValue(-  413                         )); break;  // xoo o.o x..
    //      case 17941: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o x..
    //      case 17942: Assert::IsTrue(v == PositionValue(-  465                         )); break;  // .oo o.o x..
    //      case 17943: Assert::IsTrue(v == PositionValue(-  134                         )); break;  // x.o o.o x..
    //      case 17944: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // o.o o.o x..
    //      case 17945: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // ..o o.o x..
    //      case 17946: Assert::IsTrue(v == PositionValue(+  128                         )); break;  // xx. o.o x..
    //      case 17947: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // ox. o.o x..
    //      case 17948: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .x. o.o x..
    //      case 17949: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // xo. o.o x..
    //      case 17950: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // oo. o.o x..
    //      case 17951: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // .o. o.o x..
    //      case 17952: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // x.. o.o x..
    //      case 17953: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // o.. o.o x..
    //      case 17954: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // ... o.o x..
    //      case 17955: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o x..
    //      case 17956: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // oxx ..o x..
    //      case 17957: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .xx ..o x..
    //      case 17958: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // xox ..o x..
    //      case 17959: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // oox ..o x..
    //      case 17960: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // .ox ..o x..
    //      case 17961: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // x.x ..o x..
    //      case 17962: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // o.x ..o x..
    //      case 17963: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // ..x ..o x..
    //      case 17964: Assert::IsTrue(v == PositionValue(+   34                         )); break;  // xxo ..o x..
    //      case 17965: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oxo ..o x..
    //      case 17966: Assert::IsTrue(v == PositionValue(-   87                         )); break;  // .xo ..o x..
    //      case 17967: Assert::IsTrue(v == PositionValue(-  290                         )); break;  // xoo ..o x..
    //      case 17968: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o x..
    //      case 17969: Assert::IsTrue(v == PositionValue(-  342                         )); break;  // .oo ..o x..
    //      case 17970: Assert::IsTrue(v == PositionValue(-   89                         )); break;  // x.o ..o x..
    //      case 17971: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // o.o ..o x..
    //      case 17972: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // ..o ..o x..
    //      case 17973: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xx. ..o x..
    //      case 17974: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ox. ..o x..
    //      case 17975: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .x. ..o x..
    //      case 17976: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // xo. ..o x..
    //      case 17977: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // oo. ..o x..
    //      case 17978: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // .o. ..o x..
    //      case 17979: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.. ..o x..
    //      case 17980: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // o.. ..o x..
    //      case 17981: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ... ..o x..
    //      case 17982: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. x..
    //      case 17983: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xx. x..
    //      case 17984: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xx. x..
    //      case 17985: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xx. x..
    //      case 17986: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xx. x..
    //      case 17987: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xx. x..
    //      case 17988: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xx. x..
    //      case 17989: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xx. x..
    //      case 17990: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xx. x..
    //      case 17991: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xx. x..
    //      case 17992: Assert::IsTrue(v == PositionValue(+  503                         )); break;  // oxo xx. x..
    //      case 17993: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // .xo xx. x..
    //      case 17994: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xx. x..
    //      case 17995: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. x..
    //      case 17996: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .oo xx. x..
    //      case 17997: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xx. x..
    //      case 17998: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // o.o xx. x..
    //      case 17999: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // ..o xx. x..
    //      case 18000: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xx. x..
    //      case 18001: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // ox. xx. x..
    //      case 18002: Assert::IsTrue(v == PositionValue(+  607                         )); break;  // .x. xx. x..
    //      case 18003: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xx. x..
    //      case 18004: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // oo. xx. x..
    //      case 18005: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // .o. xx. x..
    //      case 18006: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xx. x..
    //      case 18007: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // o.. xx. x..
    //      case 18008: Assert::IsTrue(v == PositionValue(+  397                         )); break;  // ... xx. x..
    //      case 18009: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. x..
    //      case 18010: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx ox. x..
    //      case 18011: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx ox. x..
    //      case 18012: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox ox. x..
    //      case 18013: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox ox. x..
    //      case 18014: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox ox. x..
    //      case 18015: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x ox. x..
    //      case 18016: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x ox. x..
    //      case 18017: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x ox. x..
    //      case 18018: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // xxo ox. x..
    //      case 18019: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // oxo ox. x..
    //      case 18020: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .xo ox. x..
    //      case 18021: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xoo ox. x..
    //      case 18022: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. x..
    //      case 18023: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // .oo ox. x..
    //      case 18024: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // x.o ox. x..
    //      case 18025: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.o ox. x..
    //      case 18026: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // ..o ox. x..
    //      case 18027: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // xx. ox. x..
    //      case 18028: Assert::IsTrue(v == PositionValue(+  144                         )); break;  // ox. ox. x..
    //      case 18029: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // .x. ox. x..
    //      case 18030: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // xo. ox. x..
    //      case 18031: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // oo. ox. x..
    //      case 18032: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .o. ox. x..
    //      case 18033: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // x.. ox. x..
    //      case 18034: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // o.. ox. x..
    //      case 18035: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ... ox. x..
    //      case 18036: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. x..
    //      case 18037: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx .x. x..
    //      case 18038: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx .x. x..
    //      case 18039: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox .x. x..
    //      case 18040: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox .x. x..
    //      case 18041: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox .x. x..
    //      case 18042: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x .x. x..
    //      case 18043: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x .x. x..
    //      case 18044: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x .x. x..
    //      case 18045: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // xxo .x. x..
    //      case 18046: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // oxo .x. x..
    //      case 18047: Assert::IsTrue(v == PositionValue(+  258                         )); break;  // .xo .x. x..
    //      case 18048: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // xoo .x. x..
    //      case 18049: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. x..
    //      case 18050: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // .oo .x. x..
    //      case 18051: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // x.o .x. x..
    //      case 18052: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // o.o .x. x..
    //      case 18053: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // ..o .x. x..
    //      case 18054: Assert::IsTrue(v == PositionValue(+  527                         )); break;  // xx. .x. x..
    //      case 18055: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // ox. .x. x..
    //      case 18056: Assert::IsTrue(v == PositionValue(+  310                         )); break;  // .x. .x. x..
    //      case 18057: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // xo. .x. x..
    //      case 18058: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // oo. .x. x..
    //      case 18059: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .o. .x. x..
    //      case 18060: Assert::IsTrue(v == PositionValue(+  308                         )); break;  // x.. .x. x..
    //      case 18061: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // o.. .x. x..
    //      case 18062: Assert::IsTrue(v == PositionValue(+  178                         )); break;  // ... .x. x..
    //      case 18063: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. x..
    //      case 18064: Assert::IsTrue(v == PositionValue(+  232                         )); break;  // oxx xo. x..
    //      case 18065: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // .xx xo. x..
    //      case 18066: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xo. x..
    //      case 18067: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // oox xo. x..
    //      case 18068: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // .ox xo. x..
    //      case 18069: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xo. x..
    //      case 18070: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // o.x xo. x..
    //      case 18071: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // ..x xo. x..
    //      case 18072: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xo. x..
    //      case 18073: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // oxo xo. x..
    //      case 18074: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // .xo xo. x..
    //      case 18075: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xo. x..
    //      case 18076: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. x..
    //      case 18077: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .oo xo. x..
    //      case 18078: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xo. x..
    //      case 18079: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // o.o xo. x..
    //      case 18080: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // ..o xo. x..
    //      case 18081: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xo. x..
    //      case 18082: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // ox. xo. x..
    //      case 18083: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .x. xo. x..
    //      case 18084: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xo. x..
    //      case 18085: Assert::IsTrue(v == PositionValue(-  231                         )); break;  // oo. xo. x..
    //      case 18086: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // .o. xo. x..
    //      case 18087: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xo. x..
    //      case 18088: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // o.. xo. x..
    //      case 18089: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // ... xo. x..
    //      case 18090: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. x..
    //      case 18091: Assert::IsTrue(v == PositionValue(-  179                         )); break;  // oxx oo. x..
    //      case 18092: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // .xx oo. x..
    //      case 18093: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // xox oo. x..
    //      case 18094: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // oox oo. x..
    //      case 18095: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // .ox oo. x..
    //      case 18096: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // x.x oo. x..
    //      case 18097: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // o.x oo. x..
    //      case 18098: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // ..x oo. x..
    //      case 18099: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // xxo oo. x..
    //      case 18100: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // oxo oo. x..
    //      case 18101: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .xo oo. x..
    //      case 18102: Assert::IsTrue(v == PositionValue(-  503                         )); break;  // xoo oo. x..
    //      case 18103: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. x..
    //      case 18104: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // .oo oo. x..
    //      case 18105: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // x.o oo. x..
    //      case 18106: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // o.o oo. x..
    //      case 18107: Assert::IsTrue(v == PositionValue(-  258                         )); break;  // ..o oo. x..
    //      case 18108: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // xx. oo. x..
    //      case 18109: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // ox. oo. x..
    //      case 18110: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // .x. oo. x..
    //      case 18111: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // xo. oo. x..
    //      case 18112: Assert::IsTrue(v == PositionValue(-  642                         )); break;  // oo. oo. x..
    //      case 18113: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // .o. oo. x..
    //      case 18114: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // x.. oo. x..
    //      case 18115: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // o.. oo. x..
    //      case 18116: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // ... oo. x..
    //      case 18117: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. x..
    //      case 18118: Assert::IsTrue(v == PositionValue(+   31                         )); break;  // oxx .o. x..
    //      case 18119: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // .xx .o. x..
    //      case 18120: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // xox .o. x..
    //      case 18121: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // oox .o. x..
    //      case 18122: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // .ox .o. x..
    //      case 18123: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // x.x .o. x..
    //      case 18124: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // o.x .o. x..
    //      case 18125: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // ..x .o. x..
    //      case 18126: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xxo .o. x..
    //      case 18127: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // oxo .o. x..
    //      case 18128: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .xo .o. x..
    //      case 18129: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // xoo .o. x..
    //      case 18130: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. x..
    //      case 18131: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // .oo .o. x..
    //      case 18132: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // x.o .o. x..
    //      case 18133: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // o.o .o. x..
    //      case 18134: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // ..o .o. x..
    //      case 18135: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xx. .o. x..
    //      case 18136: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // ox. .o. x..
    //      case 18137: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .x. .o. x..
    //      case 18138: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // xo. .o. x..
    //      case 18139: Assert::IsTrue(v == PositionValue(-  354                         )); break;  // oo. .o. x..
    //      case 18140: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // .o. .o. x..
    //      case 18141: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // x.. .o. x..
    //      case 18142: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // o.. .o. x..
    //      case 18143: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // ... .o. x..
    //      case 18144: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. x..
    //      case 18145: Assert::IsTrue(v == PositionValue(+  367                         )); break;  // oxx x.. x..
    //      case 18146: Assert::IsTrue(v == PositionValue(+  428                         )); break;  // .xx x.. x..
    //      case 18147: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox x.. x..
    //      case 18148: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // oox x.. x..
    //      case 18149: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .ox x.. x..
    //      case 18150: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x x.. x..
    //      case 18151: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // o.x x.. x..
    //      case 18152: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // ..x x.. x..
    //      case 18153: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo x.. x..
    //      case 18154: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // oxo x.. x..
    //      case 18155: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // .xo x.. x..
    //      case 18156: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo x.. x..
    //      case 18157: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. x..
    //      case 18158: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .oo x.. x..
    //      case 18159: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o x.. x..
    //      case 18160: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // o.o x.. x..
    //      case 18161: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // ..o x.. x..
    //      case 18162: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. x.. x..
    //      case 18163: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // ox. x.. x..
    //      case 18164: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // .x. x.. x..
    //      case 18165: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. x.. x..
    //      case 18166: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // oo. x.. x..
    //      case 18167: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .o. x.. x..
    //      case 18168: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. x.. x..
    //      case 18169: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // o.. x.. x..
    //      case 18170: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // ... x.. x..
    //      case 18171: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. x..
    //      case 18172: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // oxx o.. x..
    //      case 18173: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // .xx o.. x..
    //      case 18174: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // xox o.. x..
    //      case 18175: Assert::IsTrue(v == PositionValue(-  281                         )); break;  // oox o.. x..
    //      case 18176: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // .ox o.. x..
    //      case 18177: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // x.x o.. x..
    //      case 18178: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // o.x o.. x..
    //      case 18179: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // ..x o.. x..
    //      case 18180: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xxo o.. x..
    //      case 18181: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oxo o.. x..
    //      case 18182: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xo o.. x..
    //      case 18183: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // xoo o.. x..
    //      case 18184: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. x..
    //      case 18185: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // .oo o.. x..
    //      case 18186: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.o o.. x..
    //      case 18187: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // o.o o.. x..
    //      case 18188: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ..o o.. x..
    //      case 18189: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xx. o.. x..
    //      case 18190: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // ox. o.. x..
    //      case 18191: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .x. o.. x..
    //      case 18192: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // xo. o.. x..
    //      case 18193: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // oo. o.. x..
    //      case 18194: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // .o. o.. x..
    //      case 18195: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.. o.. x..
    //      case 18196: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // o.. o.. x..
    //      case 18197: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ... o.. x..
    //      case 18198: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... x..
    //      case 18199: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // oxx ... x..
    //      case 18200: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // .xx ... x..
    //      case 18201: Assert::IsTrue(v == PositionValue(+   84                         )); break;  // xox ... x..
    //      case 18202: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // oox ... x..
    //      case 18203: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // .ox ... x..
    //      case 18204: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // x.x ... x..
    //      case 18205: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // o.x ... x..
    //      case 18206: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // ..x ... x..
    //      case 18207: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // xxo ... x..
    //      case 18208: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // oxo ... x..
    //      case 18209: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .xo ... x..
    //      case 18210: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xoo ... x..
    //      case 18211: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... x..
    //      case 18212: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // .oo ... x..
    //      case 18213: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.o ... x..
    //      case 18214: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.o ... x..
    //      case 18215: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..o ... x..
    //      case 18216: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // xx. ... x..
    //      case 18217: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ox. ... x..
    //      case 18218: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // .x. ... x..
    //      case 18219: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xo. ... x..
    //      case 18220: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // oo. ... x..
    //      case 18221: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .o. ... x..
    //      case 18222: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.. ... x..
    //      case 18223: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.. ... x..
    //      case 18224: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ... ... x..
    //      case 18225: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx o..
    //      case 18226: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx o..
    //      case 18227: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx o..
    //      case 18228: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx o..
    //      case 18229: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx o..
    //      case 18230: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx o..
    //      case 18231: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx o..
    //      case 18232: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx o..
    //      case 18233: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx o..
    //      case 18234: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx o..
    //      case 18235: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx o..
    //      case 18236: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx o..
    //      case 18237: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx o..
    //      case 18238: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx o..
    //      case 18239: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx o..
    //      case 18240: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx o..
    //      case 18241: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx o..
    //      case 18242: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx o..
    //      case 18243: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx o..
    //      case 18244: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx o..
    //      case 18245: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx o..
    //      case 18246: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx o..
    //      case 18247: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx o..
    //      case 18248: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx o..
    //      case 18249: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx o..
    //      case 18250: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx o..
    //      case 18251: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx o..
    //      case 18252: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx o..
    //      case 18253: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxx o..
    //      case 18254: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .xx oxx o..
    //      case 18255: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // xox oxx o..
    //      case 18256: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxx o..
    //      case 18257: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .ox oxx o..
    //      case 18258: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // x.x oxx o..
    //      case 18259: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxx o..
    //      case 18260: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // ..x oxx o..
    //      case 18261: Assert::IsTrue(v == PositionValue(+  380                         )); break;  // xxo oxx o..
    //      case 18262: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxx o..
    //      case 18263: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .xo oxx o..
    //      case 18264: Assert::IsTrue(v == PositionValue(-  109                         )); break;  // xoo oxx o..
    //      case 18265: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx o..
    //      case 18266: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // .oo oxx o..
    //      case 18267: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // x.o oxx o..
    //      case 18268: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxx o..
    //      case 18269: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // ..o oxx o..
    //      case 18270: Assert::IsTrue(v == PositionValue(+  432                         )); break;  // xx. oxx o..
    //      case 18271: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxx o..
    //      case 18272: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // .x. oxx o..
    //      case 18273: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // xo. oxx o..
    //      case 18274: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxx o..
    //      case 18275: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // .o. oxx o..
    //      case 18276: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // x.. oxx o..
    //      case 18277: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxx o..
    //      case 18278: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // ... oxx o..
    //      case 18279: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx o..
    //      case 18280: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // oxx .xx o..
    //      case 18281: Assert::IsTrue(v == PositionValue(+  642                         )); break;  // .xx .xx o..
    //      case 18282: Assert::IsTrue(v == PositionValue(+  430                         )); break;  // xox .xx o..
    //      case 18283: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // oox .xx o..
    //      case 18284: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // .ox .xx o..
    //      case 18285: Assert::IsTrue(v == PositionValue(+  475                         )); break;  // x.x .xx o..
    //      case 18286: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // o.x .xx o..
    //      case 18287: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // ..x .xx o..
    //      case 18288: Assert::IsTrue(v == PositionValue(+  512                         )); break;  // xxo .xx o..
    //      case 18289: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // oxo .xx o..
    //      case 18290: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // .xo .xx o..
    //      case 18291: Assert::IsTrue(v == PositionValue(+  101                         )); break;  // xoo .xx o..
    //      case 18292: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx o..
    //      case 18293: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // .oo .xx o..
    //      case 18294: Assert::IsTrue(v == PositionValue(+  224                         )); break;  // x.o .xx o..
    //      case 18295: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // o.o .xx o..
    //      case 18296: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // ..o .xx o..
    //      case 18297: Assert::IsTrue(v == PositionValue(+  564                         )); break;  // xx. .xx o..
    //      case 18298: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // ox. .xx o..
    //      case 18299: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // .x. .xx o..
    //      case 18300: Assert::IsTrue(v == PositionValue(+  222                         )); break;  // xo. .xx o..
    //      case 18301: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // oo. .xx o..
    //      case 18302: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // .o. .xx o..
    //      case 18303: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // x.. .xx o..
    //      case 18304: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // o.. .xx o..
    //      case 18305: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // ... .xx o..
    //      case 18306: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox o..
    //      case 18307: Assert::IsTrue(v == PositionValue(+  200                         )); break;  // oxx xox o..
    //      case 18308: Assert::IsTrue(v == PositionValue(+  339                         )); break;  // .xx xox o..
    //      case 18309: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xox xox o..
    //      case 18310: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // oox xox o..
    //      case 18311: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // .ox xox o..
    //      case 18312: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // x.x xox o..
    //      case 18313: Assert::IsTrue(v == PositionValue(-   79                         )); break;  // o.x xox o..
    //      case 18314: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // ..x xox o..
    //      case 18315: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xox o..
    //      case 18316: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xox o..
    //      case 18317: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xox o..
    //      case 18318: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xox o..
    //      case 18319: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox o..
    //      case 18320: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xox o..
    //      case 18321: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xox o..
    //      case 18322: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xox o..
    //      case 18323: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xox o..
    //      case 18324: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // xx. xox o..
    //      case 18325: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // ox. xox o..
    //      case 18326: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // .x. xox o..
    //      case 18327: Assert::IsTrue(v == PositionValue(-   99                         )); break;  // xo. xox o..
    //      case 18328: Assert::IsTrue(v == PositionValue(-  437                         )); break;  // oo. xox o..
    //      case 18329: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .o. xox o..
    //      case 18330: Assert::IsTrue(v == PositionValue(+   33                         )); break;  // x.. xox o..
    //      case 18331: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // o.. xox o..
    //      case 18332: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ... xox o..
    //      case 18333: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox o..
    //      case 18334: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oox o..
    //      case 18335: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // .xx oox o..
    //      case 18336: Assert::IsTrue(v == PositionValue(-  362                         )); break;  // xox oox o..
    //      case 18337: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oox o..
    //      case 18338: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // .ox oox o..
    //      case 18339: Assert::IsTrue(v == PositionValue(-  152                         )); break;  // x.x oox o..
    //      case 18340: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oox o..
    //      case 18341: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // ..x oox o..
    //      case 18342: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oox o..
    //      case 18343: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oox o..
    //      case 18344: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oox o..
    //      case 18345: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oox o..
    //      case 18346: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox o..
    //      case 18347: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oox o..
    //      case 18348: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oox o..
    //      case 18349: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oox o..
    //      case 18350: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oox o..
    //      case 18351: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // xx. oox o..
    //      case 18352: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oox o..
    //      case 18353: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .x. oox o..
    //      case 18354: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // xo. oox o..
    //      case 18355: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oox o..
    //      case 18356: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // .o. oox o..
    //      case 18357: Assert::IsTrue(v == PositionValue(-  291                         )); break;  // x.. oox o..
    //      case 18358: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oox o..
    //      case 18359: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // ... oox o..
    //      case 18360: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox o..
    //      case 18361: Assert::IsTrue(v == PositionValue(+   77                         )); break;  // oxx .ox o..
    //      case 18362: Assert::IsTrue(v == PositionValue(+  216                         )); break;  // .xx .ox o..
    //      case 18363: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // xox .ox o..
    //      case 18364: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // oox .ox o..
    //      case 18365: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // .ox .ox o..
    //      case 18366: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // x.x .ox o..
    //      case 18367: Assert::IsTrue(v == PositionValue(-  124                         )); break;  // o.x .ox o..
    //      case 18368: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // ..x .ox o..
    //      case 18369: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .ox o..
    //      case 18370: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .ox o..
    //      case 18371: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .ox o..
    //      case 18372: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .ox o..
    //      case 18373: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox o..
    //      case 18374: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .ox o..
    //      case 18375: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .ox o..
    //      case 18376: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .ox o..
    //      case 18377: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .ox o..
    //      case 18378: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // xx. .ox o..
    //      case 18379: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // ox. .ox o..
    //      case 18380: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .x. .ox o..
    //      case 18381: Assert::IsTrue(v == PositionValue(-  222                         )); break;  // xo. .ox o..
    //      case 18382: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // oo. .ox o..
    //      case 18383: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // .o. .ox o..
    //      case 18384: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // x.. .ox o..
    //      case 18385: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // o.. .ox o..
    //      case 18386: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ... .ox o..
    //      case 18387: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x o..
    //      case 18388: Assert::IsTrue(v == PositionValue(+  413                         )); break;  // oxx x.x o..
    //      case 18389: Assert::IsTrue(v == PositionValue(+  465                         )); break;  // .xx x.x o..
    //      case 18390: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xox x.x o..
    //      case 18391: Assert::IsTrue(v == PositionValue(+   11                         )); break;  // oox x.x o..
    //      case 18392: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // .ox x.x o..
    //      case 18393: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // x.x x.x o..
    //      case 18394: Assert::IsTrue(v == PositionValue(+  134                         )); break;  // o.x x.x o..
    //      case 18395: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // ..x x.x o..
    //      case 18396: Assert::IsTrue(v == PositionValue(+  404                         )); break;  // xxo x.x o..
    //      case 18397: Assert::IsTrue(v == PositionValue(+  162                         )); break;  // oxo x.x o..
    //      case 18398: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // .xo x.x o..
    //      case 18399: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // xoo x.x o..
    //      case 18400: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x o..
    //      case 18401: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // .oo x.x o..
    //      case 18402: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // x.o x.x o..
    //      case 18403: Assert::IsTrue(v == PositionValue(-   39                         )); break;  // o.o x.x o..
    //      case 18404: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // ..o x.x o..
    //      case 18405: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // xx. x.x o..
    //      case 18406: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // ox. x.x o..
    //      case 18407: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // .x. x.x o..
    //      case 18408: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xo. x.x o..
    //      case 18409: Assert::IsTrue(v == PositionValue(-  128                         )); break;  // oo. x.x o..
    //      case 18410: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .o. x.x o..
    //      case 18411: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // x.. x.x o..
    //      case 18412: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // o.. x.x o..
    //      case 18413: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // ... x.x o..
    //      case 18414: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x o..
    //      case 18415: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.x o..
    //      case 18416: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // .xx o.x o..
    //      case 18417: Assert::IsTrue(v == PositionValue(-   71                         )); break;  // xox o.x o..
    //      case 18418: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.x o..
    //      case 18419: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .ox o.x o..
    //      case 18420: Assert::IsTrue(v == PositionValue(+   52                         )); break;  // x.x o.x o..
    //      case 18421: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.x o..
    //      case 18422: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..x o.x o..
    //      case 18423: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // xxo o.x o..
    //      case 18424: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.x o..
    //      case 18425: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // .xo o.x o..
    //      case 18426: Assert::IsTrue(v == PositionValue(-  322                         )); break;  // xoo o.x o..
    //      case 18427: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x o..
    //      case 18428: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // .oo o.x o..
    //      case 18429: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // x.o o.x o..
    //      case 18430: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.x o..
    //      case 18431: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ..o o.x o..
    //      case 18432: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // xx. o.x o..
    //      case 18433: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.x o..
    //      case 18434: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // .x. o.x o..
    //      case 18435: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xo. o.x o..
    //      case 18436: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.x o..
    //      case 18437: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .o. o.x o..
    //      case 18438: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // x.. o.x o..
    //      case 18439: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.x o..
    //      case 18440: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ... o.x o..
    //      case 18441: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x o..
    //      case 18442: Assert::IsTrue(v == PositionValue(+  290                         )); break;  // oxx ..x o..
    //      case 18443: Assert::IsTrue(v == PositionValue(+  342                         )); break;  // .xx ..x o..
    //      case 18444: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xox ..x o..
    //      case 18445: Assert::IsTrue(v == PositionValue(-   34                         )); break;  // oox ..x o..
    //      case 18446: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // .ox ..x o..
    //      case 18447: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // x.x ..x o..
    //      case 18448: Assert::IsTrue(v == PositionValue(+   89                         )); break;  // o.x ..x o..
    //      case 18449: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // ..x ..x o..
    //      case 18450: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // xxo ..x o..
    //      case 18451: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // oxo ..x o..
    //      case 18452: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // .xo ..x o..
    //      case 18453: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // xoo ..x o..
    //      case 18454: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x o..
    //      case 18455: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .oo ..x o..
    //      case 18456: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // x.o ..x o..
    //      case 18457: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // o.o ..x o..
    //      case 18458: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // ..o ..x o..
    //      case 18459: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // xx. ..x o..
    //      case 18460: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // ox. ..x o..
    //      case 18461: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // .x. ..x o..
    //      case 18462: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // xo. ..x o..
    //      case 18463: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // oo. ..x o..
    //      case 18464: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .o. ..x o..
    //      case 18465: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // x.. ..x o..
    //      case 18466: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.. ..x o..
    //      case 18467: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ... ..x o..
    //      case 18468: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo o..
    //      case 18469: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // oxx xxo o..
    //      case 18470: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // .xx xxo o..
    //      case 18471: Assert::IsTrue(v == PositionValue(+  289                         )); break;  // xox xxo o..
    //      case 18472: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oox xxo o..
    //      case 18473: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .ox xxo o..
    //      case 18474: Assert::IsTrue(v == PositionValue(+  412                         )); break;  // x.x xxo o..
    //      case 18475: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // o.x xxo o..
    //      case 18476: Assert::IsTrue(v == PositionValue(+  204                         )); break;  // ..x xxo o..
    //      case 18477: Assert::IsTrue(v == PositionValue(+  449                         )); break;  // xxo xxo o..
    //      case 18478: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // oxo xxo o..
    //      case 18479: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // .xo xxo o..
    //      case 18480: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // xoo xxo o..
    //      case 18481: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo o..
    //      case 18482: Assert::IsTrue(v == PositionValue(-  257                         )); break;  // .oo xxo o..
    //      case 18483: Assert::IsTrue(v == PositionValue(+  161                         )); break;  // x.o xxo o..
    //      case 18484: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // o.o xxo o..
    //      case 18485: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // ..o xxo o..
    //      case 18486: Assert::IsTrue(v == PositionValue(+  588                         )); break;  // xx. xxo o..
    //      case 18487: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // ox. xxo o..
    //      case 18488: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .x. xxo o..
    //      case 18489: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // xo. xxo o..
    //      case 18490: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oo. xxo o..
    //      case 18491: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .o. xxo o..
    //      case 18492: Assert::IsTrue(v == PositionValue(+  291                         )); break;  // x.. xxo o..
    //      case 18493: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // o.. xxo o..
    //      case 18494: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // ... xxo o..
    //      case 18495: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo o..
    //      case 18496: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oxo o..
    //      case 18497: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .xx oxo o..
    //      case 18498: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // xox oxo o..
    //      case 18499: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oxo o..
    //      case 18500: Assert::IsTrue(v == PositionValue(-  252                         )); break;  // .ox oxo o..
    //      case 18501: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // x.x oxo o..
    //      case 18502: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oxo o..
    //      case 18503: Assert::IsTrue(v == PositionValue(-   51                         )); break;  // ..x oxo o..
    //      case 18504: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // xxo oxo o..
    //      case 18505: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oxo o..
    //      case 18506: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .xo oxo o..
    //      case 18507: Assert::IsTrue(v == PositionValue(-  442                         )); break;  // xoo oxo o..
    //      case 18508: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo o..
    //      case 18509: Assert::IsTrue(v == PositionValue(-  590                         )); break;  // .oo oxo o..
    //      case 18510: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // x.o oxo o..
    //      case 18511: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oxo o..
    //      case 18512: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // ..o oxo o..
    //      case 18513: Assert::IsTrue(v == PositionValue(+  186                         )); break;  // xx. oxo o..
    //      case 18514: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oxo o..
    //      case 18515: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .x. oxo o..
    //      case 18516: Assert::IsTrue(v == PositionValue(-  234                         )); break;  // xo. oxo o..
    //      case 18517: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oxo o..
    //      case 18518: Assert::IsTrue(v == PositionValue(-  373                         )); break;  // .o. oxo o..
    //      case 18519: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // x.. oxo o..
    //      case 18520: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oxo o..
    //      case 18521: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // ... oxo o..
    //      case 18522: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo o..
    //      case 18523: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // oxx .xo o..
    //      case 18524: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // .xx .xo o..
    //      case 18525: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // xox .xo o..
    //      case 18526: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // oox .xo o..
    //      case 18527: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // .ox .xo o..
    //      case 18528: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // x.x .xo o..
    //      case 18529: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // o.x .xo o..
    //      case 18530: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // ..x .xo o..
    //      case 18531: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xxo .xo o..
    //      case 18532: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // oxo .xo o..
    //      case 18533: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // .xo .xo o..
    //      case 18534: Assert::IsTrue(v == PositionValue(-  241                         )); break;  // xoo .xo o..
    //      case 18535: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo o..
    //      case 18536: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // .oo .xo o..
    //      case 18537: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // x.o .xo o..
    //      case 18538: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.o .xo o..
    //      case 18539: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ..o .xo o..
    //      case 18540: Assert::IsTrue(v == PositionValue(+  309                         )); break;  // xx. .xo o..
    //      case 18541: Assert::IsTrue(v == PositionValue(+   49                         )); break;  // ox. .xo o..
    //      case 18542: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // .x. .xo o..
    //      case 18543: Assert::IsTrue(v == PositionValue(-   33                         )); break;  // xo. .xo o..
    //      case 18544: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // oo. .xo o..
    //      case 18545: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // .o. .xo o..
    //      case 18546: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // x.. .xo o..
    //      case 18547: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // o.. .xo o..
    //      case 18548: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ... .xo o..
    //      case 18549: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo o..
    //      case 18550: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // oxx xoo o..
    //      case 18551: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // .xx xoo o..
    //      case 18552: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // xox xoo o..
    //      case 18553: Assert::IsTrue(v == PositionValue(-  622                         )); break;  // oox xoo o..
    //      case 18554: Assert::IsTrue(v == PositionValue(-  414                         )); break;  // .ox xoo o..
    //      case 18555: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // x.x xoo o..
    //      case 18556: Assert::IsTrue(v == PositionValue(-  334                         )); break;  // o.x xoo o..
    //      case 18557: Assert::IsTrue(v == PositionValue(-  204                         )); break;  // ..x xoo o..
    //      case 18558: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xoo o..
    //      case 18559: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xoo o..
    //      case 18560: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xoo o..
    //      case 18561: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xoo o..
    //      case 18562: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo o..
    //      case 18563: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xoo o..
    //      case 18564: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xoo o..
    //      case 18565: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xoo o..
    //      case 18566: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xoo o..
    //      case 18567: Assert::IsTrue(v == PositionValue(+   75                         )); break;  // xx. xoo o..
    //      case 18568: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // ox. xoo o..
    //      case 18569: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .x. xoo o..
    //      case 18570: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // xo. xoo o..
    //      case 18571: Assert::IsTrue(v == PositionValue(-  683                         )); break;  // oo. xoo o..
    //      case 18572: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // .o. xoo o..
    //      case 18573: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // x.. xoo o..
    //      case 18574: Assert::IsTrue(v == PositionValue(-  386                         )); break;  // o.. xoo o..
    //      case 18575: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // ... xoo o..
    //      case 18576: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo o..
    //      case 18577: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo o..
    //      case 18578: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo o..
    //      case 18579: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo o..
    //      case 18580: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo o..
    //      case 18581: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo o..
    //      case 18582: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo o..
    //      case 18583: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo o..
    //      case 18584: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo o..
    //      case 18585: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo o..
    //      case 18586: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo o..
    //      case 18587: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo o..
    //      case 18588: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo o..
    //      case 18589: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo o..
    //      case 18590: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo o..
    //      case 18591: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo o..
    //      case 18592: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo o..
    //      case 18593: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo o..
    //      case 18594: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo o..
    //      case 18595: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo o..
    //      case 18596: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo o..
    //      case 18597: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo o..
    //      case 18598: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo o..
    //      case 18599: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo o..
    //      case 18600: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo o..
    //      case 18601: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo o..
    //      case 18602: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo o..
    //      case 18603: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo o..
    //      case 18604: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // oxx .oo o..
    //      case 18605: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // .xx .oo o..
    //      case 18606: Assert::IsTrue(v == PositionValue(-  425                         )); break;  // xox .oo o..
    //      case 18607: Assert::IsTrue(v == PositionValue(-  676                         )); break;  // oox .oo o..
    //      case 18608: Assert::IsTrue(v == PositionValue(-  468                         )); break;  // .ox .oo o..
    //      case 18609: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // x.x .oo o..
    //      case 18610: Assert::IsTrue(v == PositionValue(-  388                         )); break;  // o.x .oo o..
    //      case 18611: Assert::IsTrue(v == PositionValue(-  258                         )); break;  // ..x .oo o..
    //      case 18612: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .oo o..
    //      case 18613: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .oo o..
    //      case 18614: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .oo o..
    //      case 18615: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .oo o..
    //      case 18616: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo o..
    //      case 18617: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .oo o..
    //      case 18618: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .oo o..
    //      case 18619: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .oo o..
    //      case 18620: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .oo o..
    //      case 18621: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // xx. .oo o..
    //      case 18622: Assert::IsTrue(v == PositionValue(-  395                         )); break;  // ox. .oo o..
    //      case 18623: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // .x. .oo o..
    //      case 18624: Assert::IsTrue(v == PositionValue(-  477                         )); break;  // xo. .oo o..
    //      case 18625: Assert::IsTrue(v == PositionValue(-  737                         )); break;  // oo. .oo o..
    //      case 18626: Assert::IsTrue(v == PositionValue(-  520                         )); break;  // .o. .oo o..
    //      case 18627: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // x.. .oo o..
    //      case 18628: Assert::IsTrue(v == PositionValue(-  440                         )); break;  // o.. .oo o..
    //      case 18629: Assert::IsTrue(v == PositionValue(-  310                         )); break;  // ... .oo o..
    //      case 18630: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o o..
    //      case 18631: Assert::IsTrue(v == PositionValue(+  158                         )); break;  // oxx x.o o..
    //      case 18632: Assert::IsTrue(v == PositionValue(+  210                         )); break;  // .xx x.o o..
    //      case 18633: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xox x.o o..
    //      case 18634: Assert::IsTrue(v == PositionValue(-  244                         )); break;  // oox x.o o..
    //      case 18635: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .ox x.o o..
    //      case 18636: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // x.x x.o o..
    //      case 18637: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.x x.o o..
    //      case 18638: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..x x.o o..
    //      case 18639: Assert::IsTrue(v == PositionValue(+  149                         )); break;  // xxo x.o o..
    //      case 18640: Assert::IsTrue(v == PositionValue(-   93                         )); break;  // oxo x.o o..
    //      case 18641: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // .xo x.o o..
    //      case 18642: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // xoo x.o o..
    //      case 18643: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o o..
    //      case 18644: Assert::IsTrue(v == PositionValue(-  383                         )); break;  // .oo x.o o..
    //      case 18645: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // x.o x.o o..
    //      case 18646: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // o.o x.o o..
    //      case 18647: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // ..o x.o o..
    //      case 18648: Assert::IsTrue(v == PositionValue(+  288                         )); break;  // xx. x.o o..
    //      case 18649: Assert::IsTrue(v == PositionValue(+   37                         )); break;  // ox. x.o o..
    //      case 18650: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .x. x.o o..
    //      case 18651: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // xo. x.o o..
    //      case 18652: Assert::IsTrue(v == PositionValue(-  296                         )); break;  // oo. x.o o..
    //      case 18653: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // .o. x.o o..
    //      case 18654: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // x.. x.o o..
    //      case 18655: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.. x.o o..
    //      case 18656: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ... x.o o..
    //      case 18657: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o o..
    //      case 18658: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.o o..
    //      case 18659: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .xx o.o o..
    //      case 18660: Assert::IsTrue(v == PositionValue(-  326                         )); break;  // xox o.o o..
    //      case 18661: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.o o..
    //      case 18662: Assert::IsTrue(v == PositionValue(-  378                         )); break;  // .ox o.o o..
    //      case 18663: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // x.x o.o o..
    //      case 18664: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.o o..
    //      case 18665: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // ..x o.o o..
    //      case 18666: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // xxo o.o o..
    //      case 18667: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.o o..
    //      case 18668: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // .xo o.o o..
    //      case 18669: Assert::IsTrue(v == PositionValue(-  577                         )); break;  // xoo o.o o..
    //      case 18670: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o o..
    //      case 18671: Assert::IsTrue(v == PositionValue(-  638                         )); break;  // .oo o.o o..
    //      case 18672: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // x.o o.o o..
    //      case 18673: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.o o..
    //      case 18674: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // ..o o.o o..
    //      case 18675: Assert::IsTrue(v == PositionValue(-   36                         )); break;  // xx. o.o o..
    //      case 18676: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.o o..
    //      case 18677: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .x. o.o o..
    //      case 18678: Assert::IsTrue(v == PositionValue(-  369                         )); break;  // xo. o.o o..
    //      case 18679: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.o o..
    //      case 18680: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // .o. o.o o..
    //      case 18681: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // x.. o.o o..
    //      case 18682: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.o o..
    //      case 18683: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // ... o.o o..
    //      case 18684: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o o..
    //      case 18685: Assert::IsTrue(v == PositionValue(+   35                         )); break;  // oxx ..o o..
    //      case 18686: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // .xx ..o o..
    //      case 18687: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // xox ..o o..
    //      case 18688: Assert::IsTrue(v == PositionValue(-  289                         )); break;  // oox ..o o..
    //      case 18689: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .ox ..o o..
    //      case 18690: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.x ..o o..
    //      case 18691: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // o.x ..o o..
    //      case 18692: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ..x ..o o..
    //      case 18693: Assert::IsTrue(v == PositionValue(-   52                         )); break;  // xxo ..o o..
    //      case 18694: Assert::IsTrue(v == PositionValue(-  216                         )); break;  // oxo ..o o..
    //      case 18695: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .xo ..o o..
    //      case 18696: Assert::IsTrue(v == PositionValue(-  376                         )); break;  // xoo ..o o..
    //      case 18697: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o o..
    //      case 18698: Assert::IsTrue(v == PositionValue(-  428                         )); break;  // .oo ..o o..
    //      case 18699: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // x.o ..o o..
    //      case 18700: Assert::IsTrue(v == PositionValue(-  261                         )); break;  // o.o ..o o..
    //      case 18701: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // ..o ..o o..
    //      case 18702: Assert::IsTrue(v == PositionValue(+   87                         )); break;  // xx. ..o o..
    //      case 18703: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // ox. ..o o..
    //      case 18704: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .x. ..o o..
    //      case 18705: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // xo. ..o o..
    //      case 18706: Assert::IsTrue(v == PositionValue(-  341                         )); break;  // oo. ..o o..
    //      case 18707: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // .o. ..o o..
    //      case 18708: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // x.. ..o o..
    //      case 18709: Assert::IsTrue(v == PositionValue(-  131                         )); break;  // o.. ..o o..
    //      case 18710: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ... ..o o..
    //      case 18711: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. o..
    //      case 18712: Assert::IsTrue(v == PositionValue(+  503                         )); break;  // oxx xx. o..
    //      case 18713: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // .xx xx. o..
    //      case 18714: Assert::IsTrue(v == PositionValue(+  421                         )); break;  // xox xx. o..
    //      case 18715: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // oox xx. o..
    //      case 18716: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .ox xx. o..
    //      case 18717: Assert::IsTrue(v == PositionValue(+  466                         )); break;  // x.x xx. o..
    //      case 18718: Assert::IsTrue(v == PositionValue(+  215                         )); break;  // o.x xx. o..
    //      case 18719: Assert::IsTrue(v == PositionValue(+  258                         )); break;  // ..x xx. o..
    //      case 18720: Assert::IsTrue(v == PositionValue(+  590                         )); break;  // xxo xx. o..
    //      case 18721: Assert::IsTrue(v == PositionValue(+  261                         )); break;  // oxo xx. o..
    //      case 18722: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // .xo xx. o..
    //      case 18723: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // xoo xx. o..
    //      case 18724: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. o..
    //      case 18725: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // .oo xx. o..
    //      case 18726: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // x.o xx. o..
    //      case 18727: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // o.o xx. o..
    //      case 18728: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // ..o xx. o..
    //      case 18729: Assert::IsTrue(v == PositionValue(+  642                         )); break;  // xx. xx. o..
    //      case 18730: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // ox. xx. o..
    //      case 18731: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // .x. xx. o..
    //      case 18732: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // xo. xx. o..
    //      case 18733: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // oo. xx. o..
    //      case 18734: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // .o. xx. o..
    //      case 18735: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // x.. xx. o..
    //      case 18736: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // o.. xx. o..
    //      case 18737: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // ... xx. o..
    //      case 18738: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. o..
    //      case 18739: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ox. o..
    //      case 18740: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // .xx ox. o..
    //      case 18741: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xox ox. o..
    //      case 18742: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ox. o..
    //      case 18743: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // .ox ox. o..
    //      case 18744: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // x.x ox. o..
    //      case 18745: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ox. o..
    //      case 18746: Assert::IsTrue(v == PositionValue(-    6                         )); break;  // ..x ox. o..
    //      case 18747: Assert::IsTrue(v == PositionValue(+  179                         )); break;  // xxo ox. o..
    //      case 18748: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ox. o..
    //      case 18749: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // .xo ox. o..
    //      case 18750: Assert::IsTrue(v == PositionValue(-  232                         )); break;  // xoo ox. o..
    //      case 18751: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. o..
    //      case 18752: Assert::IsTrue(v == PositionValue(-  380                         )); break;  // .oo ox. o..
    //      case 18753: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // x.o ox. o..
    //      case 18754: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ox. o..
    //      case 18755: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // ..o ox. o..
    //      case 18756: Assert::IsTrue(v == PositionValue(+  231                         )); break;  // xx. ox. o..
    //      case 18757: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ox. o..
    //      case 18758: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // .x. ox. o..
    //      case 18759: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // xo. ox. o..
    //      case 18760: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ox. o..
    //      case 18761: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .o. ox. o..
    //      case 18762: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // x.. ox. o..
    //      case 18763: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ox. o..
    //      case 18764: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // ... ox. o..
    //      case 18765: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. o..
    //      case 18766: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // oxx .x. o..
    //      case 18767: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // .xx .x. o..
    //      case 18768: Assert::IsTrue(v == PositionValue(+  211                         )); break;  // xox .x. o..
    //      case 18769: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // oox .x. o..
    //      case 18770: Assert::IsTrue(v == PositionValue(+   81                         )); break;  // .ox .x. o..
    //      case 18771: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // x.x .x. o..
    //      case 18772: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // o.x .x. o..
    //      case 18773: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // ..x .x. o..
    //      case 18774: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // xxo .x. o..
    //      case 18775: Assert::IsTrue(v == PositionValue(+   51                         )); break;  // oxo .x. o..
    //      case 18776: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // .xo .x. o..
    //      case 18777: Assert::IsTrue(v == PositionValue(-   31                         )); break;  // xoo .x. o..
    //      case 18778: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. o..
    //      case 18779: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // .oo .x. o..
    //      case 18780: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // x.o .x. o..
    //      case 18781: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // o.o .x. o..
    //      case 18782: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // ..o .x. o..
    //      case 18783: Assert::IsTrue(v == PositionValue(+  354                         )); break;  // xx. .x. o..
    //      case 18784: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // ox. .x. o..
    //      case 18785: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // .x. .x. o..
    //      case 18786: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // xo. .x. o..
    //      case 18787: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oo. .x. o..
    //      case 18788: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .o. .x. o..
    //      case 18789: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // x.. .x. o..
    //      case 18790: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // o.. .x. o..
    //      case 18791: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // ... .x. o..
    //      case 18792: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. o..
    //      case 18793: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // oxx xo. o..
    //      case 18794: Assert::IsTrue(v == PositionValue(+  129                         )); break;  // .xx xo. o..
    //      case 18795: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // xox xo. o..
    //      case 18796: Assert::IsTrue(v == PositionValue(-  421                         )); break;  // oox xo. o..
    //      case 18797: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .ox xo. o..
    //      case 18798: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.x xo. o..
    //      case 18799: Assert::IsTrue(v == PositionValue(-  211                         )); break;  // o.x xo. o..
    //      case 18800: Assert::IsTrue(v == PositionValue(-   81                         )); break;  // ..x xo. o..
    //      case 18801: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo xo. o..
    //      case 18802: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo xo. o..
    //      case 18803: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo xo. o..
    //      case 18804: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo xo. o..
    //      case 18805: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. o..
    //      case 18806: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo xo. o..
    //      case 18807: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o xo. o..
    //      case 18808: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o xo. o..
    //      case 18809: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o xo. o..
    //      case 18810: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // xx. xo. o..
    //      case 18811: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // ox. xo. o..
    //      case 18812: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .x. xo. o..
    //      case 18813: Assert::IsTrue(v == PositionValue(-  144                         )); break;  // xo. xo. o..
    //      case 18814: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // oo. xo. o..
    //      case 18815: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // .o. xo. o..
    //      case 18816: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // x.. xo. o..
    //      case 18817: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // o.. xo. o..
    //      case 18818: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ... xo. o..
    //      case 18819: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. o..
    //      case 18820: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx oo. o..
    //      case 18821: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // .xx oo. o..
    //      case 18822: Assert::IsTrue(v == PositionValue(-  503                         )); break;  // xox oo. o..
    //      case 18823: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox oo. o..
    //      case 18824: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // .ox oo. o..
    //      case 18825: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // x.x oo. o..
    //      case 18826: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x oo. o..
    //      case 18827: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // ..x oo. o..
    //      case 18828: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo oo. o..
    //      case 18829: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo oo. o..
    //      case 18830: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo oo. o..
    //      case 18831: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo oo. o..
    //      case 18832: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. o..
    //      case 18833: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo oo. o..
    //      case 18834: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o oo. o..
    //      case 18835: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o oo. o..
    //      case 18836: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o oo. o..
    //      case 18837: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xx. oo. o..
    //      case 18838: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. oo. o..
    //      case 18839: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // .x. oo. o..
    //      case 18840: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // xo. oo. o..
    //      case 18841: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. oo. o..
    //      case 18842: Assert::IsTrue(v == PositionValue(-  607                         )); break;  // .o. oo. o..
    //      case 18843: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // x.. oo. o..
    //      case 18844: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. oo. o..
    //      case 18845: Assert::IsTrue(v == PositionValue(-  397                         )); break;  // ... oo. o..
    //      case 18846: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. o..
    //      case 18847: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // oxx .o. o..
    //      case 18848: Assert::IsTrue(v == PositionValue(+    6                         )); break;  // .xx .o. o..
    //      case 18849: Assert::IsTrue(v == PositionValue(-  215                         )); break;  // xox .o. o..
    //      case 18850: Assert::IsTrue(v == PositionValue(-  466                         )); break;  // oox .o. o..
    //      case 18851: Assert::IsTrue(v == PositionValue(-  258                         )); break;  // .ox .o. o..
    //      case 18852: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // x.x .o. o..
    //      case 18853: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // o.x .o. o..
    //      case 18854: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // ..x .o. o..
    //      case 18855: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo .o. o..
    //      case 18856: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo .o. o..
    //      case 18857: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo .o. o..
    //      case 18858: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo .o. o..
    //      case 18859: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. o..
    //      case 18860: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo .o. o..
    //      case 18861: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o .o. o..
    //      case 18862: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o .o. o..
    //      case 18863: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o .o. o..
    //      case 18864: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // xx. .o. o..
    //      case 18865: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // ox. .o. o..
    //      case 18866: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .x. .o. o..
    //      case 18867: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // xo. .o. o..
    //      case 18868: Assert::IsTrue(v == PositionValue(-  527                         )); break;  // oo. .o. o..
    //      case 18869: Assert::IsTrue(v == PositionValue(-  310                         )); break;  // .o. .o. o..
    //      case 18870: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // x.. .o. o..
    //      case 18871: Assert::IsTrue(v == PositionValue(-  308                         )); break;  // o.. .o. o..
    //      case 18872: Assert::IsTrue(v == PositionValue(-  178                         )); break;  // ... .o. o..
    //      case 18873: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. o..
    //      case 18874: Assert::IsTrue(v == PositionValue(+  203                         )); break;  // oxx x.. o..
    //      case 18875: Assert::IsTrue(v == PositionValue(+  255                         )); break;  // .xx x.. o..
    //      case 18876: Assert::IsTrue(v == PositionValue(+  121                         )); break;  // xox x.. o..
    //      case 18877: Assert::IsTrue(v == PositionValue(-  121                         )); break;  // oox x.. o..
    //      case 18878: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .ox x.. o..
    //      case 18879: Assert::IsTrue(v == PositionValue(+  166                         )); break;  // x.x x.. o..
    //      case 18880: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.x x.. o..
    //      case 18881: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ..x x.. o..
    //      case 18882: Assert::IsTrue(v == PositionValue(+  281                         )); break;  // xxo x.. o..
    //      case 18883: Assert::IsTrue(v == PositionValue(+   39                         )); break;  // oxo x.. o..
    //      case 18884: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // .xo x.. o..
    //      case 18885: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // xoo x.. o..
    //      case 18886: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. o..
    //      case 18887: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .oo x.. o..
    //      case 18888: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // x.o x.. o..
    //      case 18889: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // o.o x.. o..
    //      case 18890: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // ..o x.. o..
    //      case 18891: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // xx. x.. o..
    //      case 18892: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // ox. x.. o..
    //      case 18893: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // .x. x.. o..
    //      case 18894: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // xo. x.. o..
    //      case 18895: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // oo. x.. o..
    //      case 18896: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .o. x.. o..
    //      case 18897: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // x.. x.. o..
    //      case 18898: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.. x.. o..
    //      case 18899: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ... x.. o..
    //      case 18900: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. o..
    //      case 18901: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx o.. o..
    //      case 18902: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .xx o.. o..
    //      case 18903: Assert::IsTrue(v == PositionValue(-  203                         )); break;  // xox o.. o..
    //      case 18904: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox o.. o..
    //      case 18905: Assert::IsTrue(v == PositionValue(-  255                         )); break;  // .ox o.. o..
    //      case 18906: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // x.x o.. o..
    //      case 18907: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x o.. o..
    //      case 18908: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // ..x o.. o..
    //      case 18909: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // xxo o.. o..
    //      case 18910: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo o.. o..
    //      case 18911: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // .xo o.. o..
    //      case 18912: Assert::IsTrue(v == PositionValue(-  367                         )); break;  // xoo o.. o..
    //      case 18913: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. o..
    //      case 18914: Assert::IsTrue(v == PositionValue(-  428                         )); break;  // .oo o.. o..
    //      case 18915: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // x.o o.. o..
    //      case 18916: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o o.. o..
    //      case 18917: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // ..o o.. o..
    //      case 18918: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // xx. o.. o..
    //      case 18919: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. o.. o..
    //      case 18920: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .x. o.. o..
    //      case 18921: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // xo. o.. o..
    //      case 18922: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. o.. o..
    //      case 18923: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // .o. o.. o..
    //      case 18924: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // x.. o.. o..
    //      case 18925: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. o.. o..
    //      case 18926: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // ... o.. o..
    //      case 18927: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... o..
    //      case 18928: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // oxx ... o..
    //      case 18929: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // .xx ... o..
    //      case 18930: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xox ... o..
    //      case 18931: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // oox ... o..
    //      case 18932: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .ox ... o..
    //      case 18933: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.x ... o..
    //      case 18934: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.x ... o..
    //      case 18935: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ..x ... o..
    //      case 18936: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // xxo ... o..
    //      case 18937: Assert::IsTrue(v == PositionValue(-   84                         )); break;  // oxo ... o..
    //      case 18938: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // .xo ... o..
    //      case 18939: Assert::IsTrue(v == PositionValue(-  166                         )); break;  // xoo ... o..
    //      case 18940: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... o..
    //      case 18941: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // .oo ... o..
    //      case 18942: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // x.o ... o..
    //      case 18943: Assert::IsTrue(v == PositionValue(-  129                         )); break;  // o.o ... o..
    //      case 18944: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // ..o ... o..
    //      case 18945: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // xx. ... o..
    //      case 18946: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // ox. ... o..
    //      case 18947: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .x. ... o..
    //      case 18948: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // xo. ... o..
    //      case 18949: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // oo. ... o..
    //      case 18950: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // .o. ... o..
    //      case 18951: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.. ... o..
    //      case 18952: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.. ... o..
    //      case 18953: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ... ... o..
    //      case 18954: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxx ...
    //      case 18955: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxx xxx ...
    //      case 18956: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xx xxx ...
    //      case 18957: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xox xxx ...
    //      case 18958: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oox xxx ...
    //      case 18959: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .ox xxx ...
    //      case 18960: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.x xxx ...
    //      case 18961: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.x xxx ...
    //      case 18962: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..x xxx ...
    //      case 18963: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxo xxx ...
    //      case 18964: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oxo xxx ...
    //      case 18965: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .xo xxx ...
    //      case 18966: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xoo xxx ...
    //      case 18967: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxx ...
    //      case 18968: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .oo xxx ...
    //      case 18969: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.o xxx ...
    //      case 18970: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.o xxx ...
    //      case 18971: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ..o xxx ...
    //      case 18972: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xx. xxx ...
    //      case 18973: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ox. xxx ...
    //      case 18974: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .x. xxx ...
    //      case 18975: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xo. xxx ...
    //      case 18976: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // oo. xxx ...
    //      case 18977: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // .o. xxx ...
    //      case 18978: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // x.. xxx ...
    //      case 18979: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // o.. xxx ...
    //      case 18980: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // ... xxx ...
    //      case 18981: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxx ...
    //      case 18982: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // oxx oxx ...
    //      case 18983: Assert::IsTrue(v == PositionValue(+  640                         )); break;  // .xx oxx ...
    //      case 18984: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // xox oxx ...
    //      case 18985: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // oox oxx ...
    //      case 18986: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // .ox oxx ...
    //      case 18987: Assert::IsTrue(v == PositionValue(+  473                         )); break;  // x.x oxx ...
    //      case 18988: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // o.x oxx ...
    //      case 18989: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // ..x oxx ...
    //      case 18990: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // xxo oxx ...
    //      case 18991: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // oxo oxx ...
    //      case 18992: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // .xo oxx ...
    //      case 18993: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // xoo oxx ...
    //      case 18994: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxx ...
    //      case 18995: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // .oo oxx ...
    //      case 18996: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.o oxx ...
    //      case 18997: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // o.o oxx ...
    //      case 18998: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // ..o oxx ...
    //      case 18999: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // xx. oxx ...
    //      case 19000: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // ox. oxx ...
    //      case 19001: Assert::IsTrue(v == PositionValue(+  336                         )); break;  // .x. oxx ...
    //      case 19002: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // xo. oxx ...
    //      case 19003: Assert::IsTrue(v == PositionValue(-  214                         )); break;  // oo. oxx ...
    //      case 19004: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // .o. oxx ...
    //      case 19005: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // x.. oxx ...
    //      case 19006: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // o.. oxx ...
    //      case 19007: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // ... oxx ...
    //      case 19008: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xx ...
    //      case 19009: Assert::IsTrue(v == PositionValue(+  642                         )); break;  // oxx .xx ...
    //      case 19010: Assert::IsTrue(v == PositionValue(+  694                         )); break;  // .xx .xx ...
    //      case 19011: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // xox .xx ...
    //      case 19012: Assert::IsTrue(v == PositionValue(+  231                         )); break;  // oox .xx ...
    //      case 19013: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // .ox .xx ...
    //      case 19014: Assert::IsTrue(v == PositionValue(+  527                         )); break;  // x.x .xx ...
    //      case 19015: Assert::IsTrue(v == PositionValue(+  354                         )); break;  // o.x .xx ...
    //      case 19016: Assert::IsTrue(v == PositionValue(+  397                         )); break;  // ..x .xx ...
    //      case 19017: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // xxo .xx ...
    //      case 19018: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // oxo .xx ...
    //      case 19019: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // .xo .xx ...
    //      case 19020: Assert::IsTrue(v == PositionValue(+  144                         )); break;  // xoo .xx ...
    //      case 19021: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xx ...
    //      case 19022: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // .oo .xx ...
    //      case 19023: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // x.o .xx ...
    //      case 19024: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // o.o .xx ...
    //      case 19025: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // ..o .xx ...
    //      case 19026: Assert::IsTrue(v == PositionValue(+  607                         )); break;  // xx. .xx ...
    //      case 19027: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // ox. .xx ...
    //      case 19028: Assert::IsTrue(v == PositionValue(+  390                         )); break;  // .x. .xx ...
    //      case 19029: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // xo. .xx ...
    //      case 19030: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // oo. .xx ...
    //      case 19031: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // .o. .xx ...
    //      case 19032: Assert::IsTrue(v == PositionValue(+  310                         )); break;  // x.. .xx ...
    //      case 19033: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // o.. .xx ...
    //      case 19034: Assert::IsTrue(v == PositionValue(+  180                         )); break;  // ... .xx ...
    //      case 19035: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xox ...
    //      case 19036: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // oxx xox ...
    //      case 19037: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // .xx xox ...
    //      case 19038: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // xox xox ...
    //      case 19039: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // oox xox ...
    //      case 19040: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // .ox xox ...
    //      case 19041: Assert::IsTrue(v == PositionValue(+  302                         )); break;  // x.x xox ...
    //      case 19042: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // o.x xox ...
    //      case 19043: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // ..x xox ...
    //      case 19044: Assert::IsTrue(v == PositionValue(+  321                         )); break;  // xxo xox ...
    //      case 19045: Assert::IsTrue(v == PositionValue(-   17                         )); break;  // oxo xox ...
    //      case 19046: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // .xo xox ...
    //      case 19047: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // xoo xox ...
    //      case 19048: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xox ...
    //      case 19049: Assert::IsTrue(v == PositionValue(-  307                         )); break;  // .oo xox ...
    //      case 19050: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // x.o xox ...
    //      case 19051: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // o.o xox ...
    //      case 19052: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ..o xox ...
    //      case 19053: Assert::IsTrue(v == PositionValue(+  460                         )); break;  // xx. xox ...
    //      case 19054: Assert::IsTrue(v == PositionValue(+  113                         )); break;  // ox. xox ...
    //      case 19055: Assert::IsTrue(v == PositionValue(+  243                         )); break;  // .x. xox ...
    //      case 19056: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // xo. xox ...
    //      case 19057: Assert::IsTrue(v == PositionValue(-  307                         )); break;  // oo. xox ...
    //      case 19058: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // .o. xox ...
    //      case 19059: Assert::IsTrue(v == PositionValue(+  172                         )); break;  // x.. xox ...
    //      case 19060: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // o.. xox ...
    //      case 19061: Assert::IsTrue(v == PositionValue(+   42                         )); break;  // ... xox ...
    //      case 19062: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oox ...
    //      case 19063: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // oxx oox ...
    //      case 19064: Assert::IsTrue(v == PositionValue(+  214                         )); break;  // .xx oox ...
    //      case 19065: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xox oox ...
    //      case 19066: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // oox oox ...
    //      case 19067: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // .ox oox ...
    //      case 19068: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // x.x oox ...
    //      case 19069: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.x oox ...
    //      case 19070: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // ..x oox ...
    //      case 19071: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // xxo oox ...
    //      case 19072: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // oxo oox ...
    //      case 19073: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .xo oox ...
    //      case 19074: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // xoo oox ...
    //      case 19075: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oox ...
    //      case 19076: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // .oo oox ...
    //      case 19077: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // x.o oox ...
    //      case 19078: Assert::IsTrue(v == PositionValue(-  473                         )); break;  // o.o oox ...
    //      case 19079: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // ..o oox ...
    //      case 19080: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // xx. oox ...
    //      case 19081: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // ox. oox ...
    //      case 19082: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // .x. oox ...
    //      case 19083: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // xo. oox ...
    //      case 19084: Assert::IsTrue(v == PositionValue(-  640                         )); break;  // oo. oox ...
    //      case 19085: Assert::IsTrue(v == PositionValue(-  336                         )); break;  // .o. oox ...
    //      case 19086: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // x.. oox ...
    //      case 19087: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // o.. oox ...
    //      case 19088: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // ... oox ...
    //      case 19089: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .ox ...
    //      case 19090: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // oxx .ox ...
    //      case 19091: Assert::IsTrue(v == PositionValue(+  337                         )); break;  // .xx .ox ...
    //      case 19092: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // xox .ox ...
    //      case 19093: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // oox .ox ...
    //      case 19094: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // .ox .ox ...
    //      case 19095: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.x .ox ...
    //      case 19096: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // o.x .ox ...
    //      case 19097: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // ..x .ox ...
    //      case 19098: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // xxo .ox ...
    //      case 19099: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // oxo .ox ...
    //      case 19100: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .xo .ox ...
    //      case 19101: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // xoo .ox ...
    //      case 19102: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .ox ...
    //      case 19103: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // .oo .ox ...
    //      case 19104: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // x.o .ox ...
    //      case 19105: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // o.o .ox ...
    //      case 19106: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ..o .ox ...
    //      case 19107: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // xx. .ox ...
    //      case 19108: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ox. .ox ...
    //      case 19109: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // .x. .ox ...
    //      case 19110: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // xo. .ox ...
    //      case 19111: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // oo. .ox ...
    //      case 19112: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // .o. .ox ...
    //      case 19113: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // x.. .ox ...
    //      case 19114: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // o.. .ox ...
    //      case 19115: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // ... .ox ...
    //      case 19116: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.x ...
    //      case 19117: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // oxx x.x ...
    //      case 19118: Assert::IsTrue(v == PositionValue(+  508                         )); break;  // .xx x.x ...
    //      case 19119: Assert::IsTrue(v == PositionValue(+  305                         )); break;  // xox x.x ...
    //      case 19120: Assert::IsTrue(v == PositionValue(+   54                         )); break;  // oox x.x ...
    //      case 19121: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .ox x.x ...
    //      case 19122: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // x.x x.x ...
    //      case 19123: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // o.x x.x ...
    //      case 19124: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // ..x x.x ...
    //      case 19125: Assert::IsTrue(v == PositionValue(+  456                         )); break;  // xxo x.x ...
    //      case 19126: Assert::IsTrue(v == PositionValue(+  205                         )); break;  // oxo x.x ...
    //      case 19127: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // .xo x.x ...
    //      case 19128: Assert::IsTrue(v == PositionValue(+   54                         )); break;  // xoo x.x ...
    //      case 19129: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.x ...
    //      case 19130: Assert::IsTrue(v == PositionValue(-   85                         )); break;  // .oo x.x ...
    //      case 19131: Assert::IsTrue(v == PositionValue(+  177                         )); break;  // x.o x.x ...
    //      case 19132: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // o.o x.x ...
    //      case 19133: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // ..o x.x ...
    //      case 19134: Assert::IsTrue(v == PositionValue(+  508                         )); break;  // xx. x.x ...
    //      case 19135: Assert::IsTrue(v == PositionValue(+  248                         )); break;  // ox. x.x ...
    //      case 19136: Assert::IsTrue(v == PositionValue(+  291                         )); break;  // .x. x.x ...
    //      case 19137: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // xo. x.x ...
    //      case 19138: Assert::IsTrue(v == PositionValue(-   85                         )); break;  // oo. x.x ...
    //      case 19139: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .o. x.x ...
    //      case 19140: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // x.. x.x ...
    //      case 19141: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // o.. x.x ...
    //      case 19142: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // ... x.x ...
    //      case 19143: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.x ...
    //      case 19144: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oxx o.x ...
    //      case 19145: Assert::IsTrue(v == PositionValue(+  340                         )); break;  // .xx o.x ...
    //      case 19146: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // xox o.x ...
    //      case 19147: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oox o.x ...
    //      case 19148: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // .ox o.x ...
    //      case 19149: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // x.x o.x ...
    //      case 19150: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x o.x ...
    //      case 19151: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // ..x o.x ...
    //      case 19152: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xxo o.x ...
    //      case 19153: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // oxo o.x ...
    //      case 19154: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // .xo o.x ...
    //      case 19155: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xoo o.x ...
    //      case 19156: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.x ...
    //      case 19157: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // .oo o.x ...
    //      case 19158: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o o.x ...
    //      case 19159: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // o.o o.x ...
    //      case 19160: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ..o o.x ...
    //      case 19161: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // xx. o.x ...
    //      case 19162: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // ox. o.x ...
    //      case 19163: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .x. o.x ...
    //      case 19164: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // xo. o.x ...
    //      case 19165: Assert::IsTrue(v == PositionValue(-  340                         )); break;  // oo. o.x ...
    //      case 19166: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .o. o.x ...
    //      case 19167: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.. o.x ...
    //      case 19168: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // o.. o.x ...
    //      case 19169: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... o.x ...
    //      case 19170: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..x ...
    //      case 19171: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // oxx ..x ...
    //      case 19172: Assert::IsTrue(v == PositionValue(+  385                         )); break;  // .xx ..x ...
    //      case 19173: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xox ..x ...
    //      case 19174: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // oox ..x ...
    //      case 19175: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .ox ..x ...
    //      case 19176: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // x.x ..x ...
    //      case 19177: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // o.x ..x ...
    //      case 19178: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // ..x ..x ...
    //      case 19179: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // xxo ..x ...
    //      case 19180: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // oxo ..x ...
    //      case 19181: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // .xo ..x ...
    //      case 19182: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // xoo ..x ...
    //      case 19183: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..x ...
    //      case 19184: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .oo ..x ...
    //      case 19185: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // x.o ..x ...
    //      case 19186: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.o ..x ...
    //      case 19187: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ..o ..x ...
    //      case 19188: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // xx. ..x ...
    //      case 19189: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ox. ..x ...
    //      case 19190: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .x. ..x ...
    //      case 19191: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // xo. ..x ...
    //      case 19192: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oo. ..x ...
    //      case 19193: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .o. ..x ...
    //      case 19194: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // x.. ..x ...
    //      case 19195: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.. ..x ...
    //      case 19196: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ... ..x ...
    //      case 19197: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xxo ...
    //      case 19198: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // oxx xxo ...
    //      case 19199: Assert::IsTrue(v == PositionValue(+  553                         )); break;  // .xx xxo ...
    //      case 19200: Assert::IsTrue(v == PositionValue(+  350                         )); break;  // xox xxo ...
    //      case 19201: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // oox xxo ...
    //      case 19202: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .ox xxo ...
    //      case 19203: Assert::IsTrue(v == PositionValue(+  473                         )); break;  // x.x xxo ...
    //      case 19204: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // o.x xxo ...
    //      case 19205: Assert::IsTrue(v == PositionValue(+  256                         )); break;  // ..x xxo ...
    //      case 19206: Assert::IsTrue(v == PositionValue(+  501                         )); break;  // xxo xxo ...
    //      case 19207: Assert::IsTrue(v == PositionValue(+  163                         )); break;  // oxo xxo ...
    //      case 19208: Assert::IsTrue(v == PositionValue(+  206                         )); break;  // .xo xxo ...
    //      case 19209: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // xoo xxo ...
    //      case 19210: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xxo ...
    //      case 19211: Assert::IsTrue(v == PositionValue(-  214                         )); break;  // .oo xxo ...
    //      case 19212: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // x.o xxo ...
    //      case 19213: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // o.o xxo ...
    //      case 19214: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // ..o xxo ...
    //      case 19215: Assert::IsTrue(v == PositionValue(+  640                         )); break;  // xx. xxo ...
    //      case 19216: Assert::IsTrue(v == PositionValue(+  293                         )); break;  // ox. xxo ...
    //      case 19217: Assert::IsTrue(v == PositionValue(+  336                         )); break;  // .x. xxo ...
    //      case 19218: Assert::IsTrue(v == PositionValue(+  220                         )); break;  // xo. xxo ...
    //      case 19219: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // oo. xxo ...
    //      case 19220: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // .o. xxo ...
    //      case 19221: Assert::IsTrue(v == PositionValue(+  343                         )); break;  // x.. xxo ...
    //      case 19222: Assert::IsTrue(v == PositionValue(+   83                         )); break;  // o.. xxo ...
    //      case 19223: Assert::IsTrue(v == PositionValue(+  126                         )); break;  // ... xxo ...
    //      case 19224: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oxo ...
    //      case 19225: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // oxx oxo ...
    //      case 19226: Assert::IsTrue(v == PositionValue(+  307                         )); break;  // .xx oxo ...
    //      case 19227: Assert::IsTrue(v == PositionValue(+   17                         )); break;  // xox oxo ...
    //      case 19228: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // oox oxo ...
    //      case 19229: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // .ox oxo ...
    //      case 19230: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // x.x oxo ...
    //      case 19231: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // o.x oxo ...
    //      case 19232: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // ..x oxo ...
    //      case 19233: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // xxo oxo ...
    //      case 19234: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // oxo oxo ...
    //      case 19235: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // .xo oxo ...
    //      case 19236: Assert::IsTrue(v == PositionValue(-  321                         )); break;  // xoo oxo ...
    //      case 19237: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oxo ...
    //      case 19238: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // .oo oxo ...
    //      case 19239: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // x.o oxo ...
    //      case 19240: Assert::IsTrue(v == PositionValue(-  302                         )); break;  // o.o oxo ...
    //      case 19241: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // ..o oxo ...
    //      case 19242: Assert::IsTrue(v == PositionValue(+  307                         )); break;  // xx. oxo ...
    //      case 19243: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ox. oxo ...
    //      case 19244: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // .x. oxo ...
    //      case 19245: Assert::IsTrue(v == PositionValue(-  113                         )); break;  // xo. oxo ...
    //      case 19246: Assert::IsTrue(v == PositionValue(-  460                         )); break;  // oo. oxo ...
    //      case 19247: Assert::IsTrue(v == PositionValue(-  243                         )); break;  // .o. oxo ...
    //      case 19248: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // x.. oxo ...
    //      case 19249: Assert::IsTrue(v == PositionValue(-  172                         )); break;  // o.. oxo ...
    //      case 19250: Assert::IsTrue(v == PositionValue(-   42                         )); break;  // ... oxo ...
    //      case 19251: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .xo ...
    //      case 19252: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // oxx .xo ...
    //      case 19253: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // .xx .xo ...
    //      case 19254: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // xox .xo ...
    //      case 19255: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // oox .xo ...
    //      case 19256: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .ox .xo ...
    //      case 19257: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // x.x .xo ...
    //      case 19258: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // o.x .xo ...
    //      case 19259: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ..x .xo ...
    //      case 19260: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // xxo .xo ...
    //      case 19261: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // oxo .xo ...
    //      case 19262: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // .xo .xo ...
    //      case 19263: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // xoo .xo ...
    //      case 19264: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .xo ...
    //      case 19265: Assert::IsTrue(v == PositionValue(-  337                         )); break;  // .oo .xo ...
    //      case 19266: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // x.o .xo ...
    //      case 19267: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.o .xo ...
    //      case 19268: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // ..o .xo ...
    //      case 19269: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // xx. .xo ...
    //      case 19270: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // ox. .xo ...
    //      case 19271: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // .x. .xo ...
    //      case 19272: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xo. .xo ...
    //      case 19273: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // oo. .xo ...
    //      case 19274: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // .o. .xo ...
    //      case 19275: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // x.. .xo ...
    //      case 19276: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // o.. .xo ...
    //      case 19277: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // ... .xo ...
    //      case 19278: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xoo ...
    //      case 19279: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // oxx xoo ...
    //      case 19280: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // .xx xoo ...
    //      case 19281: Assert::IsTrue(v == PositionValue(-  163                         )); break;  // xox xoo ...
    //      case 19282: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // oox xoo ...
    //      case 19283: Assert::IsTrue(v == PositionValue(-  293                         )); break;  // .ox xoo ...
    //      case 19284: Assert::IsTrue(v == PositionValue(+   47                         )); break;  // x.x xoo ...
    //      case 19285: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // o.x xoo ...
    //      case 19286: Assert::IsTrue(v == PositionValue(-   83                         )); break;  // ..x xoo ...
    //      case 19287: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // xxo xoo ...
    //      case 19288: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // oxo xoo ...
    //      case 19289: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // .xo xoo ...
    //      case 19290: Assert::IsTrue(v == PositionValue(-  501                         )); break;  // xoo xoo ...
    //      case 19291: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xoo ...
    //      case 19292: Assert::IsTrue(v == PositionValue(-  640                         )); break;  // .oo xoo ...
    //      case 19293: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // x.o xoo ...
    //      case 19294: Assert::IsTrue(v == PositionValue(-  473                         )); break;  // o.o xoo ...
    //      case 19295: Assert::IsTrue(v == PositionValue(-  343                         )); break;  // ..o xoo ...
    //      case 19296: Assert::IsTrue(v == PositionValue(+  214                         )); break;  // xx. xoo ...
    //      case 19297: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ox. xoo ...
    //      case 19298: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // .x. xoo ...
    //      case 19299: Assert::IsTrue(v == PositionValue(-  206                         )); break;  // xo. xoo ...
    //      case 19300: Assert::IsTrue(v == PositionValue(-  553                         )); break;  // oo. xoo ...
    //      case 19301: Assert::IsTrue(v == PositionValue(-  336                         )); break;  // .o. xoo ...
    //      case 19302: Assert::IsTrue(v == PositionValue(+    4                         )); break;  // x.. xoo ...
    //      case 19303: Assert::IsTrue(v == PositionValue(-  256                         )); break;  // o.. xoo ...
    //      case 19304: Assert::IsTrue(v == PositionValue(-  126                         )); break;  // ... xoo ...
    //      case 19305: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ooo ...
    //      case 19306: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxx ooo ...
    //      case 19307: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xx ooo ...
    //      case 19308: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xox ooo ...
    //      case 19309: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oox ooo ...
    //      case 19310: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .ox ooo ...
    //      case 19311: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.x ooo ...
    //      case 19312: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.x ooo ...
    //      case 19313: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..x ooo ...
    //      case 19314: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xxo ooo ...
    //      case 19315: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oxo ooo ...
    //      case 19316: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .xo ooo ...
    //      case 19317: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xoo ooo ...
    //      case 19318: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ooo ...
    //      case 19319: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .oo ooo ...
    //      case 19320: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.o ooo ...
    //      case 19321: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.o ooo ...
    //      case 19322: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ..o ooo ...
    //      case 19323: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xx. ooo ...
    //      case 19324: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ox. ooo ...
    //      case 19325: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .x. ooo ...
    //      case 19326: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // xo. ooo ...
    //      case 19327: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // oo. ooo ...
    //      case 19328: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // .o. ooo ...
    //      case 19329: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // x.. ooo ...
    //      case 19330: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // o.. ooo ...
    //      case 19331: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ... ooo ...
    //      case 19332: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .oo ...
    //      case 19333: Assert::IsTrue(v == PositionValue(-  144                         )); break;  // oxx .oo ...
    //      case 19334: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // .xx .oo ...
    //      case 19335: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // xox .oo ...
    //      case 19336: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // oox .oo ...
    //      case 19337: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // .ox .oo ...
    //      case 19338: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // x.x .oo ...
    //      case 19339: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // o.x .oo ...
    //      case 19340: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // ..x .oo ...
    //      case 19341: Assert::IsTrue(v == PositionValue(-  231                         )); break;  // xxo .oo ...
    //      case 19342: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // oxo .oo ...
    //      case 19343: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // .xo .oo ...
    //      case 19344: Assert::IsTrue(v == PositionValue(-  642                         )); break;  // xoo .oo ...
    //      case 19345: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .oo ...
    //      case 19346: Assert::IsTrue(v == PositionValue(-  694                         )); break;  // .oo .oo ...
    //      case 19347: Assert::IsTrue(v == PositionValue(-  354                         )); break;  // x.o .oo ...
    //      case 19348: Assert::IsTrue(v == PositionValue(-  527                         )); break;  // o.o .oo ...
    //      case 19349: Assert::IsTrue(v == PositionValue(-  397                         )); break;  // ..o .oo ...
    //      case 19350: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // xx. .oo ...
    //      case 19351: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // ox. .oo ...
    //      case 19352: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // .x. .oo ...
    //      case 19353: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // xo. .oo ...
    //      case 19354: Assert::IsTrue(v == PositionValue(-  607                         )); break;  // oo. .oo ...
    //      case 19355: Assert::IsTrue(v == PositionValue(-  390                         )); break;  // .o. .oo ...
    //      case 19356: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // x.. .oo ...
    //      case 19357: Assert::IsTrue(v == PositionValue(-  310                         )); break;  // o.. .oo ...
    //      case 19358: Assert::IsTrue(v == PositionValue(-  180                         )); break;  // ... .oo ...
    //      case 19359: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.o ...
    //      case 19360: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // oxx x.o ...
    //      case 19361: Assert::IsTrue(v == PositionValue(+  253                         )); break;  // .xx x.o ...
    //      case 19362: Assert::IsTrue(v == PositionValue(+   50                         )); break;  // xox x.o ...
    //      case 19363: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // oox x.o ...
    //      case 19364: Assert::IsTrue(v == PositionValue(-   80                         )); break;  // .ox x.o ...
    //      case 19365: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // x.x x.o ...
    //      case 19366: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x x.o ...
    //      case 19367: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ..x x.o ...
    //      case 19368: Assert::IsTrue(v == PositionValue(+  201                         )); break;  // xxo x.o ...
    //      case 19369: Assert::IsTrue(v == PositionValue(-   50                         )); break;  // oxo x.o ...
    //      case 19370: Assert::IsTrue(v == PositionValue(-    7                         )); break;  // .xo x.o ...
    //      case 19371: Assert::IsTrue(v == PositionValue(-  201                         )); break;  // xoo x.o ...
    //      case 19372: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.o ...
    //      case 19373: Assert::IsTrue(v == PositionValue(-  340                         )); break;  // .oo x.o ...
    //      case 19374: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o x.o ...
    //      case 19375: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // o.o x.o ...
    //      case 19376: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ..o x.o ...
    //      case 19377: Assert::IsTrue(v == PositionValue(+  340                         )); break;  // xx. x.o ...
    //      case 19378: Assert::IsTrue(v == PositionValue(+   80                         )); break;  // ox. x.o ...
    //      case 19379: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // .x. x.o ...
    //      case 19380: Assert::IsTrue(v == PositionValue(+    7                         )); break;  // xo. x.o ...
    //      case 19381: Assert::IsTrue(v == PositionValue(-  253                         )); break;  // oo. x.o ...
    //      case 19382: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // .o. x.o ...
    //      case 19383: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // x.. x.o ...
    //      case 19384: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.. x.o ...
    //      case 19385: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... x.o ...
    //      case 19386: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.o ...
    //      case 19387: Assert::IsTrue(v == PositionValue(-   54                         )); break;  // oxx o.o ...
    //      case 19388: Assert::IsTrue(v == PositionValue(+   85                         )); break;  // .xx o.o ...
    //      case 19389: Assert::IsTrue(v == PositionValue(-  205                         )); break;  // xox o.o ...
    //      case 19390: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // oox o.o ...
    //      case 19391: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // .ox o.o ...
    //      case 19392: Assert::IsTrue(v == PositionValue(-    4                         )); break;  // x.x o.o ...
    //      case 19393: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // o.x o.o ...
    //      case 19394: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // ..x o.o ...
    //      case 19395: Assert::IsTrue(v == PositionValue(-   54                         )); break;  // xxo o.o ...
    //      case 19396: Assert::IsTrue(v == PositionValue(-  305                         )); break;  // oxo o.o ...
    //      case 19397: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .xo o.o ...
    //      case 19398: Assert::IsTrue(v == PositionValue(-  456                         )); break;  // xoo o.o ...
    //      case 19399: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.o ...
    //      case 19400: Assert::IsTrue(v == PositionValue(-  508                         )); break;  // .oo o.o ...
    //      case 19401: Assert::IsTrue(v == PositionValue(-  177                         )); break;  // x.o o.o ...
    //      case 19402: Assert::IsTrue(v == PositionValue(-  350                         )); break;  // o.o o.o ...
    //      case 19403: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // ..o o.o ...
    //      case 19404: Assert::IsTrue(v == PositionValue(+   85                         )); break;  // xx. o.o ...
    //      case 19405: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // ox. o.o ...
    //      case 19406: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .x. o.o ...
    //      case 19407: Assert::IsTrue(v == PositionValue(-  248                         )); break;  // xo. o.o ...
    //      case 19408: Assert::IsTrue(v == PositionValue(-  508                         )); break;  // oo. o.o ...
    //      case 19409: Assert::IsTrue(v == PositionValue(-  291                         )); break;  // .o. o.o ...
    //      case 19410: Assert::IsTrue(v == PositionValue(-   47                         )); break;  // x.. o.o ...
    //      case 19411: Assert::IsTrue(v == PositionValue(-  220                         )); break;  // o.. o.o ...
    //      case 19412: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // ... o.o ...
    //      case 19413: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ..o ...
    //      case 19414: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // oxx ..o ...
    //      case 19415: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .xx ..o ...
    //      case 19416: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // xox ..o ...
    //      case 19417: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // oox ..o ...
    //      case 19418: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // .ox ..o ...
    //      case 19419: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.x ..o ...
    //      case 19420: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // o.x ..o ...
    //      case 19421: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ..x ..o ...
    //      case 19422: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // xxo ..o ...
    //      case 19423: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // oxo ..o ...
    //      case 19424: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .xo ..o ...
    //      case 19425: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // xoo ..o ...
    //      case 19426: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ..o ...
    //      case 19427: Assert::IsTrue(v == PositionValue(-  385                         )); break;  // .oo ..o ...
    //      case 19428: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // x.o ..o ...
    //      case 19429: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // o.o ..o ...
    //      case 19430: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // ..o ..o ...
    //      case 19431: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xx. ..o ...
    //      case 19432: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ox. ..o ...
    //      case 19433: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .x. ..o ...
    //      case 19434: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // xo. ..o ...
    //      case 19435: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // oo. ..o ...
    //      case 19436: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .o. ..o ...
    //      case 19437: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.. ..o ...
    //      case 19438: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // o.. ..o ...
    //      case 19439: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ... ..o ...
    //      case 19440: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xx. ...
    //      case 19441: Assert::IsTrue(v == PositionValue(+  555                         )); break;  // oxx xx. ...
    //      case 19442: Assert::IsTrue(v == PositionValue(+  607                         )); break;  // .xx xx. ...
    //      case 19443: Assert::IsTrue(v == PositionValue(+  482                         )); break;  // xox xx. ...
    //      case 19444: Assert::IsTrue(v == PositionValue(+  144                         )); break;  // oox xx. ...
    //      case 19445: Assert::IsTrue(v == PositionValue(+  265                         )); break;  // .ox xx. ...
    //      case 19446: Assert::IsTrue(v == PositionValue(+  527                         )); break;  // x.x xx. ...
    //      case 19447: Assert::IsTrue(v == PositionValue(+  267                         )); break;  // o.x xx. ...
    //      case 19448: Assert::IsTrue(v == PositionValue(+  310                         )); break;  // ..x xx. ...
    //      case 19449: Assert::IsTrue(v == PositionValue(+  642                         )); break;  // xxo xx. ...
    //      case 19450: Assert::IsTrue(v == PositionValue(+  304                         )); break;  // oxo xx. ...
    //      case 19451: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // .xo xx. ...
    //      case 19452: Assert::IsTrue(v == PositionValue(+  231                         )); break;  // xoo xx. ...
    //      case 19453: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xx. ...
    //      case 19454: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // .oo xx. ...
    //      case 19455: Assert::IsTrue(v == PositionValue(+  354                         )); break;  // x.o xx. ...
    //      case 19456: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // o.o xx. ...
    //      case 19457: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // ..o xx. ...
    //      case 19458: Assert::IsTrue(v == PositionValue(+  694                         )); break;  // xx. xx. ...
    //      case 19459: Assert::IsTrue(v == PositionValue(+  347                         )); break;  // ox. xx. ...
    //      case 19460: Assert::IsTrue(v == PositionValue(+  390                         )); break;  // .x. xx. ...
    //      case 19461: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // xo. xx. ...
    //      case 19462: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // oo. xx. ...
    //      case 19463: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // .o. xx. ...
    //      case 19464: Assert::IsTrue(v == PositionValue(+  397                         )); break;  // x.. xx. ...
    //      case 19465: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // o.. xx. ...
    //      case 19466: Assert::IsTrue(v == PositionValue(+  180                         )); break;  // ... xx. ...
    //      case 19467: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ox. ...
    //      case 19468: Assert::IsTrue(v == PositionValue(+  213                         )); break;  // oxx ox. ...
    //      case 19469: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // .xx ox. ...
    //      case 19470: Assert::IsTrue(v == PositionValue(+  140                         )); break;  // xox ox. ...
    //      case 19471: Assert::IsTrue(v == PositionValue(-  198                         )); break;  // oox ox. ...
    //      case 19472: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // .ox ox. ...
    //      case 19473: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // x.x ox. ...
    //      case 19474: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // o.x ox. ...
    //      case 19475: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // ..x ox. ...
    //      case 19476: Assert::IsTrue(v == PositionValue(+  300                         )); break;  // xxo ox. ...
    //      case 19477: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // oxo ox. ...
    //      case 19478: Assert::IsTrue(v == PositionValue(+   92                         )); break;  // .xo ox. ...
    //      case 19479: Assert::IsTrue(v == PositionValue(-  111                         )); break;  // xoo ox. ...
    //      case 19480: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ox. ...
    //      case 19481: Assert::IsTrue(v == PositionValue(-  250                         )); break;  // .oo ox. ...
    //      case 19482: Assert::IsTrue(v == PositionValue(+   90                         )); break;  // x.o ox. ...
    //      case 19483: Assert::IsTrue(v == PositionValue(-  170                         )); break;  // o.o ox. ...
    //      case 19484: Assert::IsTrue(v == PositionValue(-   40                         )); break;  // ..o ox. ...
    //      case 19485: Assert::IsTrue(v == PositionValue(+  352                         )); break;  // xx. ox. ...
    //      case 19486: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // ox. ox. ...
    //      case 19487: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // .x. ox. ...
    //      case 19488: Assert::IsTrue(v == PositionValue(+   10                         )); break;  // xo. ox. ...
    //      case 19489: Assert::IsTrue(v == PositionValue(-  337                         )); break;  // oo. ox. ...
    //      case 19490: Assert::IsTrue(v == PositionValue(-  120                         )); break;  // .o. ox. ...
    //      case 19491: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // x.. ox. ...
    //      case 19492: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // o.. ox. ...
    //      case 19493: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // ... ox. ...
    //      case 19494: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .x. ...
    //      case 19495: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // oxx .x. ...
    //      case 19496: Assert::IsTrue(v == PositionValue(+  397                         )); break;  // .xx .x. ...
    //      case 19497: Assert::IsTrue(v == PositionValue(+  263                         )); break;  // xox .x. ...
    //      case 19498: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // oox .x. ...
    //      case 19499: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // .ox .x. ...
    //      case 19500: Assert::IsTrue(v == PositionValue(+  308                         )); break;  // x.x .x. ...
    //      case 19501: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // o.x .x. ...
    //      case 19502: Assert::IsTrue(v == PositionValue(+  178                         )); break;  // ..x .x. ...
    //      case 19503: Assert::IsTrue(v == PositionValue(+  345                         )); break;  // xxo .x. ...
    //      case 19504: Assert::IsTrue(v == PositionValue(+   94                         )); break;  // oxo .x. ...
    //      case 19505: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // .xo .x. ...
    //      case 19506: Assert::IsTrue(v == PositionValue(+   12                         )); break;  // xoo .x. ...
    //      case 19507: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .x. ...
    //      case 19508: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // .oo .x. ...
    //      case 19509: Assert::IsTrue(v == PositionValue(+  135                         )); break;  // x.o .x. ...
    //      case 19510: Assert::IsTrue(v == PositionValue(-   38                         )); break;  // o.o .x. ...
    //      case 19511: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // ..o .x. ...
    //      case 19512: Assert::IsTrue(v == PositionValue(+  397                         )); break;  // xx. .x. ...
    //      case 19513: Assert::IsTrue(v == PositionValue(+  137                         )); break;  // ox. .x. ...
    //      case 19514: Assert::IsTrue(v == PositionValue(+  180                         )); break;  // .x. .x. ...
    //      case 19515: Assert::IsTrue(v == PositionValue(+  133                         )); break;  // xo. .x. ...
    //      case 19516: Assert::IsTrue(v == PositionValue(-  127                         )); break;  // oo. .x. ...
    //      case 19517: Assert::IsTrue(v == PositionValue(+    3                         )); break;  // .o. .x. ...
    //      case 19518: Assert::IsTrue(v == PositionValue(+  178                         )); break;  // x.. .x. ...
    //      case 19519: Assert::IsTrue(v == PositionValue(+    5                         )); break;  // o.. .x. ...
    //      case 19520: Assert::IsTrue(v == PositionValue(+   48                         )); break;  // ... .x. ...
    //      case 19521: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx xo. ...
    //      case 19522: Assert::IsTrue(v == PositionValue(+  111                         )); break;  // oxx xo. ...
    //      case 19523: Assert::IsTrue(v == PositionValue(+  250                         )); break;  // .xx xo. ...
    //      case 19524: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // xox xo. ...
    //      case 19525: Assert::IsTrue(v == PositionValue(-  300                         )); break;  // oox xo. ...
    //      case 19526: Assert::IsTrue(v == PositionValue(-   92                         )); break;  // .ox xo. ...
    //      case 19527: Assert::IsTrue(v == PositionValue(+  170                         )); break;  // x.x xo. ...
    //      case 19528: Assert::IsTrue(v == PositionValue(-   90                         )); break;  // o.x xo. ...
    //      case 19529: Assert::IsTrue(v == PositionValue(+   40                         )); break;  // ..x xo. ...
    //      case 19530: Assert::IsTrue(v == PositionValue(+  198                         )); break;  // xxo xo. ...
    //      case 19531: Assert::IsTrue(v == PositionValue(-  140                         )); break;  // oxo xo. ...
    //      case 19532: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // .xo xo. ...
    //      case 19533: Assert::IsTrue(v == PositionValue(-  213                         )); break;  // xoo xo. ...
    //      case 19534: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo xo. ...
    //      case 19535: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // .oo xo. ...
    //      case 19536: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // x.o xo. ...
    //      case 19537: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // o.o xo. ...
    //      case 19538: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ..o xo. ...
    //      case 19539: Assert::IsTrue(v == PositionValue(+  337                         )); break;  // xx. xo. ...
    //      case 19540: Assert::IsTrue(v == PositionValue(-   10                         )); break;  // ox. xo. ...
    //      case 19541: Assert::IsTrue(v == PositionValue(+  120                         )); break;  // .x. xo. ...
    //      case 19542: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // xo. xo. ...
    //      case 19543: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // oo. xo. ...
    //      case 19544: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // .o. xo. ...
    //      case 19545: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // x.. xo. ...
    //      case 19546: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // o.. xo. ...
    //      case 19547: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // ... xo. ...
    //      case 19548: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx oo. ...
    //      case 19549: Assert::IsTrue(v == PositionValue(-  231                         )); break;  // oxx oo. ...
    //      case 19550: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // .xx oo. ...
    //      case 19551: Assert::IsTrue(v == PositionValue(-  304                         )); break;  // xox oo. ...
    //      case 19552: Assert::IsTrue(v == PositionValue(-  642                         )); break;  // oox oo. ...
    //      case 19553: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // .ox oo. ...
    //      case 19554: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // x.x oo. ...
    //      case 19555: Assert::IsTrue(v == PositionValue(-  354                         )); break;  // o.x oo. ...
    //      case 19556: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // ..x oo. ...
    //      case 19557: Assert::IsTrue(v == PositionValue(-  144                         )); break;  // xxo oo. ...
    //      case 19558: Assert::IsTrue(v == PositionValue(-  482                         )); break;  // oxo oo. ...
    //      case 19559: Assert::IsTrue(v == PositionValue(-  265                         )); break;  // .xo oo. ...
    //      case 19560: Assert::IsTrue(v == PositionValue(-  555                         )); break;  // xoo oo. ...
    //      case 19561: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo oo. ...
    //      case 19562: Assert::IsTrue(v == PositionValue(-  607                         )); break;  // .oo oo. ...
    //      case 19563: Assert::IsTrue(v == PositionValue(-  267                         )); break;  // x.o oo. ...
    //      case 19564: Assert::IsTrue(v == PositionValue(-  527                         )); break;  // o.o oo. ...
    //      case 19565: Assert::IsTrue(v == PositionValue(-  310                         )); break;  // ..o oo. ...
    //      case 19566: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // xx. oo. ...
    //      case 19567: Assert::IsTrue(v == PositionValue(-  352                         )); break;  // ox. oo. ...
    //      case 19568: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // .x. oo. ...
    //      case 19569: Assert::IsTrue(v == PositionValue(-  347                         )); break;  // xo. oo. ...
    //      case 19570: Assert::IsTrue(v == PositionValue(-  694                         )); break;  // oo. oo. ...
    //      case 19571: Assert::IsTrue(v == PositionValue(-  390                         )); break;  // .o. oo. ...
    //      case 19572: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // x.. oo. ...
    //      case 19573: Assert::IsTrue(v == PositionValue(-  397                         )); break;  // o.. oo. ...
    //      case 19574: Assert::IsTrue(v == PositionValue(-  180                         )); break;  // ... oo. ...
    //      case 19575: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx .o. ...
    //      case 19576: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // oxx .o. ...
    //      case 19577: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // .xx .o. ...
    //      case 19578: Assert::IsTrue(v == PositionValue(-   94                         )); break;  // xox .o. ...
    //      case 19579: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // oox .o. ...
    //      case 19580: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // .ox .o. ...
    //      case 19581: Assert::IsTrue(v == PositionValue(+   38                         )); break;  // x.x .o. ...
    //      case 19582: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // o.x .o. ...
    //      case 19583: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // ..x .o. ...
    //      case 19584: Assert::IsTrue(v == PositionValue(-   12                         )); break;  // xxo .o. ...
    //      case 19585: Assert::IsTrue(v == PositionValue(-  263                         )); break;  // oxo .o. ...
    //      case 19586: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // .xo .o. ...
    //      case 19587: Assert::IsTrue(v == PositionValue(-  345                         )); break;  // xoo .o. ...
    //      case 19588: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo .o. ...
    //      case 19589: Assert::IsTrue(v == PositionValue(-  397                         )); break;  // .oo .o. ...
    //      case 19590: Assert::IsTrue(v == PositionValue(-  135                         )); break;  // x.o .o. ...
    //      case 19591: Assert::IsTrue(v == PositionValue(-  308                         )); break;  // o.o .o. ...
    //      case 19592: Assert::IsTrue(v == PositionValue(-  178                         )); break;  // ..o .o. ...
    //      case 19593: Assert::IsTrue(v == PositionValue(+  127                         )); break;  // xx. .o. ...
    //      case 19594: Assert::IsTrue(v == PositionValue(-  133                         )); break;  // ox. .o. ...
    //      case 19595: Assert::IsTrue(v == PositionValue(-    3                         )); break;  // .x. .o. ...
    //      case 19596: Assert::IsTrue(v == PositionValue(-  137                         )); break;  // xo. .o. ...
    //      case 19597: Assert::IsTrue(v == PositionValue(-  397                         )); break;  // oo. .o. ...
    //      case 19598: Assert::IsTrue(v == PositionValue(-  180                         )); break;  // .o. .o. ...
    //      case 19599: Assert::IsTrue(v == PositionValue(-    5                         )); break;  // x.. .o. ...
    //      case 19600: Assert::IsTrue(v == PositionValue(-  178                         )); break;  // o.. .o. ...
    //      case 19601: Assert::IsTrue(v == PositionValue(-   48                         )); break;  // ... .o. ...
    //      case 19602: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx x.. ...
    //      case 19603: Assert::IsTrue(v == PositionValue(+  246                         )); break;  // oxx x.. ...
    //      case 19604: Assert::IsTrue(v == PositionValue(+  298                         )); break;  // .xx x.. ...
    //      case 19605: Assert::IsTrue(v == PositionValue(+  173                         )); break;  // xox x.. ...
    //      case 19606: Assert::IsTrue(v == PositionValue(-   78                         )); break;  // oox x.. ...
    //      case 19607: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // .ox x.. ...
    //      case 19608: Assert::IsTrue(v == PositionValue(+  218                         )); break;  // x.x x.. ...
    //      case 19609: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // o.x x.. ...
    //      case 19610: Assert::IsTrue(v == PositionValue(+   88                         )); break;  // ..x x.. ...
    //      case 19611: Assert::IsTrue(v == PositionValue(+  333                         )); break;  // xxo x.. ...
    //      case 19612: Assert::IsTrue(v == PositionValue(+   82                         )); break;  // oxo x.. ...
    //      case 19613: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // .xo x.. ...
    //      case 19614: Assert::IsTrue(v == PositionValue(+    9                         )); break;  // xoo x.. ...
    //      case 19615: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo x.. ...
    //      case 19616: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // .oo x.. ...
    //      case 19617: Assert::IsTrue(v == PositionValue(+  132                         )); break;  // x.o x.. ...
    //      case 19618: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // o.o x.. ...
    //      case 19619: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ..o x.. ...
    //      case 19620: Assert::IsTrue(v == PositionValue(+  385                         )); break;  // xx. x.. ...
    //      case 19621: Assert::IsTrue(v == PositionValue(+  125                         )); break;  // ox. x.. ...
    //      case 19622: Assert::IsTrue(v == PositionValue(+  168                         )); break;  // .x. x.. ...
    //      case 19623: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xo. x.. ...
    //      case 19624: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // oo. x.. ...
    //      case 19625: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .o. x.. ...
    //      case 19626: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // x.. x.. ...
    //      case 19627: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // o.. x.. ...
    //      case 19628: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // ... x.. ...
    //      case 19629: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx o.. ...
    //      case 19630: Assert::IsTrue(v == PositionValue(-    9                         )); break;  // oxx o.. ...
    //      case 19631: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // .xx o.. ...
    //      case 19632: Assert::IsTrue(v == PositionValue(-   82                         )); break;  // xox o.. ...
    //      case 19633: Assert::IsTrue(v == PositionValue(-  333                         )); break;  // oox o.. ...
    //      case 19634: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // .ox o.. ...
    //      case 19635: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // x.x o.. ...
    //      case 19636: Assert::IsTrue(v == PositionValue(-  132                         )); break;  // o.x o.. ...
    //      case 19637: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // ..x o.. ...
    //      case 19638: Assert::IsTrue(v == PositionValue(+   78                         )); break;  // xxo o.. ...
    //      case 19639: Assert::IsTrue(v == PositionValue(-  173                         )); break;  // oxo o.. ...
    //      case 19640: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // .xo o.. ...
    //      case 19641: Assert::IsTrue(v == PositionValue(-  246                         )); break;  // xoo o.. ...
    //      case 19642: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo o.. ...
    //      case 19643: Assert::IsTrue(v == PositionValue(-  298                         )); break;  // .oo o.. ...
    //      case 19644: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // x.o o.. ...
    //      case 19645: Assert::IsTrue(v == PositionValue(-  218                         )); break;  // o.o o.. ...
    //      case 19646: Assert::IsTrue(v == PositionValue(-   88                         )); break;  // ..o o.. ...
    //      case 19647: Assert::IsTrue(v == PositionValue(+  130                         )); break;  // xx. o.. ...
    //      case 19648: Assert::IsTrue(v == PositionValue(-  130                         )); break;  // ox. o.. ...
    //      case 19649: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // .x. o.. ...
    //      case 19650: Assert::IsTrue(v == PositionValue(-  125                         )); break;  // xo. o.. ...
    //      case 19651: Assert::IsTrue(v == PositionValue(-  385                         )); break;  // oo. o.. ...
    //      case 19652: Assert::IsTrue(v == PositionValue(-  168                         )); break;  // .o. o.. ...
    //      case 19653: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // x.. o.. ...
    //      case 19654: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // o.. o.. ...
    //      case 19655: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // ... o.. ...
    //      case 19656: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Won )); break;  // xxx ... ...
    //      case 19657: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // oxx ... ...
    //      case 19658: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // .xx ... ...
    //      case 19659: Assert::IsTrue(v == PositionValue(+   41                         )); break;  // xox ... ...
    //      case 19660: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // oox ... ...
    //      case 19661: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // .ox ... ...
    //      case 19662: Assert::IsTrue(v == PositionValue(+   86                         )); break;  // x.x ... ...
    //      case 19663: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // o.x ... ...
    //      case 19664: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // ..x ... ...
    //      case 19665: Assert::IsTrue(v == PositionValue(+  123                         )); break;  // xxo ... ...
    //      case 19666: Assert::IsTrue(v == PositionValue(-   41                         )); break;  // oxo ... ...
    //      case 19667: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // .xo ... ...
    //      case 19668: Assert::IsTrue(v == PositionValue(-  123                         )); break;  // xoo ... ...
    //      case 19669: Assert::IsTrue(v == PositionValue(PositionValue::PValueType::Lost)); break;  // ooo ... ...
    //      case 19670: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // .oo ... ...
    //      case 19671: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // x.o ... ...
    //      case 19672: Assert::IsTrue(v == PositionValue(-   86                         )); break;  // o.o ... ...
    //      case 19673: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // ..o ... ...
    //      case 19674: Assert::IsTrue(v == PositionValue(+  175                         )); break;  // xx. ... ...
    //      case 19675: Assert::IsTrue(v == PositionValue(+    2                         )); break;  // ox. ... ...
    //      case 19676: Assert::IsTrue(v == PositionValue(+   45                         )); break;  // .x. ... ...
    //      case 19677: Assert::IsTrue(v == PositionValue(-    2                         )); break;  // xo. ... ...
    //      case 19678: Assert::IsTrue(v == PositionValue(-  175                         )); break;  // oo. ... ...
    //      case 19679: Assert::IsTrue(v == PositionValue(-   45                         )); break;  // .o. ... ...
    //      case 19680: Assert::IsTrue(v == PositionValue(+   43                         )); break;  // x.. ... ...
    //      case 19681: Assert::IsTrue(v == PositionValue(-   43                         )); break;  // o.. ... ...
    //      case 19682: Assert::IsTrue(v == PositionValue(+    0                         )); break;  // ... ... ...
    //      default:   break;
    //    }

    //  }
    //}

  };

  TEST_CLASS(_AI)
  {

  public:
    TEST_METHOD(_TODO)
    {
      Assert::IsTrue(true);



    }

  };
}
